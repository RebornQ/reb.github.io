<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>校招 - 分类 - Reborn's Blog</title><link>https://reb.mallotec.com/categories/%E6%A0%A1%E6%8B%9B/</link><description>校招 - 分类 - Reborn's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ren.xiaoyao58@gmail.com (Reborn)</managingEditor><webMaster>ren.xiaoyao58@gmail.com (Reborn)</webMaster><lastBuildDate>Fri, 10 Dec 2021 16:19:19 +0800</lastBuildDate><atom:link href="https://reb.mallotec.com/categories/%E6%A0%A1%E6%8B%9B/" rel="self" type="application/rss+xml"/><item><title>Android ANR 原因、定位和避免</title><link>https://reb.mallotec.com/post/d1aa87c3/</link><pubDate>Fri, 10 Dec 2021 16:19:19 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/d1aa87c3/</guid><description>简介 ANR 全称 Application Not Responding，即应用程序无响应。 主要原因（为什么会发生 ANR？） 主线程（UI 线程）在规定时间内没有处理完相应的工作，就</description></item><item><title>Thread 和 Runnable 的区别</title><link>https://reb.mallotec.com/post/6ee1cab0/</link><pubDate>Thu, 09 Dec 2021 13:41:52 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/6ee1cab0/</guid><description>对问题的疑惑 其实这个问题问的很奇怪，看到这个问题的瞬间，都会想到问的是： new Thread(runnable).start() 和 runnable.run() 的区别？ 可是 runnable.run() 明明就只是单纯地执行一个对象里面的方法， thr</description></item><item><title>8. 数据库 校招复习（持续更新~）</title><link>https://reb.mallotec.com/post/4d2729e2/</link><pubDate>Mon, 12 Aug 2019 10:25:16 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/4d2729e2/</guid><description>数据库 常见面试题 三大范式（2020卓动春招面试真题）</description></item><item><title>7. 设计模式 校招复习（持续更新~）</title><link>https://reb.mallotec.com/post/b05a5a01/</link><pubDate>Mon, 12 Aug 2019 10:24:36 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/b05a5a01/</guid><description>设计模式 建造者模式（Builder Pattern） 建造者模式（Builder Pattern）- 最易懂的设计模式解析 适配器模式（Adapter</description></item><item><title>6. Android 校招复习篇五･其他</title><link>https://reb.mallotec.com/post/7afd20c5/</link><pubDate>Mon, 12 Aug 2019 10:23:02 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/7afd20c5/</guid><description>SharePreference Android中最简单的数据存储方式：SharedPreferences——食梦兽 Android：这是一份全面 &amp;amp; 详细的SharePrefe</description></item><item><title>6. Android 校招复习篇四･View</title><link>https://reb.mallotec.com/post/24eff910/</link><pubDate>Mon, 12 Aug 2019 10:23:01 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/24eff910/</guid><description>View 自定义 View 流程（原理） Android：一篇文章带你完全梳理自定义View工作流程！ Android自定义View基础：ViewRoot、Dec</description></item><item><title>6. Android 校招复习篇三･四大组件</title><link>https://reb.mallotec.com/post/e52fe569/</link><pubDate>Mon, 12 Aug 2019 10:23:00 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/e52fe569/</guid><description>Android四大组件 Activity（活动） 重学安卓：Activity 的快乐你不懂！ 启动模式 Activity的四种启动模式应用场景 android lau</description></item><item><title>6. Android 校招复习篇二･事件分发</title><link>https://reb.mallotec.com/post/c302b7c8/</link><pubDate>Mon, 12 Aug 2019 10:22:59 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/c302b7c8/</guid><description>事件分发 Android事件分发机制详解：史上最全面、最易懂 重学安卓：Activity 的快乐你不懂！ 重学安卓：学习 View 事件分发，就像外地人上了黑</description></item><item><title>6. Android 校招复习篇一･Handler</title><link>https://reb.mallotec.com/post/e7dd5054/</link><pubDate>Mon, 12 Aug 2019 10:22:58 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/e7dd5054/</guid><description>Handler Android Handler：这是一份 全面、详细的Handler机制 学习攻略 Android Handler：图文解析 Handler通信机制 的工作原理 Android Handler</description></item><item><title>5. Java 校招复习（持续更新~）</title><link>https://reb.mallotec.com/post/b3fd4b52/</link><pubDate>Mon, 12 Aug 2019 10:21:11 +0800</pubDate><author>作者</author><guid>https://reb.mallotec.com/post/b3fd4b52/</guid><description>多线程 Android多线程：你必须要了解的多线程基础知识汇总 Android：关于多线程的总结知识都在这里了！ HashMap Java：这是一份全面 &amp;amp; 详细的</description></item></channel></rss>