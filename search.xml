<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>里包恩第一款开源第三方库 plugin-locale 面世！！</title>
      <link href="/posts/7afcff16.html"/>
      <url>/posts/7afcff16.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>项目历经9个月的演化，终于从一开始为宝可梦的那样记账研究的语言切换而写的<code>Demo</code>进化成第三方库。</p><p>这是我的第一个开源第三方库，说起来还挺激动的（嗯…失眠了…）～</p><a id="more"></a><h1 id="使用文档"><a href="#使用文档" class="headerlink" title="使用文档"></a>使用文档</h1><p>一个用 Kotlin 写的多语言切换的 Android 第三方库。</p><p><del>目前只支持<code>英文/简中/繁中</code>三种语言，需要添加其他的语言可以提交 issue 或者直接联系我。</del></p><p>现在我们支持任何一种语言，但是需要你自己定义你要支持的语言列表（Key 与 Value 间的关系），详情请看👉<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a>。</p><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p><strong>（可选）项目的 build.gradle 中加入：</strong></p><blockquote><p><em>当 JCenter 无法链接的时候可以尝试使用</em></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        maven &#123; url <span class="string">&quot;https://dl.bintray.com/rebornq/maven/&quot;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>app.gradle 中加入：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">implementation <span class="string">&#x27;com.mallotec.reb:plugin-locale:&#123;last-version&#125;&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：<code>&#123;last-version&#125;</code>要替换为最新版本号</strong>，最新版本链接：<a href="https://bintray.com/rebornq/maven/plugin-locale/_latestVersion">https://bintray.com/rebornq/maven/plugin-locale/_latestVersion</a></p></blockquote><h2 id="只需三步即可食用"><a href="#只需三步即可食用" class="headerlink" title="只需三步即可食用"></a>只需三步即可食用</h2><ol><li><p>在 Application 中初始化</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalePlugin.init(<span class="keyword">this</span>)</span><br></pre></td></tr></table></figure><p> 或</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LocalePlugin.init(<span class="keyword">this</span>, &#123; 刷新界面的方式 &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>其中<code>&#123; 刷新界面的方式 &#125;</code>有三种：</p><ol><li><code>LocaleConstant.RESTART_TO_LAUNCHER_ACTIVITY</code>: 清空栈中所有<code>Activity</code>并重启到<code>LauncherActivity</code></li><li><code>LocaleConstant.RECREATE_CURRENT_ACTIVITY</code>: 重新创建当前<code>Activity</code>，**<em>默认是这种方式，可不填写**</em>。<strong>此方式可能会因为内存低无法注销广播接收器而导致内存泄漏，解决方法请查看👉<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98">常见问题</a>或👉<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin/wiki/Activity-%E5%AF%B9%E8%B1%A1%E8%A2%AB%E5%9B%9E%E6%94%B6%E6%97%B6%E8%BF%98%E6%B2%A1%E6%9D%A5%E5%BE%97%E5%8F%8A%E6%89%A7%E8%A1%8C-onDestroy-%E6%96%B9%E6%B3%95%E5%AF%BC%E8%87%B4%E6%B2%A1%E6%B3%A8%E9%94%80%E5%AF%B9%E5%BA%94%E7%9A%84%E5%B9%BF%E6%92%AD%E6%8E%A5%E6%94%B6%E5%99%A8%E5%BC%95%E5%8F%91%E7%9A%84%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F">Wiki</a></strong></li><li><code>LocaleConstant.CUSTOM_WAY_TO_UPDATE_INTERFACE</code>: 自定义刷新界面， <strong>如果选这种方式的朋友请务必查看👉<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin#%E6%9B%B4%E5%A4%9A%E7%94%A8%E6%B3%95">更多用法</a>或👉<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin/wiki/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%87%E6%8D%A2%E8%AF%AD%E8%A8%80%E5%90%8E%E5%88%B7%E6%96%B0%E7%95%8C%E9%9D%A2%E7%9A%84%E6%96%B9%E5%BC%8F">Wiki</a></strong></li></ol></blockquote></li><li><p>定义好支持的语言列表对应关系，详情请看👉<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9">注意事项</a>，如：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> fun <span class="title">getLocale</span><span class="params">(which : String)</span>: Locale </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> when (which) &#123;</span><br><span class="line">        <span class="string">&quot;0&quot;</span> -&gt; Locale.ROOT  <span class="comment">// 跟随系统</span></span><br><span class="line">        <span class="string">&quot;1&quot;</span> -&gt; Locale.ENGLISH</span><br><span class="line">        <span class="string">&quot;2&quot;</span> -&gt; Locale.SIMPLIFIED_CHINESE</span><br><span class="line">        <span class="string">&quot;3&quot;</span> -&gt; Locale.TRADITIONAL_CHINESE</span><br><span class="line">        <span class="keyword">else</span> -&gt; Locale.SIMPLIFIED_CHINESE</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>一句代码调用切换语言：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 应用切换的语言</span></span><br><span class="line">LocaleHelper.getInstance()</span><br><span class="line">    .language(getLocale(which.toString()))</span><br><span class="line">    .apply(<span class="keyword">this</span>)</span><br></pre></td></tr></table></figure><p> 若<code>&#123; 刷新界面的方式 &#125;</code>选择了第一种<code>LocaleConstant.RESTART_TO_LAUNCHER_ACTIVITY</code>，请使用下面的方式：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 应用切换的语言</span></span><br><span class="line">val intent = Intent(<span class="keyword">this</span>, TargetActivity::class.java)</span><br><span class="line">LocaleHelper.getInstance()</span><br><span class="line">    .language(getLocale(which.toString()))</span><br><span class="line">    .apply(<span class="keyword">this</span>, intent)</span><br></pre></td></tr></table></figure><p> 若<code>&#123; 刷新界面的方式 &#125;</code>选择了第三种<code>LocaleConstant.CUSTOM_WAY_TO_UPDATE_INTERFACE</code>，请使用下面的方式：</p><blockquote><p> 上面有写，<strong>查看👉<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin#%E6%9B%B4%E5%A4%9A%E7%94%A8%E6%B3%95">更多用法</a>或👉<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin/wiki/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%87%E6%8D%A2%E8%AF%AD%E8%A8%80%E5%90%8E%E5%88%B7%E6%96%B0%E7%95%8C%E9%9D%A2%E7%9A%84%E6%96%B9%E5%BC%8F">Wiki</a></strong></p></blockquote><p><strong>注意：这里的<code>this</code>必须是当前<code>Activity</code>的<code>Context</code>；<code>which</code>是所选的语言标记，详情请看下方注意事项的对应关系</strong></p></li></ol><h1 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h1><p>效果图：</p><p><img src="/images/MultiLanguageDemo-NoRestartToLauncher.gif" alt="MultiLanguageDemo-NoRestartToLaunche"></p><p>更多请查看本项目的 <a href="https://github.com/RebornQ/Plugin-Locale-Kotlin/tree/master/demo">Demo</a></p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="切换语言失效原因及解决方法"><a href="#切换语言失效原因及解决方法" class="headerlink" title="切换语言失效原因及解决方法"></a>切换语言失效原因及解决方法</h2><details><summary>AndroidX AppCompat 库 1.1.0-alpha03 以上版本导致的 Locale 被一个新的 Configuration 对象覆盖掉</summary><p>仅写出解决方法，本demo经测试无法复现问题</p><p>在<code>Activity</code>中加入以下代码即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 防止 Locale 被一个新的 Configuration 对象覆盖掉（AndroidX AppCompat 库 1.1.0-alpha03 以上版本）</span></span><br><span class="line"><span class="function">override fun <span class="title">applyOverrideConfiguration</span><span class="params">(overrideConfiguration: Configuration?)</span> </span>&#123;</span><br><span class="line">    overrideConfiguration?.setLocale(LocaleHelper.getInstance().getSetLocale())</span><br><span class="line">    <span class="keyword">super</span>.applyOverrideConfiguration(overrideConfiguration)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></details><h2 id="内存泄漏原因及解决方法"><a href="#内存泄漏原因及解决方法" class="headerlink" title="内存泄漏原因及解决方法"></a>内存泄漏原因及解决方法</h2><details><summary>Activity 对象被回收时还没来得及执行 onDestroy() 方法导致没注销对应的广播接收器引发的内存泄漏</summary><p>这种情况常见于内存低的时候<code>Activity</code>被强制回收，不走<code>onDestroy()</code>方法导致的。</p><p>遇到这种情况的朋友请自行判断内存低即将回收<code>Activity</code>的地方（<code>onTrimMemory()</code>?），</p><p>然后手动调用以下代码注销广播接收器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BroadcastReceiverManager.unregisterBroadcastReceiver(activity)</span><br></pre></td></tr></table></figure></details><h1 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h1><p>欢迎大家 Star、Fork 和提 Issue 提 PR 呀～</p><p>项目地址：<a href="https://github.com/RebornQ/Plugin-Locale-Kotlin">https://github.com/RebornQ/Plugin-Locale-Kotlin</a></p><h1 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h1><p>以下不分排名先后</p><ul><li>Thanks <a href="https://github.com/MichaelJokAr">@MichaelJokAr</a>. 感谢 <a href="https://github.com/MichaelJokAr">@MichaelJokAr</a> 的教程——<a href="https://blog.csdn.net/a1018875550/article/details/79845949">Android国际化(多语言)实现，支持8.0</a></li><li>Thanks <a href="https://github.com/Bakumon">@Bakumon</a>. 感谢 <a href="https://github.com/Bakumon">@宝可梦</a> 的指点</li><li>Thanks <a href="https://github.com/JessYanCoding">@JessYan</a>. 感谢 <a href="https://github.com/JessYanCoding">@JessYan</a> 的教程——<a href="https://juejin.im/post/590f09ec128fe100584ee6b0">我一行代码都不写实现Toolbar!你却还在封装BaseActivity?</a></li><li>Thanks <a href="https://proandroiddev.com/@yaroslavberezanskyi">@Yaroslav Berezanskyi</a>. 感谢 <a href="https://proandroiddev.com/@yaroslavberezanskyi">@Yaroslav Berezanskyi</a> 的教程——<a href="https://proandroiddev.com/change-language-programmatically-at-runtime-on-android-5e6bc15c758">How to change the language on Android at runtime and don’t go mad</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 第三方开源库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android多语言切换实现进化版--Kotlin实现</title>
      <link href="/posts/e836c9c6.html"/>
      <url>/posts/e836c9c6.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前面发了一篇“<a href="https://reb.mallotec.com/posts/8a9e22db.html">Android多语言切换实现——Java实现</a>”，但是那个方案有缺陷，于是今天想写个更完美的方案。</p><a id="more"></a><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>原理是一样的，这里不多说，看前面那篇文章的原理部分</p><h1 id="新的尝试"><a href="#新的尝试" class="headerlink" title="新的尝试"></a>新的尝试</h1><p>我又去搜了一波，看了下Activity的生命周期、Application方法的执行顺序等等…</p><h2 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h2><ol><li>App本地保存所设置的语言（通过数据库 or SharePreferences）；</li><li><strong>每个页面</strong>及<strong>App类的生命周期</strong>中判断当时语言是否是所设置语言，如果不是，则更新<code>Configuration</code>信息；<ul><li>在<code>Application</code>的<code>attachBaseContext</code>设置当前设置的语言<code>Locale</code></li><li>在<code>Application</code>的<code>onConfigurationChanged</code>（改变系统语言以及横竖屏切换时会调用到）设置当前的语言<code>Locale</code></li><li>在<code>Activity</code>的<code>attachBaseContext</code>设置当前设置的语言<code>Locale</code>，所以一般这里是创建<code>BaseActivity</code>来方便统一改变</li><li>在<code>Service</code>的<code>attachBaseContext</code>设置当前设置的语言<code>Locale</code>（如果有 Service 的话）</li><li><del>在<code>Fragment</code>的….暂时没找到，<code>Fragment</code>不知道是不是跟随<code>父Activity</code>改变语言的</del>经过测试的确是跟着Activity改变的</li></ul></li></ol><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="App本地保存所设置的语言"><a href="#App本地保存所设置的语言" class="headerlink" title="App本地保存所设置的语言"></a>App本地保存所设置的语言</h3><p>本例使用<code>SharePreferences</code>保存设置的语言，所以这里先创建一个<code>SharePreferences</code>的工具类(<code>SharePrefUtils.kt</code>)：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SharePrefUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> pref: SharedPreferences? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> map = HashMap&lt;String, Any&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> all: Map&lt;String, *&gt;</span><br><span class="line">        <span class="keyword">get</span>() = pref!!.all</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">setPref</span><span class="params">(pref: <span class="type">SharedPreferences</span>)</span></span> &#123;</span><br><span class="line">        map.clear()</span><br><span class="line">        <span class="keyword">this</span>.pref = pref</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getString</span><span class="params">(key: <span class="type">String</span>)</span></span>: String? &#123;</span><br><span class="line">        <span class="keyword">return</span> pref!!.getString(key, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getBoolean</span><span class="params">(key: <span class="type">String</span>)</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pref!!.getBoolean(key, <span class="literal">false</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">getInt</span><span class="params">(key: <span class="type">String</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pref!!.getInt(key, <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">clear</span><span class="params">()</span></span> &#123;</span><br><span class="line">        pref!!.edit().clear().apply()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">dataPrepare</span><span class="params">(key: <span class="type">String</span>, value: <span class="type">Any</span>)</span></span>: SharePrefUtils &#123;</span><br><span class="line">        <span class="comment">// map.clear();</span></span><br><span class="line">        map[key] = value</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">putData</span><span class="params">()</span></span>: SharePrefUtils &#123;</span><br><span class="line">        <span class="comment">// 获取所有键值对对象的集合</span></span><br><span class="line">        <span class="keyword">for</span> ((key, value) <span class="keyword">in</span> map) &#123;</span><br><span class="line">            <span class="comment">// 根据键值对对象获取键和值</span></span><br><span class="line">            putObject(key, value)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">putObject</span><span class="params">(key: <span class="type">String</span>, value: <span class="type">Any</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">when</span> (value) &#123;</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Boolean</span> -&gt; pref!!.edit().putBoolean(key, value).apply()</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Float</span> -&gt; pref!!.edit().putFloat(key, value).apply()</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Int</span> -&gt; pref!!.edit().putInt(key, value).apply()</span><br><span class="line">            <span class="keyword">is</span> <span class="built_in">Long</span> -&gt; pref!!.edit().putLong(key, value).apply()</span><br><span class="line">            <span class="keyword">is</span> String -&gt; pref!!.edit().putString(key, value).apply()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">var</span> context: Context? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">var</span> pref: SharedPreferences? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">setContext</span><span class="params">(context: <span class="type">Context</span>)</span></span>: Builder &#123;</span><br><span class="line">            <span class="keyword">this</span>.context = context</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">setPref</span><span class="params">(prefName: <span class="type">String</span>)</span></span>: Builder &#123;</span><br><span class="line">            <span class="keyword">if</span> (pref == <span class="literal">null</span> &amp;&amp; context != <span class="literal">null</span>) &#123;</span><br><span class="line">                pref = context!!.getSharedPreferences(prefName, Context.MODE_PRIVATE)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">fun</span> <span class="title">create</span><span class="params">()</span></span>: SharePrefUtils &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">val</span> sharePrefUtils = SharePrefUtils()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (pref != <span class="literal">null</span>) &#123;</span><br><span class="line">                sharePrefUtils.setPref(pref!!)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sharePrefUtils</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里使用<code>建造者模式</code>写这个工具类，使用方法：</p><ol><li><p>先创建实例</p> <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> sharePrefUtils: SharePrefUtils? = <span class="literal">null</span></span><br><span class="line">sharePrefUtils = SharePrefUtils</span><br><span class="line">    .Builder()</span><br><span class="line">    .setContext(context)    <span class="comment">// 传上下文Context</span></span><br><span class="line">    .setPref(<span class="string">&quot;SharePrefName&quot;</span>)   <span class="comment">// SharePref的名称</span></span><br><span class="line">    .create()</span><br></pre></td></tr></table></figure></li><li><p>根据Key获取Value</p> <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = sharePrefUtils!!.getInt(<span class="string">&quot;Key&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>把数据存到SharePref中</p> <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sharePrefUtils!!</span><br><span class="line">    .dataPrepare(<span class="string">&quot;Key&quot;</span>, value)</span><br><span class="line">    .putData()</span><br></pre></td></tr></table></figure></li></ol><h3 id="创建管理语言的工具类-LocaleManagementUtil-kt"><a href="#创建管理语言的工具类-LocaleManagementUtil-kt" class="headerlink" title="创建管理语言的工具类(LocaleManagementUtil.kt)"></a>创建管理语言的工具类(LocaleManagementUtil.kt)</h3><ul><li><p>首先，获取用户设置过的语言</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 静态属性，修复识别系统语言为英语的问题</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">var</span> systemCurrentLocal = Locale.ENGLISH <span class="comment">// 默认英语</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getSelectLanguage</span><span class="params">()</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> sharePrefUtils!!.getInt(Constant.TAG_LANGUAGE)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取选择的语言设置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Locale对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getSetLanguageLocale</span><span class="params">(context: <span class="type">Context</span>)</span></span>: Locale &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">when</span> (getSelectLanguage()) &#123;</span><br><span class="line">        <span class="number">0</span> -&gt; getSystemLocale(context) <span class="comment">// 获取系统设置的语言</span></span><br><span class="line">        <span class="number">1</span> -&gt; Locale.CHINA</span><br><span class="line">        <span class="number">2</span> -&gt; Locale.ENGLISH</span><br><span class="line">        <span class="keyword">else</span> -&gt; Locale.ENGLISH</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取系统的locale</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Locale对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getSystemLocale</span><span class="params">(context: <span class="type">Context</span>)</span></span>: Locale &#123;</span><br><span class="line">    <span class="keyword">return</span> systemCurrentLocal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取系统的locale并保存到静态变量systemCurrentLocal中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">saveSystemCurrentLanguage</span><span class="params">(context: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> locale: Locale = <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">        LocaleList.getDefault().<span class="keyword">get</span>(<span class="number">0</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Locale.getDefault()</span><br><span class="line">    &#125;</span><br><span class="line">    systemCurrentLocal = locale</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>改变语言</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">setLocal</span><span class="params">(context: <span class="type">Context</span>)</span></span>: Context &#123;</span><br><span class="line">    <span class="keyword">return</span> updateResources(context, getSetLanguageLocale(context))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">updateResources</span><span class="params">(context: <span class="type">Context</span>, locale: <span class="type">Locale</span>)</span></span>: Context &#123;</span><br><span class="line">    <span class="keyword">var</span> context = context</span><br><span class="line">    Locale.setDefault(locale)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> res = context.resources</span><br><span class="line">    <span class="keyword">val</span> config = Configuration(res.configuration)</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) &#123;</span><br><span class="line">        config.setLocale(locale)</span><br><span class="line">        context = context.createConfigurationContext(config)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        config.locale = locale</span><br><span class="line">        res.updateConfiguration(config, res.displayMetrics)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> context</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="调用方法设置语言"><a href="#调用方法设置语言" class="headerlink" title="调用方法设置语言"></a>调用方法设置语言</h3><ul><li><p>Application</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">attachBaseContext</span><span class="params">(base: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">    LocaleManageUtil.saveSystemCurrentLanguage(base)</span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(base)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate()</span><br><span class="line">    instance = <span class="keyword">this</span></span><br><span class="line">    LocaleManageUtil.setSharePref(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">companion</span> <span class="keyword">object</span> &#123;</span><br><span class="line">    <span class="keyword">lateinit</span> <span class="keyword">var</span> instance: App</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">set</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>BaseActivity</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">attachBaseContext</span><span class="params">(newBase: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(LocaleManageUtil.setLocal(newBase))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>Service</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">attachBaseContext</span><span class="params">(newBase: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.attachBaseContext(LocaleManageUtil.setLocal(newBase))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>设置语言并重启Activity到启动页</p><ul><li><p>LocaleManageUtil.kt</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">saveLanguage</span><span class="params">(select: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">    sharePrefUtils!!</span><br><span class="line">        .dataPrepare(Constant.TAG_LANGUAGE, select)</span><br><span class="line">        .putData()</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">saveSelectLanguage</span><span class="params">(context: <span class="type">Context</span>, select: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">    saveLanguage(select)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 跳转主页</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">toRestartLauncherActivity</span><span class="params">(context: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> intent = Intent(context, MainActivity::<span class="keyword">class</span>.java)</span><br><span class="line">    intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TASK or Intent.FLAG_ACTIVITY_NEW_TASK</span><br><span class="line">    context.startActivity(intent)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>SettingActivity.kt</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">selectLanguage</span><span class="params">(select: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">    LocaleManageUtil.saveSelectLanguage(<span class="keyword">this</span>, select)</span><br><span class="line">    LocaleManageUtil.toRestartLauncherActivity(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>这里稍微解释一下：在<code>Application</code>和<code>Activity</code>中，<code>attachBaseContext</code>都是在<code>onCreate</code>方法之前执行的，所以我们先在<code>Application</code>中的<code>attachBaseContext</code>获取当前系统的语言并存下来（必须在所有获取语言的方法执行前存下当前系统语言，否则在后面获取可能会出现获取到的不是系统语言而是设置的语言的情况）。</p><p>到这里理论上语言就可以成功改变啦～</p><h1 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h1><h2 id="context为applicationContext时切换语言后设置的string没有改变的问题"><a href="#context为applicationContext时切换语言后设置的string没有改变的问题" class="headerlink" title="context为applicationContext时切换语言后设置的string没有改变的问题"></a>context为applicationContext时切换语言后设置的string没有改变的问题</h2><p>我们都会在代码中调用<code>context.getResource().getString()</code>这句代码看起来没什么问题，但是你这个<code>context</code>要是用的是<code>applicationContext</code>那么问题就来了。你会发现当你切换语言后用这样方式设置的<code>string</code>没有改变，所以我们需要改动我们的代码。</p><p>解决方法就是，在切换语言后把<code>application</code>的<code>updateConfiguration</code>也要更新了，方法如下：</p><ul><li><p>LocaleManageUtil.kt</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置语言类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">setApplicationLanguage</span><span class="params">(context: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">val</span> resources = context.applicationContext.resources</span><br><span class="line">    <span class="keyword">val</span> dm = resources.displayMetrics</span><br><span class="line">    <span class="keyword">val</span> config = resources.configuration</span><br><span class="line">    <span class="keyword">val</span> locale = getSetLanguageLocale(context)</span><br><span class="line">    config.locale = locale</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">        <span class="keyword">val</span> localeList = LocaleList(locale)</span><br><span class="line">        LocaleList.setDefault(localeList)</span><br><span class="line">        config.locales = localeList</span><br><span class="line">        context.applicationContext.createConfigurationContext(config)</span><br><span class="line">        Locale.setDefault(locale)</span><br><span class="line">    &#125;</span><br><span class="line">    resources.updateConfiguration(config, dm)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">saveSelectLanguage</span><span class="params">(context: <span class="type">Context</span>, select: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">    saveLanguage(select)</span><br><span class="line">    setApplicationLanguage(context)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>App.kt</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onCreate</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate()</span><br><span class="line">    instance = <span class="keyword">this</span></span><br><span class="line">    LocaleManageUtil.setSharePref(<span class="keyword">this</span>)</span><br><span class="line">    LocaleManageUtil.setApplicationLanguage(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="解决横竖屏切换后语言变成系统语言的问题"><a href="#解决横竖屏切换后语言变成系统语言的问题" class="headerlink" title="解决横竖屏切换后语言变成系统语言的问题"></a>解决横竖屏切换后语言变成系统语言的问题</h2><ul><li><p>LocaleManageUtil.kt</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">onConfigurationChanged</span><span class="params">(context: <span class="type">Context</span>)</span></span> &#123;</span><br><span class="line">    saveSystemCurrentLanguage(context)</span><br><span class="line">    setLocal(context)</span><br><span class="line">    setApplicationLanguage(context)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>App.kt</p>  <figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onConfigurationChanged</span><span class="params">(newConfig: <span class="type">Configuration</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onConfigurationChanged(newConfig)</span><br><span class="line">    LocaleManageUtil.onConfigurationChanged(<span class="keyword">this</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h1><p>具体的源码在<a href="https://github.com/RebornQ/MultiLanguagesDemo-Kotlin">github</a>上，大家可以自行查看</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><blockquote><ul><li><a href="https://jaeger.itscoder.com/android/2016/05/14/switch-language-on-android-app.html">Android App 多语言切换</a></li><li><a href="https://cloud.tencent.com/developer/article/1035307">Android面试系列之应用内多语言切换</a></li><li><a href="https://blog.csdn.net/u010499721/article/details/51260456">android程序内多语言切换不需要重新启动的解决方案</a><ul><li>这第三篇好像讲的有点复杂，但是看完代码觉得效果应该不错，不过还没尝试</li></ul></li><li><a href="https://blog.csdn.net/wwxwwq/article/details/79278520">安卓App内多语言切换（Kotlin实现），不需要强杀重启app</a></li><li><a href="https://blog.csdn.net/vv_bug/article/details/69568519">不只是切换多语言Android（二）</a><ul><li>这个讲的不错，原理跟第三篇一样，直接在View实现，源码在<a href="https://github.com/913453448/LanguageSupport">这里</a>。</li><li>BTW：他前一篇换肤的文章——<a href="https://blog.csdn.net/vv_bug/article/details/69566660">不只是切换多语言Android（一）</a>也写的不错，有兴趣的朋友可以去看看</li></ul></li><li><a href="https://blog.csdn.net/a1018875550/article/details/79845949">Android国际化(多语言)实现，支持8.0</a><ul><li>最终我参考的最多的是这个方案 XD</li></ul></li><li><a href="https://blog.csdn.net/guolin_blog/article/details/47028975">Android Context完全解析，你所不知道的Context的各种细节</a><ul><li>郭神的文章，主要是为了看Application方法的执行顺序，看看什么方法是在<code>onCreate()</code>之前执行的——<code>attachBaseContext()</code></li></ul></li><li><a href="https://developer.android.com/guide/topics/resources/runtime-changes?hl=zh-cn#HandlingTheChange">Android Developer官方文档——处理配置变更</a></li><li><a href="https://www.jianshu.com/p/0127fb67516d">onConfigurationChanged方法介绍及问题解决</a><ul><li>可解决横竖屏切换后语言变成系统语言的问题</li></ul></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android多语言切换实现--Java实现</title>
      <link href="/posts/8a9e22db.html"/>
      <url>/posts/8a9e22db.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近在想宝可梦的那样记账要加什么功能好呢？突然想到，不如实现多语言手动切换（国际化），方便那些为了开<code>Google Assistant</code>而把语言设置成英文的朋友可以在该App使用中文界面。</p><a id="more"></a><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><ul><li>可以随着系统切换语言而切换语言（即跟随系统），不支持的语言显示默认（默认为英文）</li><li>用户可以自由选择自己想用的语言，且不会随着系统切换语言或者应用重启而还原</li></ul><p>虽然看着简单，但是实现起来还是遇到了点问题</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>参照 <a href="https://developer.android.com/reference/android/content/res/Configuration.html?hl=zh-cn">Android Developer官网</a> 上的描述，<code>Configuration</code> 包含了设备的所有的配置信息，这些配置信息会影响应用获取的资源。例如<code>string</code>资源，就是在不同的<code>res/value-xx</code>下放置不同语言的<code>strings.xml</code>实现字符的本地化，然后根据<code>Configuration</code>的<code>locale</code>属性来判断该取哪种语言的<code>string</code>资源，而这个<code>value-xx</code>目录的选择是根据<code>locale</code>这项的值来决定的。</p><p>如zh中文，就会选择<code>value-zh</code>目录，如果没有匹配到（即res中没有<code>value-zh</code>目录）就使用默认的<code>value</code>目录中的字符资源。</p><p><strong>那么我们只需要想办法改变并重新加载<code>Configuration</code>即可！！！</strong></p><blockquote><p>注：<code>value-en</code>、<code>value-zh-rCN</code>、<code>values-zh-rTW</code>分别表示<code>英文</code>、<code>简体中文</code>、<code>繁体中文</code>三种语言</p></blockquote><h1 id="初次尝试"><a href="#初次尝试" class="headerlink" title="初次尝试"></a>初次尝试</h1><h2 id="1-添加多语言文件"><a href="#1-添加多语言文件" class="headerlink" title="1. 添加多语言文件"></a>1. 添加多语言文件</h2><p>在不同的<code>value</code>文件夹下（例如<code>value</code>、<code>value-en</code>、<code>value-zh-rCN</code>、<code>values-zh-rTW</code>文件夹）添加不同语言的<code>string.xml</code>文件，我们的项目添加了英文、简体中文、繁体中文三种语言。</p><p>翻译之类的就自行翻译啦～繁体可以找个简繁转换网站。</p><h2 id="2-更新-Configuration-中的-locale-属性来实现app语言的切换"><a href="#2-更新-Configuration-中的-locale-属性来实现app语言的切换" class="headerlink" title="2. 更新 Configuration 中的 locale 属性来实现app语言的切换"></a>2. 更新 Configuration 中的 locale 属性来实现app语言的切换</h2><p>主要代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Resources resources = getContext().getResources();</span><br><span class="line">DisplayMetrics dm = resources.getDisplayMetrics();</span><br><span class="line">Configuration config = resources.getConfiguration();</span><br><span class="line"><span class="comment">// 应用用户选择语言，如：</span></span><br><span class="line"><span class="comment">// config.locale = Locale.ENGLISH;</span></span><br><span class="line">resources.updateConfiguration(config, dm);</span><br></pre></td></tr></table></figure><p>我们用了<code>Locale</code>中的预设值<code>Locale.ENGLISH</code>、<code>Locale.TRADITIONAL_CHINESE</code>和<code>Locale.SIMPLIFIED_CHINESE</code>，如果你需要设置的语言没有预设值，你可以自己新建一个<code>Locale</code>对象，具体自行 Google 吧。</p><p><strong>注：跟随系统设置是<code>Locale.getDefault()</code></strong></p><h2 id="3-重启-HomeActivity"><a href="#3-重启-HomeActivity" class="headerlink" title="3. 重启 HomeActivity"></a>3. 重启 HomeActivity</h2><p>我们的 App 有个启动页<code>WelcomeActivity</code>，类似微信那个小人启动页，如果从欢迎页重启，并不是一个好的体验，应该和微信的语言设置一样，直接回到<code>HomeActivity</code>,而不是从 <code>WelcomeActivity</code>重新打开。实现其实也很简单，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, HomeActivity.class);</span><br><span class="line">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);</span><br><span class="line">getActivity().startActivity(intent);</span><br><span class="line"><span class="comment">// 杀掉进程，如果是跨进程则杀掉当前进程</span></span><br><span class="line"><span class="comment">//  android.os.Process.killProcess(android.os.Process.myPid());</span></span><br><span class="line"><span class="comment">//  System.exit(0);</span></span><br></pre></td></tr></table></figure><h2 id="4-持久化存储语言设置"><a href="#4-持久化存储语言设置" class="headerlink" title="4. 持久化存储语言设置"></a>4. 持久化存储语言设置</h2><p>按照上述三个步骤，你应该已经可以看到了改变语言的效果了，但是当你杀掉应用，重新打开，发现设置又失效了。这是因为应用重启后会读取设备默认的<code>Configuration</code>信息，其中和语言相关的<code>locale</code>属性也会变成默认值，也就是你在系统设置中选择的语言。</p><p>当你的应用需要由用户单独设置语言，而不是仅仅跟随系统语言，你就需要持久化存储用户的设置信息了。你可以选择<code>数据库</code>、或<code>SharedPreferences</code>来存储设置信息，存一个Type的int值即可。</p><h2 id="5-根据本地缓存的type获取对应的locale"><a href="#5-根据本地缓存的type获取对应的locale" class="headerlink" title="5. 根据本地缓存的type获取对应的locale"></a>5. 根据本地缓存的type获取对应的locale</h2><p>其中7.0以上的系统需要另做处理（在后面会讲处理兼容性问题），具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Locale locale;</span><br><span class="line"><span class="comment">// 应用用户选择语言</span></span><br><span class="line"><span class="keyword">switch</span> (type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        locale = I18NUtils.getSystemLocale(); <span class="comment">// getSystemLocale()是一个自定义方法，用于获取系统语言</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>: ...;<span class="keyword">break</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        locale = enLocale; <span class="comment">// enLocale 是一个静态 Locale 变量，用于默认为未提供的语言显示英文语言</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-在AppApplication中初始化时设置本地语言"><a href="#6-在AppApplication中初始化时设置本地语言" class="headerlink" title="6. 在AppApplication中初始化时设置本地语言"></a>6. 在AppApplication中初始化时设置本地语言</h2><p>用于每次启动APP后切换到本地缓存的语言</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        Resources resources = App.getContext().getResources();</span><br><span class="line">        DisplayMetrics dm = resources.getDisplayMetrics();</span><br><span class="line">        Configuration config = resources.getConfiguration();</span><br><span class="line">        <span class="comment">// 设置本地化语言</span></span><br><span class="line">        config.locale = getSetLocaleInSP();</span><br><span class="line">        resources.updateConfiguration(config, dm);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 得到设置的语言信息</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Locale <span class="title">getSetLocaleInSP</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 读取储存的语言设置信息（结合第五步）</span></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-在BaseActivity的OnCreate-方法中设置语言"><a href="#7-在BaseActivity的OnCreate-方法中设置语言" class="headerlink" title="7. 在BaseActivity的OnCreate()方法中设置语言"></a>7. 在BaseActivity的OnCreate()方法中设置语言</h2><p>用于处理每次切换系统语言后app语言会跟随系统变化的问题。</p><p>在这一步之前会遇到一个问题：当从应用中切出去，改变了系统语言的设置，当再切应用的时候，我发现语言也会变成系统语言（而我并没在应用内设置跟随系统）。</p><blockquote><p>**引用自<a href="https://jaeger.itscoder.com/android/2016/05/14/switch-language-on-android-app.html">@写代码的猴子的文章</a>**：<br>简单来说，上一步中，我们在 App 启动时，读取了用户的设置信息，并应用到 <code>Configuration</code>的<code>locale</code>属性上，然后通过<code>resources.updateConfiguration(config, dm)</code>改变了应用的配置信息（<code>Configuration</code>）并生效，保证我们的应用读取的<code>string</code>资源都是用户设置语言对应的资源。在我们改变系统的语言之后，再回到我们的应用中，此时的<code>Configuration</code>的<code>locale</code>属性就会发生变化了，不再是我们刚才自己的在应用启动时设置的了，而是变成了系统的设置了。</p></blockquote><p>那么解决办法也很简单，我们都知道 activity 有生命周期，<strong>在切回我们的应用时，在显示的 activity 的生命周期中做一些处理</strong>就好了（有点粗暴～）</p><p>在实际开发中，我们会建立很多个 activity，而每一个 activity 都要更改语言的。这个时候我们如果一个个做处理是不是很麻烦？这个时候我们利用面向对象语言的继承特性即可，创建一个<code>BaseActivity</code>，在<code>BaseActivity</code> 中处理后其他 Activity 都去继承<code>BaseActivity</code>就好了。<a href="https://jaeger.itscoder.com/android/2016/05/14/switch-language-on-android-app.html">@写代码的猴子的文章</a>中说评论中提到，在改变了系统设置之后，回到应用会重走<code>activity</code>的<code>onCreate</code>（如果按照Activity的生命周期看其实应该是<code>onResume</code>才对），那就在<code>OnCreate</code>中处理一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    <span class="keyword">if</span> (!LanguageUtil.isSetValue()) &#123;</span><br><span class="line">        LanguageUtil.resetAppLanguage();</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LanguageUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是设置值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 是否是设置值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSetValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Locale currentLocale = App.getContext().getResources().getConfiguration().locale;</span><br><span class="line">        <span class="keyword">return</span> currentLocale.equals(getSetLocaleInSP());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解决7-0以上系统存在的兼容问题——跟随系统语言失效"><a href="#解决7-0以上系统存在的兼容问题——跟随系统语言失效" class="headerlink" title="解决7.0以上系统存在的兼容问题——跟随系统语言失效"></a>解决7.0以上系统存在的兼容问题——跟随系统语言失效</h2><p><a href="https://www.jianshu.com/p/9a304c2047ff/">Android 7.0 语言设置爬坑</a>这篇文章讲的很详细，具体还可以参考<a href="https://developer.android.com/guide/topics/resources/multilingual-support.html">官方文档</a>和<a href="https://developer.android.com/reference/android/os/LocaleList.html#getDefault()/">官方API</a></p><p>如果不做兼容，可能会出现以下情况：在 App 中，语言默认选择的是「跟随系统」（系统语言列表中「简体中文」是第一个），然后选择「英语」，之后再切换回「跟随系统」，发现语言并没切回「简体中文」，而还是「英语」。</p><p>由于 Android7.0 以上<code>Configuration</code>将通过<code>LocaleList</code>来管理语言，并且系统切换语言后，系统默认语言可能并不在<code>LocaleList</code>顶部。</p><p>经过调试发现：<strong>如果在 App 中手动选择（切换）过语言则在<code>LocaleList</code>中系统语言是第二个，否则是第一个。</strong></p><p>所以，获取当前系统<code>locale</code>，代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Locale systemLocale;</span><br><span class="line"><span class="comment">//由于API仅支持7.0，需要判断，否则程序会crash(解决7.0以上系统不能跟随系统语言问题)</span></span><br><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.N) &#123;</span><br><span class="line">    LocaleList localeList = LocaleList.getDefault();</span><br><span class="line">    <span class="comment">// 获取之前选择过语言后缓存在 SharePreferences 的语言（即当前选择的语言）</span></span><br><span class="line">    <span class="keyword">int</span> spType = getLanguageType(AppApplication.getAppContext());</span><br><span class="line">    <span class="comment">// 如果app已选择不跟随系统语言，则取第二个数据为系统默认语言</span></span><br><span class="line">    <span class="keyword">if</span>(spType != <span class="number">0</span> &amp;&amp; localeList.size() &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        locale = localeList.get(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        locale = localeList.get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    locale = Locale.getDefault();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h1><p>但是这个做出来的效果是每次启动都会重启一次Activity，强迫症的我表示根本受不了😂，而且横竖屏切换后会有语言变成系统语言的问题</p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><blockquote><ul><li><a href="https://www.jianshu.com/p/16efe98d4554">Android多语言切换完美解决方案（兼容7.0以上版本）</a><ul><li>源码地址：<a href="https://github.com/Fitem/I18NDemo">https://github.com/Fitem/I18NDemo</a></li></ul></li><li><a href="https://jaeger.itscoder.com/android/2016/05/14/switch-language-on-android-app.html">Android App 多语言切换</a></li><li><a href="https://cloud.tencent.com/developer/article/1035307">Android面试系列之应用内多语言切换</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次对layout_weight和match_parent的深入探究</title>
      <link href="/posts/73a11b2e.html"/>
      <url>/posts/73a11b2e.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>昨晚，我又被奕广大佬日常拖去讨论问题（可以，这宿舍很好学🌚）。</p><p>这次讨论的问题是关于 Android 中 layout_weight（权重） 的用法，然后在这过程中，我们遇到了一个坑——关于权重的计算问题。</p><p>这问题可能比较基础，但是咧，我之前一直都不会用 layout_weight 的，所以是属于 layout_weight 使用的新手，大佬请绕道勿喷😂</p><a id="more"></a><h1 id="layout-weight-的分析"><a href="#layout-weight-的分析" class="headerlink" title="layout_weight 的分析"></a>layout_weight 的分析</h1><h2 id="权重分配的是哪些空间？"><a href="#权重分配的是哪些空间？" class="headerlink" title="权重分配的是哪些空间？"></a>权重分配的是哪些空间？</h2><p>首先要明白权重分配的是哪些空间？</p><p><strong>权重是按照比例分配屏幕的剩余空间</strong>，对这句话不理解的可以看下图：<br><img src="/images/android/layout_weight%20analyse.png" alt="layout_weight analyse"></p><p>假如我们希望剩余的空间平分给空间1 和空间2 ，</p><p>我们分别在2个控件的设置<code>android:layout_weight=&quot;1&quot;</code></p><h2 id="计算原理"><a href="#计算原理" class="headerlink" title="计算原理"></a>计算原理</h2><p>然后我们来说下 layout_weight 的计算原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">控件的尺寸 &#x3D; 设置的控件尺寸 + 剩余空间中控件的百分比</span><br></pre></td></tr></table></figure><p>详细的计算方式则为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">控件的宽(高)度 &#x3D; 控件 的 width(height) + 控件的 weight * [父布局（LinearLayout）的宽(高)度-所有控件所占宽(高)的和] &#x2F; weightSum</span><br></pre></td></tr></table></figure><p>其中，</p><p><code>控件的 weight / weightSum</code> 就是权重比；</p><p><code>父布局（LinearLayout）的宽(高)度-所有控件所占宽(高)的和</code>为剩余可分配空间</p><blockquote><p>补充：</p><ul><li><strong>android:layout_weight的真实含义</strong>是:一旦 View 设置了该属性(假设有效的情况下)，那么该 View的宽度等于原有宽度(android:layout_width)加上剩余空间的占比！</li><li>如果 width 设置了 match_parent ，那么，加上的是负的长度（相当于减去一部分长度）</li><li>如果 width 设置了 wrap_content，那么，剩余空间是“父容器总长度”减去“组件的内容占的长度”，然后再按比重值分。</li></ul></blockquote><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>我们遇到的是以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/activity_main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;button1&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;button2&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后我跟奕广就蒙圈了，为啥两个都是match_parent或0dp的时候控件可以各占一半，<br><img src="/images/android/both%20match%20or%200dp.jpg" alt="both match or 0dp"></p><p>而一个是 0dp 和 一个是 match_parent 却不能，反倒被button2给覆盖了？<br><img src="/images/android/bt1%200dp%20bt2%20%20match.jpg" alt="bt1 0dp bt2  match"></p><p>后来知道计算方法之后算了一下，又蒙了，算不对，我们是这样算的：<br>根据公式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">控件的宽(高)度 &#x3D; 控件 的 width(height) + 控件的 weight * [父布局（LinearLayout）的宽(高)度-所有控件的宽(高)的和] &#x2F; weightSum</span><br></pre></td></tr></table></figure><p>得计算过程：</p><p>设父布局为1列(宽)x2行(高)，则对半分之后每个控件的布局为1列(宽)x1行(高)，所以每个控件的实际高度应该为1行，得：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Button2的实际显示高度 &#x3D; 1行 + 1weight * (2-1-1)行 &#x2F; (1+1)weight &#x3D; 1行 &lt; 2行 (错)</span><br></pre></td></tr></table></figure><p>很明显，我们的正确答案应该是算到Button2实际显示的 2 行才是正确的，但是现在算到了 1 行，所以显然是算错了。</p><hr><p>研究了很久才发现我们<strong>对 match_parent 的理解错了</strong>😂。</p><p><strong><font color='red'>☆☆接下来是重点！！！☆☆</font></strong><br>从计算过程中可以看出，我们认为，match_parent的实际值是 1 行。实则不然，match_parent是<strong>铺满父布局</strong>的宽(高)，那么父布局为1列(宽)*2行(高)的话，match_parent的值应为 2 行！！</p><hr><p>我们再算一遍：</p><p>设父布局为1列(宽)x2行(高)，则对半分之后每个控件的布局为1列(宽)x1行(高)，但</p><p>由于Button2的高度设置了match_parent，所以Button2设置的高度应该为2行，得：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Button2的实际显示高度 &#x3D; 2行 + 1weight * (父布局2-2-0)行 &#x2F; (1+1)weight &#x3D; 2-0行 &#x3D; 2行</span><br></pre></td></tr></table></figure><p>由于Button1的高度设置了 0dp，所以Button1设置的高度应该为0行，得：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Button1的实际显示高度 &#x3D; 0行 + 1weight * (2-2-0)行 &#x2F; (1+1)weight &#x3D; 0+0行 &#x3D; 0行</span><br></pre></td></tr></table></figure><p>这样数据就符合实际显示的效果了，完～</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><ul><li><a href="https://blog.csdn.net/shb2058/article/details/64122860">android中weight的一个坑</a></li><li><a href="https://blog.csdn.net/pengbo6665631/article/details/80542556">Android:layout_weight的使用和坑</a></li><li><a href="https://blog.csdn.net/qq_26263231/article/details/69831272">Android自适应布局(关于权重weight的使用技巧!)</a></li><li><a href="https://blog.csdn.net/ghost_programmer/article/details/51810216">从源码切入 透彻理解Android的weight属性</a></li><li><a href="https://blog.csdn.net/qq_33210042/article/details/50907811">android weight（权重）的具体分析</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 宿舍日常问题探讨 </tag>
            
            <tag> 日常挖坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>另一种 StarUML 3.x 完美破解的思路——比较暴力</title>
      <link href="/posts/d94bd648.html"/>
      <url>/posts/d94bd648.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在昨天，我发布了一篇又长又臭的<a href="../posts/ee00472d.html">StarUML 3.x 完美破解方案</a></p><p>然后今天早上一起床就想到，啊～好麻烦啊！能不能让完美再简单点？</p><p>好的，然后我又开始了折腾（真丶生命在于折腾😂）</p><a id="more"></a><h1 id="我的想法"><a href="#我的想法" class="headerlink" title="我的想法"></a>我的想法</h1><p>这一次，我要先从<code>about-dialog.js</code>开始分析</p><p>（<code>about-dialog.js</code>路径：解压<code>app.asar</code>后<code>/app/src/dialogs/about-dialog.js</code>）</p><p>正所谓：你要什么我就给什么才是最方便的🌚</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>下面开始正式分析破解</p><h2 id="查看关于中要显示的信息需要获取的数据"><a href="#查看关于中要显示的信息需要获取的数据" class="headerlink" title="查看关于中要显示的信息需要获取的数据"></a>查看关于中要显示的信息需要获取的数据</h2><p><code>about-dialog.js</code>中第 45-71 行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set license info</span></span><br><span class="line"><span class="keyword">if</span> (app.licenseManager.getStatus() === <span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> info = app.licenseManager.getLicenseInfo()</span><br><span class="line">    <span class="keyword">var</span> licenseTypeName = <span class="string">&#x27;Unknown&#x27;</span></span><br><span class="line">    <span class="keyword">switch</span> (info.licenseType) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;PS&#x27;</span>:</span><br><span class="line">      licenseTypeName = <span class="string">&#x27;Personal&#x27;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;CO&#x27;</span>:</span><br><span class="line">      licenseTypeName = <span class="string">&#x27;Commercial&#x27;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;ED&#x27;</span>:</span><br><span class="line">      licenseTypeName = <span class="string">&#x27;Educational&#x27;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;CR&#x27;</span>:</span><br><span class="line">      licenseTypeName = <span class="string">&#x27;Classroom&#x27;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">    $license.html(<span class="string">&#x27;Licensed to &#x27;</span> + info.name)</span><br><span class="line">    $licenseType.html(licenseTypeName + <span class="string">&#x27; License&#x27;</span>)</span><br><span class="line">    $quantity.html(info.quantity + <span class="string">&#x27; User(s)&#x27;</span>)</span><br><span class="line">    $crackedAuthor.html(<span class="string">&#x27;Cracked by &#x27;</span> + info.crackedAuthor)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $license.html(<span class="string">&#x27;UNREGISTERED&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> dialog</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出，它首先会先调用<code>license-manager.js</code>中的<code>getStatus()</code>方法判断程序的注册状态。那现在我们去<code>license-manager.js</code>看一下<code>getStatus()</code>这个方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get Registration Status</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;string&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">getStatus () &#123;</span><br><span class="line">  <span class="keyword">return</span> status</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嗯……很简单的一个方法，我是试过直接在这里设置<code>&quot;true&quot;</code>(注意！这里是返回字符串)，但是没什么用，我就没改这里了。那么这里到底有什么用呢？大家看它返回的那个变量：<code>status</code>，这是我们唯一从这里得到的信息，我们全文搜索一下<code>status</code>，可以找到一个<code>setStatus(...)</code>的方法。我修改了一下让它总是设置为<code>true</code>，代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setStatus</span> (<span class="params">licenseManager, newStat</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (status !== newStat) &#123;</span><br><span class="line">    status = newStat</span><br><span class="line">    licenseManager.emit(<span class="string">&#x27;statusChanged&#x27;</span>, <span class="string">&#x27;true&#x27;</span>) <span class="comment">// status修改为&#x27;true&#x27;,注意要带单引号</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，现在我们可以进入那个if语句了🌚。不难看出，接下来需要的数据都在变量<code>info</code>里，从这一句</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> info = app.licenseManager.getLicenseInfo()</span><br></pre></td></tr></table></figure><p>可以看出，它调用了<code>license-manager.js</code>中的<code>getLicenseInfo()</code>方法获取所需数据，我们去看一下<code>getLicenseInfo()</code>方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">getLicenseInfo () &#123;</span><br><span class="line">    <span class="keyword">return</span> licenseInfo</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嗯…..还是那么简洁，但是从昨天的文章我们已经知道这个<code>licenseInfo</code>的数据内容格式，他要的数据也是<code>licenseInfo</code>的数据。那么，我们直接模拟<code>licenseInfo</code>的数据即可：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">getLicenseInfo () &#123;</span><br><span class="line">  licenseInfo = &#123;</span><br><span class="line">          name: <span class="string">&quot;Reborn&quot;</span>,</span><br><span class="line">          product: <span class="string">&quot;Reborn product&quot;</span>,</span><br><span class="line">          licenseType: <span class="string">&quot;PS&quot;</span>,</span><br><span class="line">          quantity: <span class="string">&quot;Reborn Quantity&quot;</span>,</span><br><span class="line">          timestamp: <span class="string">&quot;1529049036&quot;</span>,</span><br><span class="line">          licenseKey: <span class="string">&quot;It&#x27;s Cracked!!&quot;</span>,</span><br><span class="line">          crackedAuthor: <span class="string">&quot;Reborn&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">  <span class="keyword">return</span> licenseInfo</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，模拟成功，<code>about-dialog.js</code>那边应该能获取到<code>licenseInfo</code>的数据了。但是，仅仅是这样还不行哦！还有最重要的一点你们别忘了——我们还没破解！</p><h2 id="破解注册"><a href="#破解注册" class="headerlink" title="破解注册"></a>破解注册</h2><p>破解注册很简单，直接修改<code>license-manager.js</code>中的<code>checkLicenseValidity()</code>这个方法就好了。</p><p>修改后的代码如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">checkLicenseValidity () &#123;</span><br><span class="line">  <span class="built_in">this</span>.validate().then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    setStatus(<span class="built_in">this</span>, <span class="literal">true</span>)</span><br><span class="line">  &#125;, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 原来的代码，如果失败就会将状态设置成false</span></span><br><span class="line"><span class="comment">//       setStatus(this, false)</span></span><br><span class="line"><span class="comment">//       UnregisteredDialog.showDialog()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改后的代码</span></span><br><span class="line">    setStatus(<span class="built_in">this</span>, <span class="literal">true</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注册成功！！"><a href="#注册成功！！" class="headerlink" title="注册成功！！"></a>注册成功！！</h2><p>完成以上流程后应该就能成功<strong>直接破解</strong>了，<strong>不用输入注册码</strong>，并且这种方法破解后同样能在关于显示你自定义的破解信息！！一样完美～<br><img src="/images/staruml-about.png" alt="staruml-about"></p><p>这种方法和昨天的比起来更简单，但是也更暴力。昨天的比较接近正常的验证流程，这种就有点爆破的味道了。这里给出另一种思路给大家参考，希望对大家有帮助。</p>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>StarUML 3.x 完美破解全过程含详细分析（可自定义许可证信息）</title>
      <link href="/posts/ee00472d.html"/>
      <url>/posts/ee00472d.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>终于开始新的学期了，这学期我有个 UML建模 的课程，上机作业就是要用到 StarUML 这个软件，但是……啊——为什么 StarUML 那么丑啊！！！而且，为什么这么难用啊！！！（马上开始怀疑是旧旧旧…&lt;省略一万个“旧”&gt;…版）</p><a id="more"></a><p><strong>（图片下次上机后附上）</strong></p><p>好吧，颜值帝的我无奈翻了一下官方，发现还机房的还真的是超级旧版，一进去<a href="http://staruml.io/">官网</a>就能看到我最喜欢的暗黑风格😍。<br><img src="/images/staruml-officialwebsite.png" alt="staruml-officialwebsite"></p><p>果断下载来试用了一下，哇！这个操作比机房的体验好超级多了好吗😂</p><p>这软件开源，但是却收费，穷得要死（铁公鸡）的我肯定是不会付费用的了(其实是想顺便看下这个软件的验证逻辑)，于是研究起了破解之道～</p><h1 id="关于-StarUML-的破解原理"><a href="#关于-StarUML-的破解原理" class="headerlink" title="关于 StarUML 的破解原理"></a>关于 StarUML 的破解原理</h1><blockquote><p>参考：<a href="https://www.jianshu.com/p/b6b1f6ad0bd6">https://www.jianshu.com/p/b6b1f6ad0bd6</a></p></blockquote><p>StarUML 是用 nodejs 写的，确切的说是用 <a href="https://github.com/electron/electron">Electron前端框架</a> 写的。</p><p>新版本中所有的 StarUML 源代码是通过 <a href="https://github.com/electron/asar">asar</a> 工具打包而成，确切的代码位置在<code>%LOCALAPPDATA%\Programs\StarUML\resources\app.asar</code>。</p><p>我们可以通过asar工具解压修改达到破解目的，关于asar工具使用可看本文<a href="#%E9%99%84%E5%BD%951%EF%BC%9A%E5%85%B3%E4%BA%8Eapp-asar%E7%9A%84%E8%A7%A3%E5%8E%8B%E4%B8%8E%E9%87%8D%E6%89%93%E5%8C%85">附录1</a>。</p><blockquote><p><strong>提取 app.asar</strong><br>下载的 <code>StarUML.app</code>，右键显示包内容<br>进入<code>Contents/Resources/</code><br>把<code>app.asar</code>复制出来</p></blockquote><h1 id="为什么网上那么多破解教程我还要写？"><a href="#为什么网上那么多破解教程我还要写？" class="headerlink" title="为什么网上那么多破解教程我还要写？"></a>为什么网上那么多破解教程我还要写？</h1><blockquote><p>参考： <a href="https://www.jianshu.com/p/b6b1f6ad0bd6">Mac StarUML 3.0 破解</a></p></blockquote><p>那……当然不是为了存档！</p><p>相信搜过 StarUML3 破解的朋友都知道，想要破解就修改<code>app.asar</code>解压出来的<code>app/src/engine/license-manager.js</code>，把其中的<code>checkLicenseValidity</code>函数修改成：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">checkLicenseValidity () &#123;</span><br><span class="line">    <span class="built_in">this</span>.validate().then(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      setStatus(<span class="built_in">this</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125;, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 原来的代码，如果失败就会将状态设置成false</span></span><br><span class="line"><span class="comment">//       setStatus(this, false)</span></span><br><span class="line"><span class="comment">//       UnregisteredDialog.showDialog()</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//修改后的代码</span></span><br><span class="line">      setStatus(<span class="built_in">this</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>然后重新打包<code>app.asar</code>放回<code>StarUML.app/Contents/Resources/</code>，破解成功了。</p><p>那么，为什么网上那么多破解教程我还要写一个教程呢？</p><p>因为我是个完美主义者，我发现网上的教程都不能达到完美破解的效果——我的注册信息怎么没法显示（自定义）！！！于是我就着手研究起<code>app.asar</code>解压出来的代码了🌚</p><h1 id="开始分析"><a href="#开始分析" class="headerlink" title="开始分析"></a>开始分析</h1><h2 id="破解的核心：license-manager-js"><a href="#破解的核心：license-manager-js" class="headerlink" title="破解的核心：license-manager.js"></a>破解的核心：<code>license-manager.js</code></h2><blockquote><p>参考： <a href="http://dxkite.cn/2018/06/15/bypass-staruml-3/">绕过StarUML3 正版验证，去除水印</a></p></blockquote><p>破解的核心还是<code>license-manager.js</code>这个跑不掉，那么我们先从这个文件开始分析。</p><h3 id="根据注册码验证流程分析"><a href="#根据注册码验证流程分析" class="headerlink" title="根据注册码验证流程分析"></a>根据注册码验证流程分析</h3><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p>在这之前，我们先想一下正常的注册码验证流程是什么：</p><!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=5,IE=9" ><![endif]--><!DOCTYPE html><html><head><title>正常的注册码验证流程</title><meta charset="utf-8"/></head><body><div class="mxgraph" style="max-width:100%;border:1px solid transparent;" data-mxgraph="{&quot;highlight&quot;:&quot;#0000ff&quot;,&quot;nav&quot;:true,&quot;resize&quot;:true,&quot;toolbar&quot;:&quot;zoom layers lightbox&quot;,&quot;edit&quot;:&quot;_blank&quot;,&quot;xml&quot;:&quot;&lt;mxfile userAgent=\&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/8.8.0 Chrome/61.0.3163.100 Electron/2.0.2 Safari/537.36\&quot; version=\&quot;9.1.3\&quot; editor=\&quot;www.draw.io\&quot; type=\&quot;device\&quot;&gt;&lt;diagram id=\&quot;495560c4-b5ad-c4af-45a2-9c1f2401ae28\&quot; name=\&quot;第 1 页\&quot;&gt;1VhNc5swEP01OtYDyGBxxI7THtKZzOTQ5NRRQAY1AjFCju38+kogvgxO3MZ2khwc6Wn19fYtuwDgIt1+FzhPfvKIMOBY0RbAK+A4vuWqXw3sKsCzYAXEgkYVZLfAHX0hBrQMuqYRKXqGknMmad4HQ55lJJQ9DAvBN32zFWf9XXMckwFwF2I2RH/RSCYGtT2/HfhBaJyYrZEzqwYecfgUC77OzH7AgavyrxpOcb2WuWiR4IhvOhBcArgQnMuqlW4XhGlqa9qqedcHRptzC5LJYyY4U3MOuavvTiJFhelmPFP/5uWFiJ5iqV4iU6aatmqSLZX3nfaDNpm4pndLBE2JJMJMVGcSu/tup7X/Q6TcGSHgteQK4kImPOYZZjec52aX6rj6jAdvbKCCr0VorByjISxiYqwc2NCtVEy4OqjYKRtBGJb0ub88NnqKG7uWU9UwtB6guFriGbO1WRQsPYB84EOwdMF8AZClt8jzgSsKKfhTo0Cnz72STq7t0m2sY3CyYnwTJljISaHuKX9rm01CJbnLccnDRpk1DI4Q9kyEJNsONCTHjCrZTEyEmwCHCNbIphMwlpF50okVz3o/p/4nUW3Z3Z/wb1J+Q7nuULloNAYuoGR3RMk+CAKAFmCJQHANkK21PYcgQFrbyCuHZiCw9NCJ5J0LHpKiOJ+8XTiQt3e0vBvwPUzbrz+WWzktW/Rtvbcaf6jl/On0joZ6t52PErztjSjeBb4FAm/gICUu2eddkIK+4MfSQBOVc5rJ8jjuHLhXCsGMxpkCQkWJ5nOuRUpVHRKYgZRGUelchh8JmzfVxYIzLsp96/pilN/pAek3lZM5Xa/6GAsJa2JBC/Vi4ptZ/GjWzeK3moXOMrA/g69WhfL8vpeaIx3nOPf88WN/mfixPix+ZqO1j1/miq8QP3XGO0H8OLP65eHE8TM9Q/ygUb8dyuuNS5tno0YWusbVDWWvZl3rStcfuv0/i4CIhLSgPDtfFeChD68CrKPc4Gl+Fe8aCU5IsYqolGZY6kA5F8louk/y1L3om0RdXLzBsQuCKZjbusydT0EwTC9fimNoX5TjsReH97y/nflbARymUPdCCbPeu8eUx3ReLHKcqXas26UMl+YDAnK1Hl977aoWUHv31tj3QJ06b3SmvOUFleXjtU2hB3NrV+mDMKi1r1jHjBHGVQikOpl3qqDeWKc8Go2IVhZ6QyxCowS73K1qq3QL66TfuUpTJgzqhoN5fiCWg2EGkdUPsrN+ElHd9ithleHbL7Fw+Rc=&lt;/diagram&gt;&lt;/mxfile&gt;&quot;}"></div><script type="text/javascript" src="https://www.draw.io/js/viewer.min.js"></script></body></html><h4 id="打开-app"><a href="#打开-app" class="headerlink" title="打开 app"></a>打开 app</h4><p>可以看到，我们首先要<code>打开 app</code>，对应的代码是：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">htmlReady () &#123;</span><br><span class="line">    <span class="built_in">this</span>.projectManager.on(<span class="string">&#x27;projectSaved&#x27;</span>, <span class="function">(<span class="params">filename, project</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> val = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (<span class="number">1.0</span> / LICENSE_CHECK_PROBABILITY))</span><br><span class="line">      <span class="keyword">if</span> (val === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">this</span>.checkLicenseValidity()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">appReady () &#123;</span><br><span class="line">    <span class="built_in">this</span>.checkLicenseValidity()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，这两个方法中都会用到<code>this.checkLicenseValidity()</code>，看英文意思明显是检查许可证是否有效，所以把<code>checkLicenseValidity</code>这个方法修改一下就可以破解了（修改方法看<a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E7%BD%91%E4%B8%8A%E9%82%A3%E4%B9%88%E5%A4%9A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B%E6%88%91%E8%BF%98%E8%A6%81%E5%86%99%EF%BC%9F">上面</a>)</p><p><strong>但是，这里我们先不修改！！！因为修改后没法弹出无法弹出输入注册码的窗口，就无法完美破解了！！</strong></p><h4 id="输入注册码"><a href="#输入注册码" class="headerlink" title="输入注册码"></a>输入注册码</h4><p>接下来我们来看一下<strong>输入注册码</strong>也就是<strong>注册</strong>的逻辑：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">register (licenseKey) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    $.post(app.config.validation_url, &#123;<span class="attr">licenseKey</span>: licenseKey&#125;)</span><br><span class="line">      .done(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> file = path.join(app.getUserPath(), <span class="string">&#x27;/license.key&#x27;</span>)</span><br><span class="line">        fs.writeFileSync(file, <span class="built_in">JSON</span>.stringify(data, <span class="number">2</span>))</span><br><span class="line">        licenseInfo = data</span><br><span class="line">        setStatus(<span class="built_in">this</span>, <span class="literal">true</span>)</span><br><span class="line">        resolve(data)</span><br><span class="line">      &#125;)</span><br><span class="line">      .fail(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        setStatus(<span class="built_in">this</span>, <span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">if</span> (err.status === <span class="number">499</span>) &#123; <span class="comment">/* License key not exists */</span></span><br><span class="line">          reject(<span class="string">&#x27;invalid&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          reject()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解释一下，这个<code>register</code>函数需要传入的参数<code>licenseKey</code>就是输入的注册码，然后用POST请求 balabala，请求成功后返回一个<code>data</code>，然后在 StarUML 的配置信息目录新建一个<code>license.key</code>的文件，里面包含着所有许可证信息。可以看到，这个许可证信息是<strong>用 JSON 格式储存的</strong>，而请求后获取的<code>data</code>就是许可证信息的内容，<strong>那么我们是不是只要模拟已经获取到了许可证信息是不是就ok了？</strong></p><p>那么问题又来了，我们怎么知道<code>data</code>的内容格式呢？</p><p>我们不妨参考一下 StarUML2 的破解：<a href="https://www.jianshu.com/p/0c49ebf342e0">https://www.jianshu.com/p/0c49ebf342e0</a></p><p>在 StarUML2 的破解中我们可以看到如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line">    name: <span class="string">&quot;0xcb&quot;</span>,</span><br><span class="line">    product: <span class="string">&quot;StarUML&quot;</span>,</span><br><span class="line">    licenseType: <span class="string">&quot;vip&quot;</span>,</span><br><span class="line">    quantity: <span class="string">&quot;bbs.chinapyg.com&quot;</span>,</span><br><span class="line">    licenseKey: <span class="string">&quot;later equals never!&quot;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>我斗胆猜测这就是<code>data</code>的内容格式（也就是许可证信息的内容格式）！！！</p><p>我们广东人常常会说一句话：讲多无谓，行动最实际。我们下面就来尝试一下！</p><p>既然是本地模拟，那当然要把网络请求去掉然后模拟<code>data</code>的内容，修改整理后得到以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">register (licenseKey) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> data = &#123;</span><br><span class="line">          name: <span class="string">&quot;Reborn&quot;</span>,</span><br><span class="line">          product: <span class="string">&quot;Reborn product&quot;</span>,</span><br><span class="line">          licenseType: <span class="string">&quot;PS&quot;</span>,</span><br><span class="line">          quantity: <span class="string">&quot;Reborn Quantity&quot;</span>,</span><br><span class="line">          timestamp: <span class="string">&quot;1529049036&quot;</span>,</span><br><span class="line">          licenseKey: <span class="string">&quot;It&#x27;s Cracked!!&quot;</span>,</span><br><span class="line">          crackedAuthor: <span class="string">&quot;Reborn&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> file = path.join(app.getUserPath(), <span class="string">&#x27;/license.key&#x27;</span>)</span><br><span class="line">        fs.writeFileSync(file, <span class="built_in">JSON</span>.stringify(data, <span class="number">2</span>))</span><br><span class="line">        licenseInfo = data</span><br><span class="line">        setStatus(<span class="built_in">this</span>, <span class="literal">true</span>)</span><br><span class="line">        resolve(data)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里许可证信息应该是模拟成功了，看 StarUML 的配置信息目录下应该能看到一个<code>license.key</code>的文件。输完注册码后就要验证注册码是否有效，接下来我们看验证许可证信息模块。</p><blockquote><p><strong>这里要注意一下：</strong><code>licenseType</code>的设置是固定几个参数的，在这里我设置为<code>PS</code>，之前设置<code>Reborn Personal</code>导致关于那里显示<code>Unknown License</code>。关于这个大家可以去看看<code>app/src/dialogs/about-dialog.js</code>。</p></blockquote><h4 id="验证许可证信息"><a href="#验证许可证信息" class="headerlink" title="验证许可证信息"></a>验证许可证信息</h4><p>先来看下代码吧：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">validate () &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// Local check</span></span><br><span class="line">      <span class="keyword">var</span> file = <span class="built_in">this</span>.findLicense()</span><br><span class="line">      <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">        reject(<span class="string">&#x27;License key not found&#x27;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> data = fs.readFileSync(file, <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">        licenseInfo = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line">        <span class="keyword">var</span> base = SK + licenseInfo.name +</span><br><span class="line">          SK + licenseInfo.product + <span class="string">&#x27;-&#x27;</span> + licenseInfo.licenseType +</span><br><span class="line">          SK + licenseInfo.quantity +</span><br><span class="line">          SK + licenseInfo.timestamp + SK</span><br><span class="line">        <span class="keyword">var</span> _key = crypto.createHash(<span class="string">&#x27;sha1&#x27;</span>).update(base).digest(<span class="string">&#x27;hex&#x27;</span>).toUpperCase()</span><br><span class="line">        <span class="keyword">if</span> (_key !== licenseInfo.licenseKey) &#123;</span><br><span class="line">          reject(<span class="string">&#x27;Invalid license key&#x27;</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// Server check</span></span><br><span class="line">          $.post(app.config.validation_url, &#123;<span class="attr">licenseKey</span>: licenseInfo.licenseKey&#125;)</span><br><span class="line">            .done(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">              resolve(data)</span><br><span class="line">            &#125;)</span><br><span class="line">            .fail(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (err &amp;&amp; err.status === <span class="number">499</span>) &#123; <span class="comment">/* License key not exists */</span></span><br><span class="line">                reject(err)</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// If server is not available, assume that license key is valid</span></span><br><span class="line">                resolve(licenseInfo)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      reject(err)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到验证分两部分：先<code>本地验证</code>再进行<code>网络验证</code>，网络验证成功后返回许可证信息。</p><h5 id="本地验证"><a href="#本地验证" class="headerlink" title="本地验证"></a>本地验证</h5><p>我们一步步来，先处理本地验证：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Local check</span></span><br><span class="line"><span class="keyword">var</span> file = <span class="built_in">this</span>.findLicense()</span><br><span class="line"><span class="keyword">if</span> (!file) &#123;</span><br><span class="line">    reject(<span class="string">&#x27;License key not found&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> data = fs.readFileSync(file, <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">    licenseInfo = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line">    <span class="keyword">var</span> base = SK + licenseInfo.name +</span><br><span class="line">    SK + licenseInfo.product + <span class="string">&#x27;-&#x27;</span> + licenseInfo.licenseType +</span><br><span class="line">    SK + licenseInfo.quantity +</span><br><span class="line">    SK + licenseInfo.timestamp + SK</span><br><span class="line">    <span class="keyword">var</span> _key = crypto.createHash(<span class="string">&#x27;sha1&#x27;</span>).update(base).digest(<span class="string">&#x27;hex&#x27;</span>).toUpperCase()</span><br><span class="line">    <span class="keyword">if</span> (_key !== licenseInfo.licenseKey) &#123;</span><br><span class="line">        reject(<span class="string">&#x27;Invalid license key&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    .....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地验证真正开始验证的地方是从第 8 行开始的。通过文件<code>license.key</code>中的部分许可证信息计算出一个注册码然后和许可证信息中的<code>licenseKey</code>进行比较，如果不相等那就返回注册码失效（从这里的<code>licenseInfo</code>调用也可以看出许可证信息包含了什么，与上一步的<code>data</code>验证）。</p><p>既然如此，我们就不让它比较嘛，我们直接返回成功不就得了！</p><p>好的，<strong>第 8 行之后的都删掉</strong>。</p><h5 id="网络验证"><a href="#网络验证" class="headerlink" title="网络验证"></a>网络验证</h5><p>由于返回的逻辑不在本地验证，所以我们还要分析网络验证：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Server check</span></span><br><span class="line">$.post(app.config.validation_url, &#123;<span class="attr">licenseKey</span>: licenseInfo.licenseKey&#125;)</span><br><span class="line">    .done(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        resolve(data)</span><br><span class="line">    &#125;)</span><br><span class="line">    .fail(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err &amp;&amp; err.status === <span class="number">499</span>) &#123; <span class="comment">/* License key not exists */</span></span><br><span class="line">           reject(err)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// If server is not available, assume that license key is valid</span></span><br><span class="line">            resolve(licenseInfo)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>又是一个 POST 请求！又是返回<code>data</code>！认真看了一下还是与上一步<code>输入注册码</code>同样的网络请求！好了，多的我就不说了👀，大家应该知道怎么办，可以同上一步一样模拟<code>data</code>的内容，然后<code>resolve(data)</code>返回即可。</p><p>**但是，这里我选择直接返回<code>licenseInfo</code>**，为什么呢？</p><p>大家看一下本地验证，<code>licenseInfo</code>的内容是从文件<code>license.key</code>中转换而来，文件<code>license.key</code>的内容是上一步的 POST 请求而来，嗯….不用我多说了吧！</p><p>整理代码后如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">validate () &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// Local check</span></span><br><span class="line">      <span class="keyword">var</span> file = <span class="built_in">this</span>.findLicense()</span><br><span class="line">      <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">        reject(<span class="string">&#x27;License key not found&#x27;</span>)</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> data = fs.readFileSync(file, <span class="string">&#x27;utf8&#x27;</span>)</span><br><span class="line">        licenseInfo = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line">        resolve(licenseInfo)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      reject(err)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注册成功！！"><a href="#注册成功！！" class="headerlink" title="注册成功！！"></a>注册成功！！</h4><p>完成以上流程后应该就能成功实现<strong>输入任意注册码</strong>都可以破解了，并且这种方法破解后还能在关于显示你自定义的破解信息！！完美～<br><img src="/images/staruml-about.png" alt="staruml-about"></p><h1 id="附录1：关于app-asar的解压与重打包"><a href="#附录1：关于app-asar的解压与重打包" class="headerlink" title="附录1：关于app.asar的解压与重打包"></a>附录1：关于<code>app.asar</code>的解压与重打包</h1><blockquote><p>参考：<a href="https://www.jianshu.com/p/b6b1f6ad0bd6">https://www.jianshu.com/p/b6b1f6ad0bd6</a></p></blockquote><h2 id="安装asar"><a href="#安装asar" class="headerlink" title="安装asar"></a>安装asar</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g asar</span><br></pre></td></tr></table></figure><h2 id="解压app-asar"><a href="#解压app-asar" class="headerlink" title="解压app.asar"></a>解压app.asar</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asar extract app.asar app</span><br></pre></td></tr></table></figure><h2 id="重新打包app-asar"><a href="#重新打包app-asar" class="headerlink" title="重新打包app.asar"></a>重新打包app.asar</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">asar pack app app.asar</span><br></pre></td></tr></table></figure><h1 id="附录2：自定义关于界面"><a href="#附录2：自定义关于界面" class="headerlink" title="附录2：自定义关于界面"></a>附录2：自定义关于界面</h1><p>大家做完上面的操作肯定会发现，为什么你们的关于没有<code>Cracked By XXX</code>的字样，那是因为我修改了<code>关于</code>的 GUI，在前面并没有说，在这里我特别分出来写一下，算是个小彩蛋吧！</p><h2 id="找到代码所在文件"><a href="#找到代码所在文件" class="headerlink" title="找到代码所在文件"></a>找到代码所在文件</h2><p>首先我们要找到<code>关于</code>这个界面的代码文件，经过分析和查找，我找到了<code>about-dialog.js</code>和<code>about-dialog.html</code></p><p>至于怎么找到的，大家看一下<code>about-dialog.js</code>的这句代码就知道了：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> aboutDialogTemplate = fs.readFileSync(path.join(__dirname, <span class="string">&#x27;../static/html-contents/about-dialog.html&#x27;</span>), <span class="string">&#x27;utf8&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="开始分析-1"><a href="#开始分析-1" class="headerlink" title="开始分析"></a>开始分析</h2><h3 id="about-dialog-html"><a href="#about-dialog-html" class="headerlink" title="about-dialog.html"></a>about-dialog.html</h3><p>我们先来看一下 html 吧，在这个文件中大家可以很明显看到这么一段：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">&quot;font-size: 20px;&quot;</span>&gt;&#123;&#123;metadata.name&#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;div style=<span class="string">&quot;font-size: 14px;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;license&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=<span class="string">&quot;font-size: 14px;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;licenseType&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=<span class="string">&quot;font-size: 14px;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;quantity&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div&gt;&#123;&#123;metadata.copyright&#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span>Version &#123;&#123;metadata.version&#125;&#125;<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span>&lt;/div&gt;</span><br><span class="line">&lt;div&gt;<span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;thirdparty&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Third party softwares<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span>&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>对比一下关于的界面，是不是觉得刚好对上了🌚</p><p>好的那么接下来我们加一个破解者的信息：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">&lt;div style=<span class="string">&quot;font-size: 14px;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;quantity&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;div style=<span class="string">&quot;font-size: 16px;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;crackedAuthor&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>这里第 3 行就是我添加的信息，其中<code>font-size</code>是调整字体大小，<code>class=&quot;crackedAuthor&quot;</code>这个类选择器名<code>crackedAuthor</code>要记住，等下要用到。</p><p>接下来我们看<code>about-dialog.js</code></p><h3 id="about-dialog-js"><a href="#about-dialog-js" class="headerlink" title="about-dialog.js"></a>about-dialog.js</h3><p>在这个 js 文件里面，我们可以看到这几行代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"><span class="keyword">var</span> $license = $dlg.find(<span class="string">&#x27;.license&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> $licenseType = $dlg.find(<span class="string">&#x27;.licenseType&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> $quantity = $dlg.find(<span class="string">&#x27;.quantity&#x27;</span>)</span><br><span class="line">......</span><br><span class="line">$license.html(<span class="string">&#x27;Licensed to &#x27;</span> + info.name)</span><br><span class="line">$licenseType.html(licenseTypeName + <span class="string">&#x27; License&#x27;</span>)</span><br><span class="line">$quantity.html(info.quantity + <span class="string">&#x27; User(s)&#x27;</span>)</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>我们来分析一下这几行代码吧！</p><p><code>$dlg.find(&#39;.xxx&#39;)</code>的意思是搜索所有类选择器名为<code>.xxx</code>的元素。<br><code>$xxx.html(&#39;abc&#39;)</code>的意思是设置<code>xxx</code>元素的内容为<code>abc</code>。</p><p>说到这里大家应该知道怎么修改了吧！这是我修改的代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line"><span class="keyword">var</span> $license = $dlg.find(<span class="string">&#x27;.license&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> $licenseType = $dlg.find(<span class="string">&#x27;.licenseType&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> $quantity = $dlg.find(<span class="string">&#x27;.quantity&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> $crackedAuthor = $dlg.find(<span class="string">&#x27;.crackedAuthor&#x27;</span>)</span><br><span class="line">......</span><br><span class="line">$license.html(<span class="string">&#x27;Licensed to &#x27;</span> + info.name)</span><br><span class="line">$licenseType.html(licenseTypeName + <span class="string">&#x27; License&#x27;</span>)</span><br><span class="line">$quantity.html(info.quantity + <span class="string">&#x27; User(s)&#x27;</span>)</span><br><span class="line">$crackedAuthor.html(<span class="string">&#x27;Cracked by &#x27;</span> + info.crackedAuthor)</span><br><span class="line">......</span><br></pre></td></tr></table></figure><h3 id="修改成功"><a href="#修改成功" class="headerlink" title="修改成功"></a>修改成功</h3><p>保存好代码<a href="#%E9%87%8D%E6%96%B0%E6%89%93%E5%8C%85app-asar">重新打包<code>app.asar</code></a>就可以看到修改后的关于界面啦！<br><img src="/images/staruml-about.png" alt="staruml-about"></p>]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暴力查询四六级准考证号——真的很暴力</title>
      <link href="/posts/90d0bd8.html"/>
      <url>/posts/90d0bd8.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><blockquote><p>参考：<a href="http://www.freebuf.com/articles/database/145261.html">http://www.freebuf.com/articles/database/145261.html</a></p></blockquote><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>昨天有个朋友说准考证没带回来，问我能不能帮她查下准考证号，我突然想起了今年2月份穷举的四级准考证，于是就翻出来试试。</p><p>当时我对源码进行了一些修改，不过一年前我还没搭建博客，如今也算有个机会对当时的学习做个记录和总结。</p><p>昨天我也继续对源码进行了一番改进，改的都非常简单，<strong>认真阅读</strong>了原作者那部分修改前的<strong>源码</strong>就肯定能看懂。</p><a id="more"></a><h1 id="要懂得感激"><a href="#要懂得感激" class="headerlink" title="要懂得感激"></a>要懂得感激</h1><p>首先，感谢<a href="http://www.freebuf.com/author/FlashYo">@FlashYo</a>提供的源码，让我也学习了不少东西。里面链接原本是失效了的，我又去问了<a href="http://www.freebuf.com/author/FlashYo">@FlashYo</a>，想看下<code>utils.py</code>是怎么写的，他想都没想就分享了，我表示很感激。</p><p>于是呢，我就开始了第一次阅读 Python 代码的经历（其实这也是我第一次接触 Python ），代码看完之后感觉也不难，<a href="http://www.freebuf.com/author/FlashYo">@FlashYo</a>的代码写的很有条理，他的文章也有很详细的代码说明。</p><p><del>但由于原文说<strong>不经允许禁止转载</strong>，我也尊重作者，所以这里就不贴他的代码和文章内容啦！有兴趣的可以去上面提供的参考链接看。</del></p><p><strong><font color="red">2018-08-25更新：已获得作者授权引用他的文章内容，感谢<a href="http://www.freebuf.com/author/FlashYo">@FlashYo</a>🌚</font></strong></p><p><strong>那么……我这篇博文是写什么的呢？</strong></p><h1 id="自己的收获"><a href="#自己的收获" class="headerlink" title="自己的收获"></a>自己的收获</h1><p>那当然是写自己的收获啦！（说了那么多也该进入正文了嗯。。。）</p><h2 id="其实我对原程序做了点改进🌚"><a href="#其实我对原程序做了点改进🌚" class="headerlink" title="其实我对原程序做了点改进🌚"></a>其实我对原程序做了点改进🌚</h2><p>在说我改进了什么之前，先给大家科普一下四六级准考证号的组成吧！</p><h3 id="四六级准考证号的组成元素"><a href="#四六级准考证号的组成元素" class="headerlink" title="四六级准考证号的组成元素"></a>四六级准考证号的组成元素</h3><p>这东西百度谷歌随便都查的到，一张图带你了解英语六级准考证号组成～</p><p><img src="/images/CET-ID.png" alt="CET-ID"></p><blockquote><p>六级准考证号一共由15位组成：</p></blockquote><ol><li>前5位是学校代码</li><li>第6位是学校的校区代码　大学英语四六级考试院校考点代码大全(前6位)</li><li>第7-8位是考试年份<blockquote><blockquote><p>如2014年考试此处应为14，14代表2014年。</p></blockquote></blockquote></li><li>第9位是该年中第几次四六级考试<blockquote><blockquote><p>上半年是第1次，下半年是第2次，那么2014年12月就是2。</p></blockquote></blockquote></li><li>第10位是四六级类别，四级是1，六级是2。</li><li>第11-13位是考场号<blockquote><blockquote><p>比如你在100考场的，那就是100，14考场的就是014。</p></blockquote></blockquote></li><li>第14-15位是座位号<blockquote><blockquote><p>如果你是01号座位，那就是01，29号就是29 。</p></blockquote></blockquote></li></ol><p><code>学校代码</code>和<code>校区代码</code>查不到的直接随便问一个自己学校的考四六级的同学问一下就好了，那么<strong>前6位</strong>已经得到了；<strong>7~10位</strong>就不用我说了吧，自己是<strong>什么时候考</strong>的<strong>什么试</strong>对应就好了。<strong>前10位</strong>确定好了，所以接下来不知道的其实就只剩下<code>考场号</code>和<code>座位号</code>了</p><h3 id="改进1-支持自定义试室范围和座位号范围（2018年2月…忘了具体啥时候了哈哈哈）"><a href="#改进1-支持自定义试室范围和座位号范围（2018年2月…忘了具体啥时候了哈哈哈）" class="headerlink" title="改进1: 支持自定义试室范围和座位号范围（2018年2月…忘了具体啥时候了哈哈哈）"></a>改进1: 支持自定义试室范围和座位号范围（2018年2月…忘了具体啥时候了哈哈哈）</h3><p>其实一开始的想法是自定义座位号范围，因为我想到很多学校一间试室都不会坐99个人。原程序的座位号是从 1 跑到 99 的，没法自定义范围，这样的话就会浪费很多时间去查询很多不存在的准考证号。</p><p>于是我做了以下改进：<br>既然要自定义座位号范围，那么就要把试室号和座位号拆开了，于是我顺便把自定义试室范围也搞了，这个很简单，加个for循环以及改下函数参数就好了。</p><p>原代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">myid = <span class="string">&quot;你的准考证号前10位&#123;id:05d&#125;&quot;</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10001</span>):</span><br><span class="line">    query_text =send_query_until_true(num)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>改进后：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">myid = <span class="string">&quot;你的准考证号前10位&#123;room_id:03d&#125;&#123;seat_id:02d&#125;&quot;</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># 试室范围：1~999，试室人数 1~40</span></span><br><span class="line">    <span class="keyword">for</span> room_num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">999</span>):</span><br><span class="line">        <span class="keyword">for</span> seat_num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">40</span>):</span><br><span class="line">            query_text = send_query_until_true(room_num, seat_num)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>记得把<code>send_query_until_true()</code>函数的参数也修改成<code>room_num, seat_num</code></p><h3 id="改进2-让程序遇到-Error-不中断执行（2018-08-22-更新）"><a href="#改进2-让程序遇到-Error-不中断执行（2018-08-22-更新）" class="headerlink" title="改进2: 让程序遇到 Error 不中断执行（2018-08-22 更新）"></a>改进2: 让程序遇到 Error 不中断执行（2018-08-22 更新）</h3><p><a href="http://www.freebuf.com/author/FlashYo">@FlashYo</a>在他的文章最后讲过，程序停止了不是报错就是查到了，我当时好奇会什么报错咧？</p><p>跑了一段时间后终于中断了，看了一下终端信息，原来是<code>requests</code>模块抛出的异常。后面又试了好几次中断，然后跑自己的准考证号时遇上了网络高峰期，尤其是这渣网络，简直疯狂断线，不带重连那种😂。终于忍无可忍，卷起袖子就开撸！</p><p>（咳～不能那么粗鲁，要文明🌚（逃～</p><p>直接上代码：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="comment"># 2018-08-22 更新 捕捉网络异常实现程序遇到 Error 不中断执行</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:  <span class="comment"># 一直循环，直到访问站点成功</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 以下except都是用来捕获当requests请求出现异常时，</span></span><br><span class="line">            <span class="comment"># 通过捕获然后等待网络情况的变化，以此来保护程序的不间断运行</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 此处写requests请求</span></span><br><span class="line">            ...</span><br><span class="line">            ...查询准考证的函数`send_query_until_true(...)`的内容...</span><br><span class="line">            ...</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ConnectionError:</span><br><span class="line">            log_info(<span class="string">&#x27;Unfortunitely -- ConnectionError Happened, please wait 3 seconds&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span> requests.exceptions.ChunkedEncodingError:</span><br><span class="line">            log_info(<span class="string">&#x27;Unfortunitely -- ChunkedEncodingError Happened, please wait 3 seconds&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            log_info(<span class="string">&#x27;Unfortunitely -- An Unknow Error Happened, Please wait 3 seconds&#x27;</span>)</span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p>Umm…我一口气把所有异常都捕捉了哈哈哈！！！这个代码也很简单，捕捉到异常就等待3秒，然后尝试重新跑 <strong>上一个</strong> 准考证号，有种断线重连的效果。</p><p><code>log_info(*arg)</code>是我自定义的一个函数，用于在终端输出信息的<strong>同时</strong>把信息存到文件中，方便后期查看（好吧，其实是避免电脑突然蓝屏或者什么原因重启导致的终端记录丢失，那我又要重新跑，多亏哦！）。</p><h2 id="真丶写收获"><a href="#真丶写收获" class="headerlink" title="真丶写收获"></a>真丶写收获</h2><p>时间问题，先在手机便签写着，写完马上补上，大家不要太期待哈哈哈🌚</p><h1 id="战果"><a href="#战果" class="headerlink" title="战果"></a>战果</h1><p>完成这些之后，终于能 <strong>全自动</strong> 跑了！！<strong>全自动！！！</strong></p><p>Oh, Yeah！妈妈再也不用担心我的程序突然中断了！！</p><p>昨天晚上，噢不，今天凌晨😂3点多，帮我的朋友跑出了她的准考证号，跑了好久哦，好几个小时，还好全自动🌚。。。</p><p>嗯…顺便在这里再次恭喜一下你过了六级吧👍👏 <strong>@念念</strong> ，被我吊了一手胃口刺激不🌚？</p><p>（不要问我为什么不查自己的，因为我还没考哈哈哈！）</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 实用 </tag>
            
            <tag> CET </tag>
            
            <tag> python </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx域名转发（反向代理）</title>
      <link href="/posts/357640ff.html"/>
      <url>/posts/357640ff.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><blockquote><p>参考：</p><ul><li><a href="https://www.cnblogs.com/linxiong945/p/4182928.html">【Nginx】关于域名转发proxy_pass</a></li><li><a href="https://doub.io/wlzy-3/">另一种利用Nginx反向代理来简单镜像 HTTP(S)网站 的方法</a></li></ul></blockquote><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在开发过程中，有时候我们会有一个这样的需求：访问<code>m.XXX.com</code>的时候，需要实际访问<code>www.YYY.com/m</code>，并且域名不能发生变化（这种也可称为镜像？）。</p><a id="more"></a><p>达成这个需求可以使用Nginx，有两种做法：</p><ul><li>第一种就是301跳转，使用rewrite来跳转域名，不过这样域名就会发生变化，与需求不符。</li><li>第二种就是用proxy_pass跳转，只要指定跳转目的域名，就可以在访问的时候自动跳转访问目的域名，而且域名也不会发生变化。所以这里需要使用第二种方法。</li></ul><h2 id="配置文件示例"><a href="#配置文件示例" class="headerlink" title="配置文件示例"></a>配置文件示例</h2><p>以下教程 域名以<code>m.XXX.com</code>为例，被镜像网站以<code>www.YYY.com/m</code>为例</p><p>然后访问你的域名看一看是否成功镜像，需要注意的一点是，如果被镜像的网站设置了<strong>防盗链</strong>，那么<strong>静态文件(js/css/图片)可能无法显示</strong>，这就没办法了。</p><h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><p>一般情况下只需要更改这几个参数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server_name 你的域名;</span><br><span class="line"> </span><br><span class="line">sub_filter 欲被镜像的域名 你的域名;</span><br><span class="line"> </span><br><span class="line">proxy_set_header Referer http:<span class="comment">//欲被镜像的域名;</span></span><br><span class="line"> </span><br><span class="line">proxy_set_header Host 欲被镜像的域名;</span><br><span class="line"> </span><br><span class="line">proxy_pass http:<span class="comment">//欲被镜像的域名;</span></span><br></pre></td></tr></table></figure><h3 id="建立-Nginx-配置文件"><a href="#建立-Nginx-配置文件" class="headerlink" title="建立 Nginx 配置文件"></a>建立 Nginx 配置文件</h3><p><strong>首先</strong><br>在<code>/etc/nginx/sites-available/</code>建立一个<code>m.XXX.com.conf</code>配置文件，内容参考<a href="#HTTP-%E7%A4%BA%E4%BE%8B">HTTP 示例</a>和<a href="#HTTPS-%E7%A4%BA%E4%BE%8B">HTTPS 示例</a>。</p><h3 id="HTTP-示例"><a href="#HTTP-示例" class="headerlink" title="HTTP 示例"></a>HTTP 示例</h3><p>以下示例是以<code> m.XXX.com </code>镜像<code> www.YYY.com/m </code>为例。自行替换 其中的参数：</p><p><strong>第二段是 屏蔽搜索引擎收录</strong>，比如镜像自己的网站，如果不屏蔽会导致 收录流失。</p><blockquote><p>注意：不管你是镜像 <strong><a href="http://www.baidu.com/">www.baidu.com</a></strong> 还是 <strong><a href="http://www.google.com.hk/">www.google.com.hk</a></strong> （不要直接使用 .com 会被谷歌自动根据VPS所在地区重定向的），他们两个目前都是强制重定向到 https ，这意味着如果你只配置了 http 反向代理，那么访问反向代理域名后会重定向到 https 的目标域名，所以你也<strong>必须配置 https 才行。</strong></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 下面这段代码才是 HTTP 完整示例配置文件，注意使用时修改里面的默认域名等信息。</span><br><span class="line">server &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">        server_name m.XXX.com;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ($http_user_agent ~* (baiduspider|<span class="number">360</span>spider|haosouspider|googlebot|soso|bing|sogou|yahoo|sohu-search|yodao|YoudaoBot|robozilla|msnbot|MJ12bot|NHN|Twiceler)) &#123;</span><br><span class="line">          <span class="keyword">return</span>  <span class="number">403</span>;</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        location / &#123;</span><br><span class="line">          sub_filter www.YYY.com m.XXX.com;</span><br><span class="line">          sub_filter_once off;</span><br><span class="line">          proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">          proxy_set_header Referer http:<span class="comment">//www.YYY.com;</span></span><br><span class="line">          proxy_set_header Host www.YYY.com;</span><br><span class="line">          proxy_pass http:<span class="comment">//www.YYY.com/m;</span></span><br><span class="line">          proxy_set_header Accept-Encoding <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="HTTPS-示例"><a href="#HTTPS-示例" class="headerlink" title="HTTPS 示例"></a>HTTPS 示例</h3><p>当你要镜像的网站不开放 HTTP 或者 强制HTTPS 的时候，你就需要加上 SSL 来转成 HTTPS 了。</p><p>假设SSL证书文件位置是：**/root/ssl.crt**</p><p>假设SSL密匙文件位置是：**/root/ssl.key**</p><p><strong>第二段的 301 代码</strong>是，强制走HTTPS，如果不需要可以去掉。</p><p><strong>第三段是 屏蔽搜索引擎收录</strong>，比如镜像自己的网站，如果不屏蔽会导致 收录流失。</p><p>同时下面这两个选项的记得把<code>http://</code>改成<code>https://</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header Referer https:<span class="comment">//www.YYY.com;</span></span><br><span class="line">proxy_pass https:<span class="comment">//www.YYY.com/m;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 下面这段代码才是 HTTPS 完整示例配置文件，注意使用时修改里面的默认域名等信息。</span><br><span class="line">server</span><br><span class="line">    &#123;</span><br><span class="line">        listen <span class="number">80</span>;</span><br><span class="line">        listen <span class="number">443</span> ssl;</span><br><span class="line">        ssl on;</span><br><span class="line">        ssl_certificate /root/ssl.crt;</span><br><span class="line">        ssl_certificate_key /root/ssl.key;</span><br><span class="line">        ssl_session_cache shared:SSL:<span class="number">10</span>m;</span><br><span class="line">        ssl_session_timeout  <span class="number">10</span>m;</span><br><span class="line">        server_name m.XXX.com;</span><br><span class="line">        add_header Strict-Transport-Security <span class="string">&quot;max-age=31536000&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ( $scheme = http )&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">301</span> https:<span class="comment">//$server_name$request_uri;</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> ($http_user_agent ~* (baiduspider|<span class="number">360</span>spider|haosouspider|googlebot|soso|bing|sogou|yahoo|sohu-search|yodao|YoudaoBot|robozilla|msnbot|MJ12bot|NHN|Twiceler)) &#123;</span><br><span class="line">          <span class="keyword">return</span>  <span class="number">403</span>;</span><br><span class="line">        &#125;</span><br><span class="line">  </span><br><span class="line">        location / &#123;</span><br><span class="line">          sub_filter www.YYY.com m.XXX.com;</span><br><span class="line">          sub_filter_once off;</span><br><span class="line">          proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">          proxy_set_header Referer http:<span class="comment">//www.YYY.com;</span></span><br><span class="line">          proxy_set_header Host www.YYY.com;</span><br><span class="line">          proxy_pass http:<span class="comment">//www.YYY.com/m;</span></span><br><span class="line">          proxy_set_header Accept-Encoding <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li><p>若是转发的地址含二级目录如：<code>www.YYY.com/m</code>，只需要把<code>proxy_pass</code>值修改为具体地址即可，若是不行则将<code>proxy_set_header</code>值也修改为具体地址。</p></li><li><p>若是你输入的地址中要有二级目录如<code>m.XXX.com/tools/a</code>，则<code>location</code>模块要改为： </p><pre><code class="js">location /tools/a &#123;      // ...  &#125;</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决iframe跨域高度自适应问题</title>
      <link href="/posts/a29672a0.html"/>
      <url>/posts/a29672a0.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>我在前面写博文的时候，有遇到一次需要嵌套别人的网页来做预览，我想到了用iframe标签，结果发现根本没法自适应高度？？！！什么玩意，强迫症的我又走上了填坑之路。对，你没看错，又。。。。</p><a id="more"></a><h1 id="iframe自适应高度"><a href="#iframe自适应高度" class="headerlink" title="iframe自适应高度"></a>iframe自适应高度</h1><blockquote><p>参考：<a href="http://www.manongjc.com/article/946.html">完美解决Iframe高度自适应（兼容性好并且支持跨域）</a></p></blockquote><p>经过一番搜索，终于找到了自适应高度的方法。<br>具体代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"> <span class="function"><span class="keyword">function</span> <span class="title">SetCwinHeight</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> iframeid=<span class="built_in">document</span>.getElementById(<span class="string">&quot;iframeid&quot;</span>); <span class="comment">//iframe id</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById)&#123;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">if</span> (iframeid &amp;&amp; !<span class="built_in">window</span>.opera)&#123;</span></span><br><span class="line">    if (iframeid.contentDocument &amp;&amp; iframeid.contentDocument.body.offsetHeight)&#123;</span><br><span class="line">     iframeid.height = iframeid.contentDocument.body.offsetHeight;</span><br><span class="line"><span class="javascript">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(iframeid.Document &amp;&amp; iframeid.Document.body.scrollHeight)&#123;</span></span><br><span class="line">     iframeid.height = iframeid.Document.body.scrollHeight;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">id</span>=<span class="string">&quot;iframeid&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;Javascript:SetCwinHeight()&quot;</span> <span class="attr">height</span>=<span class="string">&quot;1&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;www.xxx.com&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后。。。然后。。。没有然后，一点反应都没有？？！！什么东西？？我直觉告诉我很快就能搞定了，于是我继续填（wa）坑。</p><h1 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h1><p>原来。。。是 js 的跨域问题在搞鬼（好吧，我承认我主学的不是前端😂）</p><p>跨域的解决方法有很多，我用的是<code>document.domain</code>+<code>Nginx域名转发</code>的方法，比较偷懒嗯😂。</p><p>这种方法只适用于在自己博客上插入iframe的情况，而且需要博客在自己的服务器上和拥有自己的域名。</p><p>废话不多说，我先说一下<code>Nginx域名转发</code>。</p><h2 id="Nginx域名转发"><a href="#Nginx域名转发" class="headerlink" title="Nginx域名转发"></a>Nginx域名转发</h2><p><strong><font color='red'>20180823更新：本节内容已转移到<a href="./357640ff.html">Nginx域名转发（反向代理）</a></font></strong></p><h2 id="document-domain"><a href="#document-domain" class="headerlink" title="document.domain"></a>document.domain</h2><blockquote><p>参考：</p><ul><li><a href="https://www.zhangxinxu.com/wordpress/2010/12/%E5%B0%8Ftip%EF%BC%9Aiframe%E9%AB%98%E5%BA%A6%E5%8A%A8%E6%80%81%E8%87%AA%E9%80%82%E5%BA%94/">小tip：iframe高度动态自适应</a></li><li><a href="https://segmentfault.com/a/1190000000702539">新手学跨域之iframe</a></li></ul></blockquote><p>把 iframe 中<code>src</code>的网址转发到自己的域名后就可以用<code>document.domain</code>解决跨域问题啦！</p><p><code>document.domain</code>是比较常用的跨域方法。实现最简单但只能用于同一个主域下不同子域之间的跨域请求，比如 <strong>foo.com</strong>和 <strong>img.foo.com</strong> 之间，<strong>img1.foo.com</strong> 和 <strong>img2.foo.com</strong> 之间。只要把两个页面的<code>document.domain</code>都指向主域就可以了，比如<code>document.domain=&#39;foo.com&#39;;</code>。<br>设置好后父页面和子页面就可以像同一个域下两个页面之间访问了。父页面通过<code>ifr.contentWindow</code>就可以访问子页面的window，子页面通过<code>parent.window</code>或<code>parent</code>访问父页面的window，接下来可以进一步获取dom和js。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- foo.com/a.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">id</span>=<span class="string">&quot;ifr&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://img.foo.com/b.html&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> <span class="built_in">document</span>.domain = <span class="string">&#x27;foo.com&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">aa</span>(<span class="params">str</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.querySelector(<span class="string">&#x27;#ifr&#x27;</span>).contentWindow.bb(<span class="string">&#x27;aaa&#x27;</span>);</span></span><br><span class="line">&#125; <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- img.foo.com/b.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> <span class="built_in">document</span>.domain = <span class="string">&#x27;foo.com&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">bb</span>(<span class="params">str</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">parent.aa(<span class="string">&#x27;bbb&#x27;</span>); </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>下面是我修改后的代码：</strong></p><p><strong><font color='red'>my.js</font></strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">SetCwinHeight</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.domain=<span class="string">&#x27;www.abc.com&#x27;</span></span><br><span class="line">    <span class="keyword">var</span> iframeid = <span class="built_in">document</span>.getElementById(id); <span class="comment">//iframe id</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById) &#123;</span><br><span class="line">        <span class="keyword">if</span> (iframeid &amp;&amp; !<span class="built_in">window</span>.opera) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;iframeid:&quot;</span> + iframeid.contentDocument);</span><br><span class="line">            <span class="keyword">if</span> (iframeid.contentDocument &amp;&amp; iframeid.contentDocument.body.offsetHeight) &#123;</span><br><span class="line">                iframeid.height = iframeid.contentDocument.body.offsetHeight + <span class="number">50</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (iframeid.Document &amp;&amp; iframeid.Document.body.scrollHeight) &#123;</span><br><span class="line">                frameid.height = iframeid.Document.body.scrollHeight + <span class="number">50</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><font color='red'>xxx.md</font></strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/my.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">id</span>=<span class="string">&quot;iframe_id&quot;</span> <span class="attr">name</span>=<span class="string">&quot;iframe_id&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;Javascript:SetCwinHeight(this.id)&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;auto&quot;</span> <span class="attr">height</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.abc.com/tools/a/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>特别说明：</strong><br>在这里我说一下为什么要分开写，因为我发现不分开写没法正常加载js😂。</p><p>像下面这种：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">SetCwinHeight</span>(<span class="params">id</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.domain=<span class="string">&#x27;www.abc.com&#x27;</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">var</span> iframeid = <span class="built_in">document</span>.getElementById(id); <span class="comment">//iframe id</span></span></span><br><span class="line"><span class="javascript">   <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById) &#123;</span></span><br><span class="line"><span class="javascript">       <span class="keyword">if</span> (iframeid &amp;&amp; !<span class="built_in">window</span>.opera) &#123;</span></span><br><span class="line"><span class="javascript">           <span class="built_in">console</span>.log(<span class="string">&quot;iframeid:&quot;</span> + iframeid.contentDocument);</span></span><br><span class="line">           if (iframeid.contentDocument &amp;&amp; iframeid.contentDocument.body.offsetHeight) &#123;</span><br><span class="line">               iframeid.height = iframeid.contentDocument.body.offsetHeight + 50;</span><br><span class="line"><span class="javascript">           &#125; <span class="keyword">else</span> <span class="keyword">if</span> (iframeid.Document &amp;&amp; iframeid.Document.body.scrollHeight) &#123;</span></span><br><span class="line">               frameid.height = iframeid.Document.body.scrollHeight + 50;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">id</span>=<span class="string">&quot;iframe_id&quot;</span> <span class="attr">name</span>=<span class="string">&quot;iframe_id&quot;</span> <span class="attr">onload</span>=<span class="string">&quot;Javascript:SetCwinHeight(this.id)&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;auto&quot;</span> <span class="attr">height</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.abc.com/tools/a/&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>合起来写然后插入到 Markdown 里面貌似 hexo 渲染后 js 总有问题，不知是不是主题原因，我看过有一个 Next 主题的加载正常，蒙逼。。</p><p>出现的问题如下图：<br><img src="/images/cross-domain-error.png" alt="cross-domain-erro"></p><p>相信大家都看出来了，js代码乱掉了😂.</p><p>我自己也找过一些资料，其中不乏试过<a href="https://www.v2ex.com/t/162951#r_1717560">https://www.v2ex.com/t/162951#r_1717560</a>说的使用<a href="https://hexo.io/zh-cn/docs/tag-plugins.html#Raw">Raw标签插件</a>，但是没有用。。。</p><p>如果有人知道是什么原因的话，请告诉我一声谢谢！（在下方评论即可，PM我也可以）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web前端 </tag>
            
            <tag> iframe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐几个能自动转换粘贴内容为Markdown的工具</title>
      <link href="/posts/48ffa897.html"/>
      <url>/posts/48ffa897.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>今天在转载几篇文章的时候，看到别人的博文写的不错，想要转载到自己博客里。<br>但是由于我们是自己搭建的博客，发表的文章都是以源码方式编辑的，没法一键转载。</p><a id="more"></a><p>于是我就想到复制粘贴的时候能不能自动转换粘贴内容为Markdown呢？<br>（其实还是<a href="http://wdbaoge.com/2015/12/09/%E9%9A%8F%E7%AC%94-2015-12-09-hexo-%E5%8D%9A%E5%AE%A2%E8%BD%AC%E8%BD%BD/">hexo 博客神速转载</a>这篇文章给我的启发）</p><p>一开始我是在试用为知的一个插件预览<a href="https://github.com/akof1314/Wiz.Editor.md">Wiz.Editor.md</a></p><blockquote><p>预览地址：<a href="http://akof1314.github.io/Wiz.Editor.md/">http://akof1314.github.io/Wiz.Editor.md/</a></p></blockquote><p>后来发现用着用着感觉有点问题，觉得很不爽，弃用。<br>紧接着我脑子一热就想自己写一个。。。（好吧，最近项目比较多，这个得搁置一段时间了）<br>于是去github上找了一下，不负所望，这类工具还是有的！</p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>这几个工具基本都有在线预览，使用的时候直接预览就好了，如果自己需要整合源码进自己项目的话，就去下源码吧！</p><h2 id="2MD"><a href="#2MD" class="headerlink" title="2MD"></a><a href="https://github.com/phodal/2md">2MD</a></h2><blockquote><p><strong>推荐指数：<font color='red'>☆☆☆☆☆</font></strong><br>源码：<a href="https://github.com/phodal/2md">https://github.com/phodal/2md</a><br>原文：<a href="http://www.sohu.com/a/134631771_385076">http://www.sohu.com/a/134631771_385076</a><br>预览地址：[<a href="https://phodal.github.io/2md%1C](https://phodal.github.io/2md%1C)">https://phodal.github.io/2md](https://phodal.github.io/2md)</a></p></blockquote><p>我加了个iframe提供给大家直接预览：</p><p><strong><font color='red'>20180822更新：</font></strong><br><strong><font color='red'>注意！！！手机版目测无法正常使用，具体表现为无法粘贴，若想有完美体验，请转移到电脑端使用。不过，我只在我的魅族MX4 Pro上测试过（穷孩子没其他手机了😂），如果有机型成功粘贴了，可在下方评论告诉我😂</font></strong></p><script type="text/javascript" src="../js/my.js"></script><iframe width="100%" id="iframe_2MD" name="iframe_2MD" onload="Javascript:SetCwinHeight(this.id)" scrolling="auto" height="650" frameborder="0" src="https://reb.mallotec.com/tools/2md/"></iframe><blockquote><p>天哪！终于解决跨域自适应高度问题了😂</p></blockquote><h2 id="clipboard2markdown"><a href="#clipboard2markdown" class="headerlink" title="clipboard2markdown"></a><a href="https://github.com/euangoddard/clipboard2markdown">clipboard2markdown</a></h2><blockquote><p><strong>推荐指数：<font color='red'>☆☆☆☆</font>（因为操作没有2MD和界面好，所以就低一星）</strong><br>源码：<a href="https://github.com/euangoddard/clipboard2markdown">https://github.com/euangoddard/clipboard2markdown</a><br>预览地址：<a href="http://euangoddard.github.io/clipboard2markdown/">http://euangoddard.github.io/clipboard2markdown/</a></p></blockquote><p><strong><font color='red'>20180822更新：</font></strong><br><strong><font color='red'>注意！！！和上面的情况一样，手机版目测无法正常使用，具体表现为无法粘贴，若想有完美体验，请转移到电脑端使用。不过，我只在我的魅族MX4 Pro上测试过（穷孩子没其他手机了😂），如果有机型成功粘贴了，可在下方评论告诉我😂</font></strong></p><p><a href="http://euangoddard.github.io/clipboard2markdown/"><img src="/images//tools/clipboard2markdown-preview.png" alt="clipboard2markdown-preview"></a></p><blockquote><p>咳～这个…因为预览地址是http的，iframe在Chrome会直接空白，所以换上预览图。。。。点击预览图可直接跳转到预览页面哦🌚！</p></blockquote><h2 id="paste-as-markdown"><a href="#paste-as-markdown" class="headerlink" title="paste-as-markdown"></a>paste-as-markdown</h2><blockquote><p><strong>推荐指数：Umm…没有预览我懒得下了，没有指数没有预览哈哈哈！</strong><br>源码：<a href="https://github.com/letiantian/paste-as-markdown">https://github.com/letiantian/paste-as-markdown</a><br>原文：<a href="https://my.oschina.net/letiantian/blog/754905">https://my.oschina.net/letiantian/blog/754905</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Disqus API科学评论大法</title>
      <link href="/posts/d32fb564.html"/>
      <url>/posts/d32fb564.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>Disqus 不用说，大家都知道他的主域名<code>disqus.com</code>在国内被屏蔽了，导致在国内不能评论也不能看评论，体验十分不好。看了一下 Disqus 官方发现有个 API 反代加速访问的用法，于是去找了相关资料，原本想自己造轮子，后来发现已经有现成的，我就先拿来用着吧。</p><a id="more"></a><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>我们可以来看看disqus反向代理的原理图：<br><img src="/images/disqus-api-diagram.png" alt="disqus-api-diagra"></p><p>整体流程是这样的，在前端页面上测试disqus加载是否成功，如果成功则显示disqus的评论框，反之加载独立的评论框，并将请求发送给自己在国外的vps，利用vps做反向代理，接收来自客户端的请求到disqus服务器并再转发给客户端。</p><p>一句话概括就是：客户端发送请求给服务器，服务器通过Disqus Api提交评论。</p><h1 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h1><p><strong>目前现成的disqus反代主要有以下两种：</strong></p><ul><li><p><a href="https://github.com/ciqulover/disqus-proxy">disqus-proxy</a> <font color='gray'>–NodeJS实现</font><br><img src="/images/disqus-proxy.png" alt="disqus-proxy"></p></li><li><p><a href="https://github.com/fooleap/disqus-php-api">disqus-php-api</a> <font color='gray'>–PHP实现</font><br><img src="/images/disqus-php-api.gif" alt="disqus-php-api"></p></li></ul><p>上述两种方案均支持根据网络情况判断加载简易/原版评论框，看完UI后我很果断的选择了<code>disqus-php-api</code>……</p><p>以下为替换为<code>disqus-php-api</code>的具体步骤，供大家参考，也给自己留下一个记录。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><ul><li>一台国外的VPS服务器<h2 id="后端配置"><a href="#后端配置" class="headerlink" title="后端配置"></a>后端配置</h2></li></ul><h3 id="获取-disqus-php-api"><a href="#获取-disqus-php-api" class="headerlink" title="获取 disqus-php-api"></a>获取 <code>disqus-php-api</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/fooleap/disqus-php-api.git</span><br></pre></td></tr></table></figure><h3 id="移动并重命名"><a href="#移动并重命名" class="headerlink" title="移动并重命名"></a>移动并重命名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv -r disqus-php-api /path/to/disqus-php-api</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong><br>此处建议新建一个 Nginx 站点，如：api.xxx.com这类，专门放 API 的地方，注意DNS解析添加A记录和写好 Nginx 配置，尤其是要配置SSL证书。</p></blockquote><h3 id="修改-config-php"><a href="#修改-config-php" class="headerlink" title="修改 config.php"></a>修改 <code>config.php</code></h3><p>根据 <code>disqus-php-api/api/config.php</code> 中的注释修改相应配置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">&#x27;DISQUS_PUBKEY&#x27;</span>, <span class="string">&#x27;E8Uh5l5fHZ6gD8U3KycjAIAk46f68Zw7C6eW8WSjZvCLXebZ7p0r1yrYDrLilk2F&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;PUBLIC_KEY&#x27;</span>, <span class="string">&#x27;your-public-key&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;SECRET_KEY&#x27;</span>, <span class="string">&#x27;your-secret-key&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DISQUS_USERNAME&#x27;</span>, <span class="string">&#x27;your-disqus-username&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DISQUS_EMAIL&#x27;</span>, <span class="string">&#x27;your-email@gmail.com&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DISQUS_PASSWORD&#x27;</span>, <span class="string">&#x27;your-disqus-password&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DISQUS_WEBSITE&#x27;</span>, <span class="string">&#x27;https:/\/your-website.com&#x27;</span>);  <span class="comment">// 实际使用时要去掉链接的 \ ，这里是为了避免md直接吧双斜杠解析成注释了</span></span><br><span class="line">define(<span class="string">&#x27;DISQUS_SHORTNAME&#x27;</span>, <span class="string">&#x27;your-disqus-shortname&#x27;</span>);</span><br><span class="line">define(<span class="string">&#x27;DISQUS_APPROVED&#x27;</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><blockquote><p><strong>这里要注意的是，<code>DISQUS_WEBSITE</code>选项中，域名<font color='orange'>不能</font>这样写：‘<a style="underline: none">https://reb.mallotec.com/</a>‘，域名后不能以’/‘结尾，否则会出现一直创建<code>Thread</code>的情况</strong></p></blockquote><h2 id="前端配置"><a href="#前端配置" class="headerlink" title="前端配置"></a>前端配置</h2><h3 id="disqus-php-api集成至hexo"><a href="#disqus-php-api集成至hexo" class="headerlink" title="disqus-php-api集成至hexo"></a>disqus-php-api集成至hexo</h3><p><strong>修改 hexo 的主题配置文件</strong><br>在<code>主题配置</code>文件<code>_config.yml</code>中添加 disqusapi 相关参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">disqusapi:</span><br><span class="line">  forum: <span class="string">&#x27;your-short-name&#x27;</span></span><br><span class="line">  site: <span class="string">&#x27;https://your-site&#x27;</span></span><br><span class="line">  api: <span class="string">&#x27;https://your-site/.../disqus-php-api/api&#x27;</span></span><br><span class="line">  mode: <span class="number">1</span></span><br><span class="line">  badge: <span class="string">&#x27;博主&#x27;</span></span><br><span class="line">  timeout: <span class="number">3000</span></span><br></pre></td></tr></table></figure><blockquote><p>参数参考文档：<a href="https://github.com/fooleap/disqus-php-api/blob/master/readme.md">https://github.com/fooleap/disqus-php-api/blob/master/readme.md</a></p></blockquote><ul><li>forum：Disqus form的shortname</li><li>site：网站域名</li><li>api：PHP代码部署的网址：<a href="https://yoursite.com/disqus/api">https://yoursite.com/disqus/api</a></li><li>mode：<ul><li>1 检测能否访问 Disqus，若能则加载 Disqus 原生评论框，超时则加载简易评论框</li><li>2 仅加载简易评论框</li><li>3 同时加载两种评论框，先显示简易评论框，Disqus 加载完成则切换至 Disqus 评论框</li></ul></li><li>badge：管理员徽章文本</li><li>timeout：当mode为1时的超时时间</li></ul><h3 id="添加-disqusapi-模块"><a href="#添加-disqusapi-模块" class="headerlink" title="添加 disqusapi 模块"></a>添加 disqusapi 模块</h3><p>Material主题的 disqusapi 模块添加可以参考官方文档的<a href="https://material.viosey.com/docs/#/dev_comment">评论系统适配指南</a>。<br>直接拷贝一份官方提供的 disqus 评论模块到<code>&lt;主题根目录&gt;/layout/_widget/comment/disqusapi/</code>下。下面是<code>common.ejs</code>、<code>enter.ejs</code>、<code>main.ejs</code>的具体代码：</p><ul><li><p>common.ejs</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 DISQUS js 代码 --&gt;</span></span><br></pre></td></tr></table></figure><p>  common.ejs为空</p></li><li><p>enter.ejs</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用 DISQUS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">page.comments</span>) &#123;%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/disqus-php-api-dist/iDisqus.min.css&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/disqus-php-api-dist/iDisqus.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;comment&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>(&#x27;<span class="attr">_widget</span>/<span class="attr">comment</span>/&#x27; + <span class="attr">theme.comment.use</span> + &#x27;/<span class="attr">main</span>&#x27;) %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#comment</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#eee</span>;</span></span><br><span class="line">        padding: 2pc;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure><blockquote><ul><li><code>page.comments</code>是为了控制每一篇文章是否需要开启评论功能，需要在每一篇文章的<code>Front-matter</code>中设置<code>comments=&#123;Boolean&#125;</code></li><li>如果服务器很远，连接比较慢，建议把<code>iDisqus.min.css</code>和<code>iDisqus.min.js</code>放到<code>主题目录</code>的<code>source</code>里会更方便，渲染调试的时候直接从本地加载，不然调试的时候从网络加载半年网页都没加载完。当然，放到了CDN那更好，此处主要是为了方便<code>hexo s</code>调试。</li></ul></blockquote></li><li><p>main.ejs</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> emojiList = [&#123;</span></span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;smile&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;笑脸&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f604&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;mask&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;生病&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f637&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;joy&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;破涕为笑&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f602&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;stuck_out_tongue_closed_eyes&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;吐舌&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f61d&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;flushed&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;脸红&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f633&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;scream&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;恐惧&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f631&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;pensive&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;失望&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f614&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;unamused&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;无语&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f612&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;grin&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;露齿笑&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f601&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;heart_eyes&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;色&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f60d&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;sweat&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;汗&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f613&#x27;</span></span></span><br><span class="line">        &#125;,&#123;</span><br><span class="line"><span class="javascript">            code:<span class="string">&#x27;smirk&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            title:<span class="string">&#x27;得意&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            unicode:<span class="string">&#x27;1f60f&#x27;</span></span></span><br><span class="line">        &#125;];</span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> disq = <span class="keyword">new</span> iDisqus(<span class="string">&#x27;comment&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">            forum: <span class="string">&#x27;&lt;%= theme.disqusapi.forum %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            site: <span class="string">&#x27;&lt;%= theme.disqusapi.site %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            api: <span class="string">&#x27;&lt;%= theme.disqusapi.api %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            mode: <span class="string">&#x27;&lt;%= theme.disqusapi.mode %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            badge: <span class="string">&#x27;&lt;%= theme.disqusapi.badge %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            timeout: <span class="string">&#x27;&lt;%= theme.disqusapi.timeout %&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            init: <span class="literal">true</span>,</span></span><br><span class="line">            emoji_list: emojiList</span><br><span class="line">        &#125;);</span><br><span class="line">        disq.count();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后编辑<code>主题配置文件</code>中的<code>comment</code>模块开启<code>disqusapi</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">comment:</span><br><span class="line">    use: disqusapi</span><br></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><h2 id="1-没有权限"><a href="#1-没有权限" class="headerlink" title="1.没有权限"></a>1.没有权限</h2><blockquote><p>参考：</p><ul><li><a href="https://blog.fooleap.org/disqus-php-api.html#comment-3954303091">https://blog.fooleap.org/disqus-php-api.html#comment-3954303091</a></li><li><a href="https://blog.csdn.net/Axela30W/article/details/78981749">Linux查看、修改文件读写权限</a></li></ul></blockquote><p>问题如图：<br><img src="/images/disqus-php-api-no-permission.png" alt="disqus-php-api-no-permission"></p><p>据作者 fooleap 所说，显示没有权限的话，就是没有权限在当前目录创建文件夹。<br>于是我修改了 api 所在目录的权限就好了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R <span class="variable">$USER</span>:<span class="variable">$USER</span> path/to/disqus-php-api</span><br><span class="line">sudo chmod -R 777 path/to/disqus-php-api</span><br></pre></td></tr></table></figure><h2 id="2-由于disqus没有本页面的项管thread，故需先创建thread"><a href="#2-由于disqus没有本页面的项管thread，故需先创建thread" class="headerlink" title="2.由于disqus没有本页面的项管thread，故需先创建thread"></a>2.由于disqus没有本页面的项管thread，故需先创建thread</h2><blockquote><p>参考：<a href="https://blog.fooleap.org/disqus-php-api.html#comment-3829428059">https://blog.fooleap.org/disqus-php-api.html#comment-3829428059</a></p></blockquote><p>据作者 fooleap 所说，加载评论框的页面，若在 Disqus 没有相关的 thread，是必须先手动创建的，不设置成自动是避免生成无用的 thread。若想自动创建可以在<code>配置参数</code>里添加<code>autoCreate: true</code>。</p><ul><li>还有一种解决方法<strong>（推荐）</strong>：<br>如果出现创建<code>thread</code>的问题，那么可以通过 <code>mode</code>选择<code>1</code>，再翻墙访问你的文章页面，这时候加载原生Disqus评论系统，<code>thread</code>就创建成功了。</li><li><strong>特别要注意的是：</strong>如果你的文章标题中带有中文，会无法创建thread，所以不要使用中文命名文章。</li></ul><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><blockquote><ul><li><a href="https://www.jianshu.com/p/9cc4cc8628c9">解决Hexo博客中 Disqus 在国内不能访问的方案</a></li><li><a href="https://www.jianshu.com/p/2671b28b79e5">Hexo折腾记之科学使用Disqus与Next的集成</a></li><li><a href="https://mou.science/2017/05/22/disqus-php-api/">disqus-php-api 科学评论</a></li><li><a href="https://blog.fooleap.org/use-disqus-correctly.html#note-3">科学使用 Disqus</a></li><li><a href="https://blog.kuroy.me/using-disqus-reverse-proxy-hexo-fexo-theme/">为Hexo主题fexo添加disqus反代</a></li><li><a href="http://smk17.cn/posts/104/">〖原创〗基于disqus-php-api在Hexo博客中使用Disqus</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Disqus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试专页</title>
      <link href="/posts/b84ba97.html"/>
      <url>/posts/b84ba97.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">测试的英文？（全小写）</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="a01d060086b15defd2d752aaca71776cb7125832980bb6e3ef8c16b401056737">9eb34fd69087ff307617da2521d9974231465798995628390a18386e66803264483992b232fbcaa2ecf2634c50828290ac2bfe47d39643dc93ab0613ca19daeb8e46350c33d7c086a8801ba33a78a4a22d0ec0d9f06b4a7f67effab48ad5d0a18900af16d40dcb9f2c051e6644857ba388a4e85cb079794d82995a810f3a9c720de8cd9a287ab85641c89253a8dc6a0491f2ea627a0d4dd648e05047a88e4482ac5ba28ef47b719fa3866409ac4b32a696893278ac6c437135eb56e25a14cdc9a5040f7afd8bfdf59ae0b65567faa4591f0af5aaa86e3ba78452e0176a4c704efdc5208c2c0511c2ed85fe560b544f68e777a0b893dfb72023162955fc7c68c70fc5adf169075f4fb78f90198738453109390c89a8f009fb65dc07a6a7c35ebc1e52a3e864571404fb59389d75c899c1ea1e0cece1da1727d0c5fc4dc546162183bd1a9ef177e509360969963bf187e1c12019f1c197e5d5ac49e0f6f82f194e4f5220432ff660d6d15a740a970e2836e682b24f840f722e4076ef6cbf4becc4253f30cb6c3368d2c5acb9e0d59c4c223977d28c28e21e4f872a5ef9fbc0ed0d23fe13afbbb0ca9a8590f31c8054b2212d8240bd02ddd58d2f03272da2cb0e948042d9702953736f4fe044cd947cd300358c7be6f6e0ceb5f76f113bc9621793b70b18d3becbabd94148ae5b3f68834de568bb8b2e18575bf1f23ac49aca655e7a8fb1f2eae133662c0b193191afe4b4d68cab138340853519590df6c27efa37618349c78bbb56537087650a383a441a8469f62b596768168290c50c2746d5ff7a0597c91328d36ce1547ff3e46bacb1ebe2915793e73cdea91014c26d081f82297c80a0b3b95513f13da8bc9e0e56636ac5ce9775a02ddef6f33f07c3b1766327d927670e62072cffc5a9f936675e0c98ceee0246124a88d0b01f2952f82d2defc3a0eb4535b7a66df66e4106d252cf36d36bc0262fb6ca9e206449373d33713711f9604d8009d87334528c38950c845686b56fa5f7289db412bdca9ec8a15e3df5f36343db3183ef86264ebe144bd77fa4348272baa62afe55664e19d3b83c4dfcea5be49b8d1bd423c5b2ba1402471180afedd2b538881edc732ad818d4497825153500504999232dd1c35213f2fd72fe6d7c043ef9e4cf97fec31960f164746e94ea0fc0d843f3fc3e93b62f16ab843cfb38909466a45697f413623fa06a767ce38952be2df0647790d98542663afbf9cae4059c8bb6dd1586cf0c2225e1cf351f18656697506e38729832d687d49c67ec2cfdbe72e9bd2775eeb7cc7bb41422a981a970f2beb8ec775d4d14d928d1a8fe3cdefa640904c62a02722581372ca3d2086da0c3b6a2904ade5c618f8fb196e8fbbd8f1d5a25b1dede0cac163de3b9b91ba14a76a6fdb919bddefd2914b226d3ebe9d4c2b064a649d76b15556348077d9945e1de4d435ad69122e0910545ccda7cc07f9ebb97ee9bb62731e1654819cbe33e108b2e0c86ee20f75292e2fce37a5eb1e8edbbead378f739c6ef6b68a977f606e8a7f678f7266f0bf9b47c1d28ca77808d1ef62a09ca3e7893563afe99d50ac4ae4db59d4df8f3ddce98c12eacebb027257216f69790b209c31ff4c9d2b7ac668e370b07d003a4b75a5d65878657c46ebe333ceb8595507446b785df5c2479d6ffd9438b7f8a878e0ec42f98abeee5c27ecf202deebf7905d250c6421f4e4b4d75283a99b56cd3b181460810e899fd3b9384b73d11a5468d0882963deac8373267ae46369e39b433bb2b93332a61f01ef60d2f3d92d9ba51d8408052bcab889a410b0c00c1ae45c4fbe84438e3eb38e0a3f9cd43b3d42e725417b9813da4cc74d6c61cb6073b4db30b49140ea29e272423a832dcb1ad404db2eee3e1b4f96dbfdadae5af6b2d17da8f7fecb939b8796d8ccdc293a6552f41fb2f16fdaa22021cda470b06bd7c0d8b026b65048f6f2a2ca7d670084f1194cc81db2de1ba47c29ed5ac2e43be9969471c485db40830074807c820787253b452080327e35246ffc0eba92c54f2b2d21201ad9b59591e695bac54a6432bf9d160ce7ae2f3d628f818cdd667686fd5803ae77c01eff694df4ac45330c2fb82c539874afde55e6017cd78f751366036cce725a4fdc6add2c512d685585c58d20d54932ef69c82d17894d4d510b14381a1a8b6e4906c6ad42e0b2daed71aae6e4beba9454a2516bafd81bc0e536b05053c7cced3bc4fc208edc3420c1145af2910c2de9d53bd0425607a44654fb4b22744a2f60df2526707d361cdda12898b1577e444c67710e3e1050c57ad0e9f0f1dfb100d5c9c7e6f242d20b10ab3130d43703f504063bc187d2d316080bad793f4b9f79577f8fc478a215895a6d513b16a228e086a51cc72d8f942cc8e2a7ac70b6e8435e50f26dc2b72e4a303948e66d4cea7807399</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加Disqus评论</title>
      <link href="/posts/2cb4e595.html"/>
      <url>/posts/2cb4e595.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>国内的评论系统畅言都需要ICP备案，像我这种打死不备案的人来说，国内的评论系统就用不了了。最终决定博客使用的是国外的 <strong>Disqus</strong> 评论系统，但他的主域名<code>disqus.com</code>在国内被屏蔽了，只能科学上网后使用。</p><p>果然有空还是自己造轮子爽一点，逃～</p><a id="more"></a><h1 id="配置-Disqus"><a href="#配置-Disqus" class="headerlink" title="配置 Disqus"></a>配置 Disqus</h1><p>Disqus官网：<a href="https://disqus.com/">https://disqus.com</a><br>打开链接后， 可以直接用Facebook，Twitter以及 Google 登录，也可以用邮箱注册后登录。</p><h2 id="选择创建目的"><a href="#选择创建目的" class="headerlink" title="选择创建目的"></a>选择创建目的</h2><p>登录后，点击首页的GET STARTED 按钮，然后点击图示按钮：<br><img src="/images/disqus-step1-intent.png" alt="disqus-step1-intent"></p><h2 id="创建一个新站点"><a href="#创建一个新站点" class="headerlink" title="创建一个新站点"></a>创建一个新站点</h2><p><img src="/images/disqus-step2-newsite.png" alt="disqus-step2-newsite"></p><ul><li>Website Name 填的是<code>shortname</code>，到时候要填到<code>主题配置文件</code>中</li><li>Category 选择种类，我选的是 <code>Tech</code></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Select-Plan"><a href="#Select-Plan" class="headerlink" title="Select Plan"></a>Select Plan</h3><p>接下来你会看到以下页面：<br><img src="/images/disqus-step3-choose-plan.png" alt="disqus-step3-choose-plan"><br>这一步不需要选计划，跳过<code>Select Plan</code>，直接到<code>Install Disqus</code>。</p><h3 id="Install-Disqus"><a href="#Install-Disqus" class="headerlink" title="Install Disqus"></a>Install Disqus</h3><h4 id="Select-Platform"><a href="#Select-Platform" class="headerlink" title="Select Platform"></a>Select Platform</h4><p><img src="/images/disqus-step4-choose-platform.png" alt="disqus-step4-choose-platform"><br>Hexo 不属于以上任何形式，因此选择<code>Universal Code</code>(通用代码)。</p><h4 id="Install-Instructions"><a href="#Install-Instructions" class="headerlink" title="Install Instructions"></a>Install Instructions</h4><p><img src="/images/disqus-step5-universalcode-install.png" alt="disqus-step5-universalcode-instal"><br>然后拉到最下面选择<code>Configure</code></p><h3 id="Configure-Disqus"><a href="#Configure-Disqus" class="headerlink" title="Configure Disqus"></a>Configure Disqus</h3><p><img src="/images/disqus-step6-configure.png" alt="disqus-step6-configure"></p><ul><li>Website Name 一般就刚刚第一步填的<code>short name</code>（我刚刚填了 justtestme，到这步的时候一般会自动填充）</li><li>Website URL 填写你的博客地址</li></ul><p>填完信息后点击<code>Complete Setup</code>完成配置。</p><h1 id="配置-Hexo"><a href="#配置-Hexo" class="headerlink" title="配置 Hexo"></a>配置 Hexo</h1><p>在<code>主题配置文件</code>中找到<code>comment</code>项：<br>（以 Material 主题为例）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Comment Systems</span></span><br><span class="line"><span class="comment"># Available value of &quot;use&quot;:</span></span><br><span class="line"><span class="comment">#     disqus | disqus_click | changyan | 163gentie</span></span><br><span class="line">comment:</span><br><span class="line">    use: disqus_click</span><br><span class="line">    shortname: justtestme <span class="comment"># duoshuo or disqus shortname</span></span><br></pre></td></tr></table></figure><ul><li><strong>use</strong>：选择<code>disqus</code>或<code>disqus_click</code>，两者差别请参阅<a href="https://material.viosey.com/docs/">Material主题文档</a></li><li><strong>shortname</strong>：填写你刚刚在 Disqus 设置的 Website Name，英文冒号后空格。（严格意义上是填站点配置面板中的 Shortname ）</li></ul><h1 id="部署应用"><a href="#部署应用" class="headerlink" title="部署应用"></a>部署应用</h1><p>使用如下命令提交到服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>科学上网后，任意打开一篇你的博文就能评论了。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在<a href="https://justtestme.disqus.com/admin/settings/general/">https://justtestme.disqus.com/admin/settings/general/</a>页面管理 Your Sites（ justtestme 换成自己的 shortname ）。</p><p>此处的 Shortname 和 Websit Name 是可以不同的。如下图：<br><img src="/images/disqus-configure-differentname-short-website.png" alt="disqus-configure-differentname-short-website"></p><blockquote><p><strong>注意：</strong><code>主题配置文件</code>中<code>comment</code>项填的是此处的 <font color='red'><strong>Shortname</strong></font> 而不是 Website Name！！</p></blockquote><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.jianshu.com/p/d68de067ea74">Hexo搭建博客系列：（六）Hexo添加Disqus评论</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Disqus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac使用brew安装的MySQL版本切换</title>
      <link href="/posts/a96dbfbe.html"/>
      <url>/posts/a96dbfbe.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><blockquote><p>参考：<a href="https://www.jianshu.com/p/f1a5a680b464">https://www.jianshu.com/p/f1a5a680b464</a></p></blockquote><p><font color='red'><strong>☆☆20180801更新：通过测试发现直接使用<code>brew services start mysql@5.6</code>即可切换至5.6版本使用，不需要<code>brew unlink</code>，是否可用请自行测试，测试前请备份好数据！！☆☆</strong></font></p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>今天因为要写JavaEE大作业运行了一遍队友发过来的项目，却无法正常运行。经过一番追踪，发现是MySQL版本不对的问题，项目使用的MySQL版本是5.6（从使用的JDBC驱动就可以看出来）。本来想着更新JDBC驱动就可以解决，却发现Hibernate也要更新，还不清楚Hibernate支不支持8.0的MySQL，想了一下还是决定装多一个版本的MySQL吧。</p><a id="more"></a><h2 id="切换重点"><a href="#切换重点" class="headerlink" title="切换重点"></a>切换重点</h2><ol><li><code>/usr/local/var/mysql/</code>通过切换每个版本来使用数据库设置和数据</li><li>使用<code>brew unlink</code>和<code>brew link</code>切换活动版本的MySQL</li></ol><h2 id="教程摘要"><a href="#教程摘要" class="headerlink" title="教程摘要"></a>教程摘要</h2><p>下面我们来看一下大概流程：</p><ul><li>停止运行MySQL</li><li>在设置和数据目录（usr/local/var/mysql）之间切换</li><li>brew unlink并brew link与切换活动的MySQL</li><li>启动MySQL</li></ul><h2 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h2><p>本例以已安装MySQL 8.0再安装5.6 为例</p><h4 id="1-备份-usr-local-var-mysql"><a href="#1-备份-usr-local-var-mysql" class="headerlink" title="1. 备份/usr/local/var/mysql/"></a>1. 备份<code>/usr/local/var/mysql/</code></h4><p>由于存储了设置和DB数据，因此应该备份好，然后撤离。<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/<span class="built_in">local</span>/var/mysql /usr/<span class="built_in">local</span>/var/mysql_80</span><br></pre></td></tr></table></figure></p><h4 id="2-删除MySQL-8-0的符号链接"><a href="#2-删除MySQL-8-0的符号链接" class="headerlink" title="2. 删除MySQL 8.0的符号链接"></a>2. 删除MySQL 8.0的符号链接</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew unlink mysql</span><br></pre></td></tr></table></figure><blockquote><p><strong>解释：</strong><br>这个符号链接 指的是诸如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/bin/mysql -&gt; ../Cellar/mysql/5.7.10/bin/mysql</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/lib/libmysqlclient.20.dylib -&gt; ../Cellar/mysql/5.7.10/lib/libmysqlclient.20.dylib</span><br></pre></td></tr></table></figure><p>之类的东西。</p></blockquote><p><strong>注意：</strong><br>如果此符号链接存在，安装另一个版本将可能导致以下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ brew install mysql56</span><br><span class="line">==&gt; Reinstalling homebrew/versions/mysql56</span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles-versions/mysql56-5.6.27.el_capitan.bottle.tar.gz</span><br><span class="line">Already downloaded: /Library/Caches/Homebrew/mysql56-5.6.27.el_capitan.bottle.tar.gz</span><br><span class="line">==&gt; Pouring mysql56-5.6.27.el_capitan.bottle.tar.gz</span><br><span class="line">Error: The `brew link` step did not complete successfully</span><br><span class="line">The formula built, but is not symlinked into /usr/<span class="built_in">local</span></span><br><span class="line">Could not symlink bin/innochecksum</span><br><span class="line">Target /usr/<span class="built_in">local</span>/bin/innochecksum</span><br><span class="line">is a symlink belonging to mysql. You can unlink it:</span><br><span class="line">  brew unlink mysql</span><br><span class="line"></span><br><span class="line">To force the link and overwrite all conflicting files:</span><br><span class="line">  brew link --overwrite mysql56</span><br><span class="line"></span><br><span class="line">To list all files that would be deleted:</span><br><span class="line">  brew link --overwrite --dry-run mysql56</span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$ brew install mysql56</span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated 1 tap (homebrew/cask).</span><br><span class="line">No changes to formulae.</span><br><span class="line"></span><br><span class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/mysql@5.6-5.6.40.sierra.bottle.tar.gz</span><br><span class="line"><span class="comment">######################################################################## 100.0%</span></span><br><span class="line">==&gt; Pouring mysql@5.6-5.6.40.sierra.bottle.tar.gz</span><br><span class="line">==&gt; /usr/<span class="built_in">local</span>/Cellar/mysql@5.6/5.6.40/bin/mysql_install_db --verbose --user=xxx --basedir=/usr/<span class="built_in">local</span>/Cellar/mysql@5.6/5.6.40 --datadir=/usr/<span class="built_in">local</span>/var/mysql --tmpdir=/tmp</span><br><span class="line">==&gt; Caveats</span><br><span class="line">A <span class="string">&quot;/etc/my.cnf&quot;</span> from another install may interfere with a Homebrew-built</span><br><span class="line">server starting up correctly.</span><br><span class="line"></span><br><span class="line">MySQL is configured to only allow connections from localhost by default</span><br><span class="line"></span><br><span class="line">To connect:</span><br><span class="line">    mysql -uroot</span><br><span class="line"></span><br><span class="line">This formula is keg-only, <span class="built_in">which</span> means it was not symlinked into /usr/<span class="built_in">local</span>,</span><br><span class="line">because this is an alternate version of another formula.</span><br><span class="line"></span><br><span class="line">If you need to have this software first <span class="keyword">in</span> your PATH run:</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/mysql@5.6/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">For compilers to find this software you may need to <span class="built_in">set</span>:</span><br><span class="line">    LDFLAGS:  -L/usr/<span class="built_in">local</span>/opt/mysql@5.6/lib</span><br><span class="line">    CPPFLAGS: -I/usr/<span class="built_in">local</span>/opt/mysql@5.6/include</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">To have launchd start mysql@5.6 now and restart at login:</span><br><span class="line">  brew services start mysql@5.6</span><br><span class="line">Or, <span class="keyword">if</span> you don<span class="string">&#x27;t want/need a background service you can just run:</span></span><br><span class="line"><span class="string">  /usr/local/opt/mysql@5.6/bin/mysql.server start</span></span><br><span class="line"><span class="string">==&gt; Summary</span></span><br><span class="line"><span class="string">🍺  /usr/local/Cellar/mysql@5.6/5.6.40: 340 files, 154.0MB</span></span><br></pre></td></tr></table></figure><h4 id="3-安装MySQL-5-6"><a href="#3-安装MySQL-5-6" class="headerlink" title="3. 安装MySQL 5.6"></a>3. 安装MySQL 5.6</h4><p>很简单，执行以下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mysql56</span><br></pre></td></tr></table></figure><p>安装后记得导入环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/mysql@5.6/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br></pre></td></tr></table></figure><h5 id="附录：Mac通过brew安装MySQL后详细配置过程"><a href="#附录：Mac通过brew安装MySQL后详细配置过程" class="headerlink" title="附录：Mac通过brew安装MySQL后详细配置过程"></a>附录：Mac通过brew安装MySQL后详细配置过程</h5><h4 id="4-分配MySQL-5-6链接"><a href="#4-分配MySQL-5-6链接" class="headerlink" title="4. 分配MySQL 5.6链接"></a>4. 分配MySQL 5.6链接</h4><p>安装MySQL 5.6之后，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew unlink mysql &amp;&amp; brew link mysql@5.6 --force</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>尽管可以通过执行链接来重新分配链接，但最好首先清除链接，因为发出大量日志很难发现错误。<code>--force</code>参数看具体情况使用，若<code>brew link mysql@5.6</code>不提示要强制链接的话就不需要该参数了。</p><h4 id="5-启动MySQL-5-6并检查版本"><a href="#5-启动MySQL-5-6并检查版本" class="headerlink" title="5. 启动MySQL 5.6并检查版本"></a>5. 启动MySQL 5.6并检查版本</h4><p>用brew启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start mysql@5.6</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql.server start</span><br></pre></td></tr></table></figure><p>检查版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ mysql -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.6.40 Homebrew</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>从日志可以确认MySQL 5.6启动。<br>如果版本中显示5.7，我们要检查日志等，因为有可能无法替换符号链接。</p><h4 id="6-停止MySQL-5-6服务并保存数据"><a href="#6-停止MySQL-5-6服务并保存数据" class="headerlink" title="6. 停止MySQL 5.6服务并保存数据"></a>6. 停止MySQL 5.6服务并保存数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mysql.server stop</span><br><span class="line">Shutting down MySQL</span><br><span class="line">. SUCCESS!</span><br><span class="line">$ mv /usr/<span class="built_in">local</span>/var/mysql /usr/<span class="built_in">local</span>/var/mysql_56</span><br></pre></td></tr></table></figure><h4 id="7-恢复最初安装的MySQL-5-7启动"><a href="#7-恢复最初安装的MySQL-5-7启动" class="headerlink" title="7. 恢复最初安装的MySQL 5.7启动"></a>7. 恢复最初安装的MySQL 5.7启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ mv /usr/<span class="built_in">local</span>/var/mysql_80 /usr/<span class="built_in">local</span>/var/mysql</span><br><span class="line">$ brew unlink mysql56 &amp;&amp; brew link mysql</span><br><span class="line">Unlinking /usr/<span class="built_in">local</span>/Cellar/mysql56/5.6.40... 99 symlinks removed</span><br><span class="line">Linking /usr/<span class="built_in">local</span>/Cellar/mysql/8.0.11... 79 symlinks created</span><br><span class="line">$ mysql.server start</span><br><span class="line">Starting MySQL</span><br><span class="line">. SUCCESS!</span><br><span class="line">$ mysql -u root</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 8.0.11 Homebrew</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>从日志可以确认MySQL 8.0启动。</p><h3 id="疑难解答"><a href="#疑难解答" class="headerlink" title="疑难解答"></a>疑难解答</h3><ol><li><p><strong><code>/usr/local/var/mysql/</code>为什么有必要切换</strong><br>如果至少启动一次8.0，如果使用相同的数据运行5.6，将出现以下错误：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    Starting MySQL</span><br><span class="line">. ERROR! The server quit without updating PID file (/usr/<span class="built_in">local</span>/var/mysql/xxx.local.pid).</span><br></pre></td></tr></table></figure><p> 由于mysqld等没有动，似乎是权威，但解决不了。<br>（由于目录结构根据版本不同而不同，可能会影响权限以外的内容）</p></li><li><p><strong>MySQL 5.6和MySQL 5.7（<code>/usr/local/var/mysql/</code>）的初始数据目录结构</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># MySQL 5.6</span></span><br><span class="line">$ ls -l /usr/<span class="built_in">local</span>/var/mysql</span><br><span class="line">-rw-rw----   1 xxx  admin        56  7 26 20:54 auto.cnf</span><br><span class="line">-rw-r-----   1 xxx  admin         0  7 26 20:50 binlog.index</span><br><span class="line">-rw-r-----   1 xxx  admin     10369  7 27 18:30 xxx.local.err</span><br><span class="line">-rw-rw----   1 xxx  admin         5  7 27 18:30 xxx.local.pid</span><br><span class="line">-rw-rw----   1 xxx  admin  50331648  7 27 18:30 ib_logfile0</span><br><span class="line">-rw-rw----   1 xxx  admin  50331648  7 26 20:46 ib_logfile1</span><br><span class="line">-rw-rw----   1 xxx  admin  12582912  7 27 18:30 ibdata1</span><br><span class="line">drwx------  81 xxx  admin      2754  7 26 20:46 mysql</span><br><span class="line">drwx------  55 xxx  admin      1870  7 26 20:46 performance_schema</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># MySQL 8.0</span></span><br><span class="line">$ ls -l /usr/<span class="built_in">local</span>/var/mysql_80</span><br><span class="line">-rw-r-----    1 xxx  admin        56  7 26 19:44 auto.cnf</span><br><span class="line">-rw-r-----    1 xxx  admin       178  7 26 19:50 binlog.000001</span><br><span class="line">-rw-r-----    1 xxx  admin     11628  7 26 20:42 binlog.000002</span><br><span class="line">-rw-r-----    1 xxx  admin        32  7 26 19:51 binlog.index</span><br><span class="line">-rw-------    1 xxx  admin      1680  7 26 19:44 ca-key.pem</span><br><span class="line">-rw-r--r--    1 xxx  admin      1112  7 26 19:44 ca.pem</span><br><span class="line">-rw-r-----    1 xxx  admin      2783  7 26 20:42 xxx.local.err</span><br><span class="line">-rw-r-----    1 xxx  admin         6  7 26 19:51 xxx.local.pid</span><br><span class="line">-rw-r--r--    1 xxx  admin      1112  7 26 19:44 client-cert.pem</span><br><span class="line">-rw-------    1 xxx  admin      1676  7 26 19:44 client-key.pem</span><br><span class="line">-rw-r-----    1 xxx  admin      3346  7 26 20:42 ib_buffer_pool</span><br><span class="line">-rw-r-----    1 xxx  admin  50331648  7 26 20:42 ib_logfile0</span><br><span class="line">-rw-r-----    1 xxx  admin  50331648  7 26 19:44 ib_logfile1</span><br><span class="line">-rw-r-----    1 xxx  admin  12582912  7 26 20:42 ibdata1</span><br><span class="line">drwxr-x---    8 xxx  admin       272  7 26 19:44 mysql</span><br><span class="line">-rw-r-----    1 xxx  admin  25165824  7 26 20:19 mysql.ibd</span><br><span class="line">drwxr-x---  104 xxx  admin      3536  7 26 19:44 performance_schema</span><br><span class="line">-rw-------    1 xxx  admin      1680  7 26 19:44 private_key.pem</span><br><span class="line">-rw-r--r--    1 xxx  admin       452  7 26 19:44 public_key.pem</span><br><span class="line">-rw-r--r--    1 xxx  admin      1112  7 26 19:44 server-cert.pem</span><br><span class="line">-rw-------    1 xxx  admin      1676  7 26 19:44 server-key.pem</span><br><span class="line">drwxr-x---    3 xxx  admin       102  7 26 19:44 sys</span><br><span class="line">-rw-r-----    1 xxx  admin  10485760  7 26 20:42 undo_001</span><br><span class="line">-rw-r-----    1 xxx  admin  10485760  7 26 20:42 undo_002</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Homebrew </tag>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac通过brew安装的MySQL各种无法运行问题总结</title>
      <link href="/posts/6965849b.html"/>
      <url>/posts/6965849b.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h2 id="一、解决-ERROR-The-server-quit-without-updating-PID-file-usr-local-var-mysql-xxx-local-pid"><a href="#一、解决-ERROR-The-server-quit-without-updating-PID-file-usr-local-var-mysql-xxx-local-pid" class="headerlink" title="一、解决 ERROR! The server quit without updating PID file (/usr/local/var/mysql/xxx.local.pid)."></a>一、解决 ERROR! The server quit without updating PID file (/usr/local/var/mysql/xxx.local.pid).</h2><blockquote><p>参考：<a href="https://stackoverflow.com/a/36156848">https://stackoverflow.com/a/36156848</a></p></blockquote><a id="more"></a><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>之前用的好好的，经过一次更新（5.6-&gt;8.0）后某一天突然炸了。<br>通过<code>brew services start mysql</code>启动 MySQL 后，使用 Navicat 连接提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2003 - Can<span class="string">&#x27;t connect to MySQL server on &#x27;</span>127.0.0.1<span class="string">&#x27; (61 &quot;Connection refused&quot;)</span></span><br></pre></td></tr></table></figure><p>经过一番查询，据说是 MySQL 服务没启动的问题（其实我觉得这说法有点不对），然后我就尝试启动MySQL服务，命令<code>mysql.server start</code>。<br>接着我收到以下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR! The server quit without updating PID file (/usr/<span class="built_in">local</span>/var/mysql/xxx.local.pid).</span><br></pre></td></tr></table></figure><p><code>xxx</code>为我的机器名字。</p><p>然后执行<code>mysql_secure_installation</code>又提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Securing the MySQL server deployment.</span><br><span class="line"></span><br><span class="line">Enter password <span class="keyword">for</span> user root:</span><br><span class="line">Error: Can<span class="string">&#x27;t connect to local MySQL server through socket &#x27;</span>/tmp/mysql.sock<span class="string">&#x27; (2)</span></span><br></pre></td></tr></table></figure><p>后来经过各种尝试如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">rm /usr/<span class="built_in">local</span>/var/mysql/*.err</span><br><span class="line">rm /usr/<span class="built_in">local</span>/var/mysql/xxx.local.err</span><br><span class="line">find / -name mysql.sock</span><br><span class="line">sudo chmod -R 755 /usr/<span class="built_in">local</span>/var/mysql/</span><br><span class="line">sudo chown -R _mysql:mysql /usr/<span class="built_in">local</span>/var/mysql</span><br><span class="line">ls -laF /usr/<span class="built_in">local</span>/var/mysql/</span><br><span class="line">sudo rm -f /tmp/mysql.sock.lock</span><br><span class="line">ls -laF /tmp</span><br></pre></td></tr></table></figure><p>还有通过<code>ps aux | grep mysql</code>找出 MySQL 的 PID，再用<code>kill -9 [PID]</code>杀掉进程都没用。</p><h3 id="最终解决方法：重装大法"><a href="#最终解决方法：重装大法" class="headerlink" title="最终解决方法：重装大法"></a>最终解决方法：重装大法</h3><p>最后尝试完全重新安装 MySQL 终于解决了。<br><strong>警告：</strong>这将删除所有数据库，因此请确保先保存转储。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">brew remove mysql</span><br><span class="line">brew cleanup --force</span><br><span class="line">launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</span><br><span class="line">rm ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</span><br><span class="line">sudo rm -rf /usr/<span class="built_in">local</span>/var/mysql</span><br><span class="line"></span><br><span class="line">brew install mysql</span><br><span class="line">mysqld --initialize --explicit_defaults_for_timestamp</span><br><span class="line">mysql.server start <span class="comment"># no sudo!</span></span><br></pre></td></tr></table></figure><p>重装了MySQL后建议重新执行一次配置脚本：<code>mysql_secure_installation</code></p><blockquote><p>注意：<br>安装后必须执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize --explicit_defaults_for_timestamp</span><br></pre></td></tr></table></figure><p>否则仍无法解决以下问题：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: Can<span class="string">&#x27;t connect to local MySQL server through socket &#x27;</span>/tmp/mysql.sock<span class="string">&#x27; (2)</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>卸载过程如下（保留以便日后需要）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">$ brew remove mysql</span><br><span class="line">Uninstalling /usr/<span class="built_in">local</span>/Cellar/mysql/8.0.11... (254 files, 232.9MB)</span><br><span class="line">mysql 5.7.21, 5.7.22 2 are still installed.</span><br><span class="line">Remove all versions with `brew uninstall --force mysql`.</span><br><span class="line">$ brew uninstall --force mysql</span><br><span class="line">Uninstalling mysql... (640 files, 467.8MB)</span><br><span class="line">$ brew cleanup --force</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/dash/0.5.10... (6 files, 196.2KB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/dash/0.5.9.1... (5 files, 199KB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/freetds/1.00.89... (2,094 files, 11.9MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/freetds/1.00.91... (2,094 files, 11.9MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/freetype/2.9... (60 files, 2.7MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/gdbm/1.14.1_1... (20 files, 555.8KB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/icu4c/61.1... (249 files, 67.2MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/libidn2/2.0.4... (46 files, 580.8KB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/libpq/10.3... (2,425 files, 26.8MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/libunistring/0.9.9... (54 files, 4.4MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/nginx/1.13.12... (23 files, 1.4MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/nginx/1.15.0... (23 files, 1.4MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/node/10.0.0... (5,301 files, 51.7MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/node/10.1.0... (7,283 files, 55.4MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/node/10.2.1... (5,301 files, 51.9MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/node/9.11.1... (5,125 files, 49.7MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2n... (1,792 files, 12.3MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/openssl/1.0.2o_1... (1,791 files, 12.3MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/php/7.2.5... (515 files, 78.9MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/php/7.2.6... (515 files, 78.9MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/php@5.6/5.6.35_1... (498 files, 63.8MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/php@5.6/5.6.36... (498 files, 63.8MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/php@7.0/7.0.29_1... (502 files, 65.5MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/php@7.0/7.0.30... (502 files, 65.5MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/python/3.6.5... (4,794 files, 99.9MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/readline/7.0.3_1... (46 files, 1.5MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/sqlite/3.23.1... (11 files, 3MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/webp/0.6.1... (38 files, 2MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/wget/1.19.4_1... (50 files, 3.7MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/xz/5.2.3... (92 files, 1.4MB)</span><br><span class="line">Removing: /usr/<span class="built_in">local</span>/Cellar/zsh/5.4.2_3... (1,390 files, 11.8MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/dash-0.5.10.sierra.bottle.tar.gz... (83.6KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/dash-0.5.9.1.sierra.bottle.tar.gz... (83.2KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/freetds-1.00.89.sierra.bottle.tar.gz... (2.3MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/freetds-1.00.91.sierra.bottle.tar.gz... (2.3MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/freetype-2.9.sierra.bottle.1.tar.gz... (896.8KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/gdbm-1.14.1_1.sierra.bottle.tar.gz... (182.5KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/icu4c-61.1.sierra.bottle.tar.gz... (25.4MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/libidn2-2.0.4.sierra.bottle.tar.gz... (190.4KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/libpq-10.3.sierra.bottle.tar.gz... (6MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/libunistring-0.9.9.sierra.bottle.tar.gz... (1.4MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/mysql-5.7.21.sierra.bottle.tar.gz... (72.2MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/mysql-5.7.22.sierra.bottle.tar.gz... (72.2MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/nginx-1.13.12.sierra.bottle.tar.gz... (570.5KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/nginx-1.15.0.sierra.bottle.tar.gz... (572.6KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/node-10.0.0.sierra.bottle.tar.gz... (13.7MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/node-10.1.0.sierra.bottle.tar.gz... (13.7MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/node-10.2.1.sierra.bottle.tar.gz... (13.8MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/node-9.11.1.sierra.bottle.tar.gz... (13.3MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/openssl-1.0.2n.sierra.bottle.tar.gz... (3.7MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/openssl-1.0.2o_1.sierra.bottle.tar.gz... (3.7MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/php-7.2.4_1.sierra.bottle.tar.gz... (21.6MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/php-7.2.5.sierra.bottle.tar.gz... (21.6MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/php-7.2.6.sierra.bottle.tar.gz... (21.6MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/php@5.6-5.6.35_1.sierra.bottle.tar.gz... (19.4MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/php@5.6-5.6.36.sierra.bottle.tar.gz... (19.4MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/php@7.0-7.0.29_1.sierra.bottle.tar.gz... (20MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/php@7.0-7.0.30.sierra.bottle.tar.gz... (20MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/php@7.1-7.1.16_1.sierra.bottle.tar.gz... (20.5MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/python-3.6.5.sierra.bottle.1.tar.gz... (21.9MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/readline-7.0.3_1.sierra.bottle.tar.gz... (497.3KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/sqlite-3.23.1.sierra.bottle.tar.gz... (1.4MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/tomcat-9.0.6.tar.gz.incomplete... (572KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/webp-0.6.1.sierra.bottle.1.tar.gz... (809.1KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/wget-1.19.4_1.sierra.bottle.tar.gz... (1.3MB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/xz-5.2.3.sierra.bottle.tar.gz... (462.1KB)</span><br><span class="line">Removing: /Users/seal/Library/Caches/Homebrew/zsh-5.4.2_3.sierra.bottle.tar.gz... (3.3MB)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/apr... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/apr-util... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/argon2... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/aspell... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/autoconf... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/brew-php-switcher... (119B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/dash... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/freetds... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/freetype... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/gdbm... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/gettext... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/glib... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/gmp... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/icu4c... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/jpeg... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/libffi... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/libidn2... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/libpng... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/libpq... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/libsodium... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/libtool... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/libunistring... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/libzip... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/mcrypt... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/mhash... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/mysql... (1.3KB)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/nginx... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/node... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/openssl... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/pcre... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/php... (12 files, 2.3KB)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/php@5.6... (12 files, 2.4KB)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/php@7.0... (12 files, 2.9KB)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/php@7.1... (12 files, 2.4KB)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/python... (3 files, 127.8KB)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/readline... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/sqlite... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/tomcat... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/tomcat@8... (110B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/unixodbc... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/webp... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/wget... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/xz... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/zsh... (68B)</span><br><span class="line">Removing: /Users/seal/Library/Logs/Homebrew/zsh-completions... (117B)</span><br><span class="line">==&gt; This operation has freed approximately 1.3GB of disk space.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Homebrew </tag>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac上使用brew安装MySQL</title>
      <link href="/posts/e87d9191.html"/>
      <url>/posts/e87d9191.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><blockquote><p>参考：<a href="https://segmentfault.com/q/1010000000475470">https://segmentfault.com/q/1010000000475470</a></p></blockquote><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install mysql</span><br></pre></td></tr></table></figure><h2 id="开启MySQL"><a href="#开启MySQL" class="headerlink" title="开启MySQL"></a>开启MySQL</h2><p>通过brew</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start mysql</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql.server start</span><br></pre></td></tr></table></figure><h2 id="使用MySQL的配置脚本（MySQL-提供的配置向导）"><a href="#使用MySQL的配置脚本（MySQL-提供的配置向导）" class="headerlink" title="使用MySQL的配置脚本（MySQL 提供的配置向导）"></a>使用MySQL的配置脚本（MySQL 提供的配置向导）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br><span class="line"><span class="comment"># 完整路径</span></span><br><span class="line">/usr/<span class="built_in">local</span>/opt/mysql/bin/mysql_secure_installation</span><br></pre></td></tr></table></figure><p>启动这个脚本后，即可根据如下命令提示进行初始化设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">$ mysql_secure_installation</span><br><span class="line"></span><br><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MySQL</span><br><span class="line">      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line"></span><br><span class="line">In order to <span class="built_in">log</span> into MySQL to secure it, we<span class="string">&#x27;ll need the current</span></span><br><span class="line"><span class="string">password for the root user.  If you&#x27;</span>ve just installed MySQL, and</span><br><span class="line">you haven<span class="string">&#x27;t set the root password yet, the password will be blank,</span></span><br><span class="line"><span class="string">so you should just press enter here.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 输入当前root密码，一般为空</span></span><br><span class="line"><span class="string">Enter current password for root (enter for none):</span></span><br><span class="line"><span class="string">OK, successfully used password, moving on...</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Setting the root password ensures that nobody can log into the MySQL</span></span><br><span class="line"><span class="string">root user without the proper authorisation.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 首次使用自带配置脚本，设置root密码</span></span><br><span class="line"><span class="string">Set root password? [Y/n] y</span></span><br><span class="line"><span class="string">New password:</span></span><br><span class="line"><span class="string">Re-enter new password:</span></span><br><span class="line"><span class="string">Password updated successfully!</span></span><br><span class="line"><span class="string">Reloading privilege tables..</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By default, a MySQL installation has an anonymous user, allowing anyone</span></span><br><span class="line"><span class="string">to log into MySQL without having to have a user account created for</span></span><br><span class="line"><span class="string">them.  This is intended only for testing, and to make the installation</span></span><br><span class="line"><span class="string">go a bit smoother.  You should remove them before moving into a</span></span><br><span class="line"><span class="string">production environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#  是否删除匿名用户</span></span><br><span class="line"><span class="string">Remove anonymous users? [Y/n] y</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Normally, root should only be allowed to connect from &#x27;</span>localhost<span class="string">&#x27;.  This</span></span><br><span class="line"><span class="string">ensures that someone cannot guess at the root password from the network.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#  是否禁止远程登录</span></span><br><span class="line"><span class="string">Disallow root login remotely? [Y/n] y</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">By default, MySQL comes with a database named &#x27;</span><span class="built_in">test</span><span class="string">&#x27; that anyone can</span></span><br><span class="line"><span class="string">access.  This is also intended only for testing, and should be removed</span></span><br><span class="line"><span class="string">before moving into a production environment.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#  是否删除测试数据库，并登录</span></span><br><span class="line"><span class="string">Remove test database and access to it? [Y/n] y</span></span><br><span class="line"><span class="string"> - Dropping test database...</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"> - Removing privileges on test database...</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Reloading the privilege tables will ensure that all changes made so far</span></span><br><span class="line"><span class="string">will take effect immediately.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 是否重新载入权限表</span></span><br><span class="line"><span class="string">Reload privilege tables now? [Y/n] y</span></span><br><span class="line"><span class="string"> ... Success!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">All done!  If you&#x27;</span>ve completed all of the above steps, your MySQL</span><br><span class="line">installation should now be secure.</span><br><span class="line"></span><br><span class="line">Thanks <span class="keyword">for</span> using MySQL!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Cleaning up...</span><br></pre></td></tr></table></figure><p>5.6版本和8.0版本的有点不一样，8.0版似乎有个密码安全检测插件。<br>下面是8.0版本的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">$ mysql_secure_installation</span><br><span class="line"></span><br><span class="line">Securing the MySQL server deployment.</span><br><span class="line"></span><br><span class="line">Connecting to MySQL using a blank password.</span><br><span class="line">Securing the MySQL server deployment.</span><br><span class="line"></span><br><span class="line">Connecting to MySQL using a blank password.</span><br><span class="line"></span><br><span class="line">VALIDATE PASSWORD PLUGIN can be used to <span class="built_in">test</span> passwords</span><br><span class="line">and improve security. It checks the strength of password</span><br><span class="line">and allows the users to <span class="built_in">set</span> only those passwords <span class="built_in">which</span> are</span><br><span class="line">secure enough. Would you like to setup VALIDATE PASSWORD plugin?</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否采用mysql密码安全检测插件（这里我选择了是，密码检查插件要求密码复杂程度高，大小写字母+数字+字符等）</span></span><br><span class="line">Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No: y</span><br><span class="line"></span><br><span class="line">There are three levels of password validation policy:</span><br><span class="line"></span><br><span class="line">LOW    Length &gt;= 8</span><br><span class="line">MEDIUM Length &gt;= 8, numeric, mixed <span class="keyword">case</span>, and special characters</span><br><span class="line">STRONG Length &gt;= 8, numeric, mixed <span class="keyword">case</span>, special characters and dictionary                  file</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据上面提示选择密码强度</span></span><br><span class="line">Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 首次使用自带配置脚本，设置root密码</span></span><br><span class="line">Please <span class="built_in">set</span> the password <span class="keyword">for</span> root here.</span><br><span class="line"></span><br><span class="line">New password:</span><br><span class="line"></span><br><span class="line">Re-enter new password:</span><br><span class="line"></span><br><span class="line">Estimated strength of the password: 100</span><br><span class="line"></span><br><span class="line">Do you wish to <span class="built_in">continue</span> with the password provided?(Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y</span><br><span class="line">By default, a MySQL installation has an anonymous user,</span><br><span class="line">allowing anyone to <span class="built_in">log</span> into MySQL without having to have</span><br><span class="line">a user account created <span class="keyword">for</span> them. This is intended only <span class="keyword">for</span></span><br><span class="line">testing, and to make the installation go a bit smoother.</span><br><span class="line">You should remove them before moving into a production</span><br><span class="line">environment.</span><br><span class="line"></span><br><span class="line"><span class="comment">#  是否删除匿名用户</span></span><br><span class="line">Remove anonymous users? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Normally, root should only be allowed to connect from</span><br><span class="line"><span class="string">&#x27;localhost&#x27;</span>. This ensures that someone cannot guess at</span><br><span class="line">the root password from the network.</span><br><span class="line"></span><br><span class="line"><span class="comment">#  是否禁止远程登录</span></span><br><span class="line">Disallow root login remotely? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">By default, MySQL comes with a database named <span class="string">&#x27;test&#x27;</span> that</span><br><span class="line">anyone can access. This is also intended only <span class="keyword">for</span> testing,</span><br><span class="line">and should be removed before moving into a production</span><br><span class="line">environment.</span><br><span class="line"></span><br><span class="line"><span class="comment">#  是否删除测试数据库，并登录</span></span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y</span><br><span class="line"> - Dropping <span class="built_in">test</span> database...</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line"> - Removing privileges on <span class="built_in">test</span> database...</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">Reloading the privilege tables will ensure that all changes</span><br><span class="line">made so far will take effect immediately.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否重新载入权限表</span></span><br><span class="line">Reload privilege tables now? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">All <span class="keyword">done</span>!</span><br></pre></td></tr></table></figure><h2 id="停止MySQL"><a href="#停止MySQL" class="headerlink" title="停止MySQL"></a>停止MySQL</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services stop mysql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Homebrew </tag>
            
            <tag> 数据库 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BCompare破解方法（全平台）</title>
      <link href="/posts/bfc4a775.html"/>
      <url>/posts/bfc4a775.html</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Who am I?</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="5521b4bb7ae97419ed036bb107bee976b7a3e149ed89c94617204788b9669de7"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 逆向 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Material主题源码的一些小修改（修复Bug？）</title>
      <link href="/posts/832fa05b.html"/>
      <url>/posts/832fa05b.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h3 id="一、插件hexo-prism-plugin实现代码高亮导致的行号不显示问题"><a href="#一、插件hexo-prism-plugin实现代码高亮导致的行号不显示问题" class="headerlink" title="一、插件hexo-prism-plugin实现代码高亮导致的行号不显示问题"></a>一、插件<code>hexo-prism-plugin</code>实现代码高亮导致的行号不显示问题</h3><p>从<a href="https://material.viosey.com/docs/#/expert">官方文档</a>我们可以看到md主题支持的代码高亮方式：<br><img src="/images/document-md+code.png" alt="document-md+code"></p><p>由于我使用的是<a href="https://github.com/viosey/hexo-theme-material/releases/tag/1.4.0">1.4.0稳定版</a>（时间20180722），所以只能使用 <code>hexo-prism-plugin</code> 插件，具体用法<a href="https://github.com/ele828/hexo-prism-plugin">官方文档</a>讲的很详细我就不多说了。</p><h4 id="敲黑板，重点重点！！！"><a href="#敲黑板，重点重点！！！" class="headerlink" title="敲黑板，重点重点！！！"></a>敲黑板，重点重点！！！</h4><p>我在这里主要说一下1.4.0版的md主题对 <code>hexo-prism-plugin</code> 插件似乎不太兼容。</p><a id="more"></a><p>这是我的 prism 插件配置：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">prism_plugin:</span><br><span class="line">  mode: &#x27;preprocess&#x27;    # realtime/preprocess</span><br><span class="line">  theme: &#x27;solarizedlight&#x27;</span><br><span class="line">  line_number: true    # default false</span><br></pre></td></tr></table></figure><p>再给你们看一下截图：<br><img src="/images/bug-MD+prism.png" alt="bug-MD+pris"></p><p>是不是感觉有什么不对劲？？</p><p>相信看到这里大家应该都知道什么回事了，<code>line_number</code>我设置为<code>true</code>表示我开了行号显示，那么问题来了，我们的行号呢？还有那个诡异的竖线是什么鬼？</p><p>于是我用chrome的开发者模式调试了一下，发现了一个很眼熟的CSS属性——<code>padding</code>。如图：<br><img src="/images/md-css-contentpre-padding.png" alt="md-css-contentpre-padding"></p><blockquote><p>这里给没学过编程的同学科普一下<code>padding</code>是什么意思：</p><p>先放个W3School的链接压压惊= =：<a href="http://www.w3school.com.cn/cssref/pr_padding.asp">CSS padding 属性</a></p><p><strong>padding定义和用法：</strong><br>padding 简写属性在一个声明中设置所有内边距属性。<br>例：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">padding</span><span class="selector-pseudo">:10px</span>;</span><br></pre></td></tr></table></figure><p>类似于这种的意思就是上下左右四个内边距都是 10px。</p></blockquote><blockquote><p>那么内边距又是什么东西呢？<br>看图：<br><img src="/images/explain-padding.jpg" alt="explain-padding"><br>所以<strong>内边距</strong>的意思就是<font color='#6EA1DF'>组件的内容</font>到<font color='#D1AF40'>边框</font>的<font color='#81A670'>距离</font>。内边距的改变不会影响整个组件的大小，但是会影响组件内容的显示大小</p></blockquote><p>废话就不多说了…..<br>我的直觉告诉我就是它的锅，我们现在来把它去掉试试！<br><img src="/images/md-css-contentpre-nopadding.png" alt="md-css-contentpre-nopadding"></p><p>Unbelievable! <font color='red'><strong>行号出现了！</strong></font>但是在Chrome的开发者模式改只是临时的，刷新就回到原来的样子了，我们要去主题的源代码修改。</p><p>经过一番查找终于找到了相关代码所在的文件<code>hexo根目录/themes/material/source/css/style.min.css</code><br><img src="/images/md-css-stylemin.png" alt="md-css-stylemin"></p><blockquote><p><strong>注意：</strong>是<code>style.min.css</code>这个压缩过的css文件，而不是<code>style.css</code>！！</p></blockquote><p>打开<code>style.min.css</code>，查找<code>padding:1pc</code>或者<code>#post-content pre</code>都OK，然后把<code>padding:1pc;</code>注释掉即可。如图：<br><img src="/images/md-css-stylemin-padding-commented.png" alt="md-css-stylemin-padding-commented"></p><hr><h3 id="二、文章结尾添加版权声明"><a href="#二、文章结尾添加版权声明" class="headerlink" title="二、文章结尾添加版权声明"></a>二、文章结尾添加版权声明</h3><blockquote><p>参考：<a href="http://tianma.space/post/1810369046/index.html">http://tianma.space/post/1810369046/index.html</a></p></blockquote><p>现在是版权时代，很多博主都会在文章结尾出写上诸如“转载请保留声明信息”之类的。下面我来说下如何在 Hexo 中添加版权声明。这里我拿 Material 主题作为例子，其他主题可参考后自行修改。</p><ol><li><p>自定义字段：考虑到有些博文可能是不需要版权声明的，比如转载、翻译之类的，所以自定义 post_license 作为开关：</p><ul><li><p>主题配置文件 _config.yml 中添加字段，作为总开关：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post_license:</span><br><span class="line"><span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment"># or false</span></span><br></pre></td></tr></table></figure></li><li><p>文章的 Front-matter 中添加字段，作为独立开关：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_license: <span class="literal">true</span> <span class="comment"># or false</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>创建 material/layout/_partial/post_license.ejs:</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;post-license&quot;</span> <span class="attr">class</span>=<span class="string">&quot;post-license&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-license-author&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">strong</span>&gt;</span>本文作者：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= config.url %&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.author</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-license-link&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">strong</span>&gt;</span>本文链接：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= page.permalink %&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">page.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;post-license-statement&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">strong</span>&gt;</span>版权声明： <span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">           本文由 <span class="tag">&lt;<span class="name">%=</span> <span class="attr">config.author</span> %&gt;</span> 原创，采用 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;license&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>署名-非商业性使用-相同方式共享（CC BY-NC-SA）4.0 国际许可协议<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;/<span class="name">br</span>&gt;</span>转载请保留以上声明信息！</span><br><span class="line">       <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在 material/layout/_partial/post-content.ejs 引入 post_license.ejs:</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span>(theme.post_license.enable &amp;&amp; page.post_license !== <span class="literal">false</span>)&#123;%&gt;</span><br><span class="line">   &lt;%- partial(<span class="string">&#x27;_partial/post_license&#x27;</span>) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li><li><p>在 material/source/css/style.min.css 中添加 版权声明 样式：</p> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#post-license</span> &#123;</span><br><span class="line">   <span class="attribute">margin</span>: <span class="number">2em</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">   <span class="attribute">padding</span>: <span class="number">0.5em</span> <span class="number">1em</span>;</span><br><span class="line">   <span class="attribute">border-left</span>: <span class="number">3px</span> solid <span class="number">#ff4081</span>;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</span><br><span class="line">   <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="三、Disqus延迟加载"><a href="#三、Disqus延迟加载" class="headerlink" title="三、Disqus延迟加载"></a>三、Disqus延迟加载</h3><p><font color='red'>☆☆ 2018-08-11 更新：Material主题1.5.6版本开始<code>disqus_click</code>自带延迟加载 ☆☆</font></p><blockquote><p>参考：<a href="https://blog.itswincer.com/posts/e5d13eb/">https://blog.itswincer.com/posts/e5d13eb/</a></p></blockquote><p><strong>先讲下考虑延迟加载的初衷：</strong><br>好吧，其实是因为在大局域网内没法做到所有用户都能看评论，如果加载不出评论就会有一段时间在下方显示白块，强迫症的我怎么能忍受？？！！于是我就想把评论功能设计成网络好的话就自动显示评论，否则需要手动点击。正好看到网上有，于是就借鉴了。</p><p><strong>然后说下原理：</strong><br>原理嘛，先用 ajax 异步发送一个 get 请求至 Disqus 服务器，接收成功则屏蔽按钮，加载评论；超时则自动断开，并显示加载按钮：</p><p>修改文件位置：<code>&lt;Material主题目录&gt;/layout/_widget/comment/disqus_click/main.ejs</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;btn_click_load&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;disqus_click_btn&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>(&#x27;<span class="attr">post.comments_load_button</span>&#x27;) %&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">&lt;script type=&quot;text/ls-javascript&quot; id=&quot;disqus-lazy-load-script&quot;&gt;</span></span><br><span class="line"><span class="comment">    $(&#x27;.btn_click_load&#x27;).click(function() &#123;  //click to load comments</span></span><br><span class="line"><span class="comment">        (function() &#123; // DON&#x27;T EDIT BELOW THIS LINE</span></span><br><span class="line"><span class="comment">            var d = document;</span></span><br><span class="line"><span class="comment">            var s = d.createElement(&#x27;script&#x27;);</span></span><br><span class="line"><span class="comment">            s.src = &#x27;//&lt;%= theme.comment.shortname %&gt;.disqus.com/embed.js&#x27;;</span></span><br><span class="line"><span class="comment">            s.setAttribute(&#x27;data-timestamp&#x27;, + new Date());</span></span><br><span class="line"><span class="comment">            (d.head || d.body).appendChild(s);</span></span><br><span class="line"><span class="comment">        &#125;)();</span></span><br><span class="line"><span class="comment">        $(&#x27;.btn_click_load&#x27;).css(&#x27;display&#x27;,&#x27;none&#x27;);</span></span><br><span class="line"><span class="comment">    &#125;);</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br><span class="line"><span class="comment"> --&gt;</span></span><br><span class="line">      </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">/*</span></span><br><span class="line"><span class="tag">延迟加载 <span class="attr">disqus</span>，<span class="attr">timeout</span> 可以自己设置时长</span></span><br><span class="line"><span class="tag">*/</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">id</span>=<span class="string">&quot;disqus-lazy-load-script&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">    url: <span class="string">&#x27;https://disqus.com/next/config.json&#x27;</span>,</span></span><br><span class="line">    timeout: 1000,</span><br><span class="line"><span class="javascript">    type: <span class="string">&#x27;GET&#x27;</span>,</span></span><br><span class="line"><span class="javascript">    success: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> d = <span class="built_in">document</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> s = d.createElement(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        s.src = <span class="string">&#x27;//&lt;%= theme.comment.shortname %&gt;.disqus.com/embed.js&#x27;</span>;</span></span><br><span class="line"><span class="javascript">        s.setAttribute(<span class="string">&#x27;data-timestamp&#x27;</span>, + <span class="keyword">new</span> <span class="built_in">Date</span>());</span></span><br><span class="line">        (d.head || d.body).appendChild(s);</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.disqus_click_btn&#x27;</span>).css(<span class="string">&#x27;display&#x27;</span>, <span class="string">&#x27;none&#x27;</span>);</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="javascript">    error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.disqus_click_btn&#x27;</span>).css(<span class="string">&#x27;display&#x27;</span>, <span class="string">&#x27;block&#x27;</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">/*</span></span><br><span class="line"><span class="tag">由于我超时时长设置得比较短，所以可能翻墙了还是没有自动加载评论，这时就需要手动点击加载了</span></span><br><span class="line"><span class="tag">*/</span></span><br><span class="line"><span class="tag">%&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">id</span>=<span class="string">&quot;disqus-click-load&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&#x27;.btn_click_load&#x27;</span>).click(<span class="function">() =&gt;</span> &#123;  <span class="comment">//click to load comments</span></span></span><br><span class="line"><span class="javascript">        (<span class="function">() =&gt;</span> &#123; <span class="comment">// DON&#x27;T EDIT BELOW THIS LINE</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> d = <span class="built_in">document</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> s = d.createElement(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            s.src = <span class="string">&#x27;//&lt;%= theme.comment.shortname %&gt;.disqus.com/embed.js&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            s.setAttribute(<span class="string">&#x27;data-timestamp&#x27;</span>, + <span class="keyword">new</span> <span class="built_in">Date</span>());</span></span><br><span class="line">            (d.head || d.body).appendChild(s);</span><br><span class="line">        &#125;)();</span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;.disqus_click_btn&#x27;</span>).css(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;none&#x27;</span>);</span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我是把原来的注释掉再加后面的，链接中说超时时间设为<code>300</code>比较短，的确短，我测试了一下，设置为<code>1000</code>就不影响阅读了。</p><blockquote><p><strong>注意：</strong>改完后记得确认<code>主题配置文件</code>是否启用了<code>disqus_click</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全站开启https总结（艰苦历程？）</title>
      <link href="/posts/41e1ea07.html"/>
      <url>/posts/41e1ea07.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在搭建完Hexo之后，我就开始思考要不要配置https呢？最后深思熟虑，还是决定上https吧！毕竟现在https已经开始普及，像Chrome、Firfox这些浏览器如果不是https协议的会提示如下图，警告“不安全”什么的。强迫症患者表示看着最不舒服了（逃～<br><img src="/images/http%20browser%20show.jpg" alt="http browser sho"></p><p>于是我就开始了配置https之路……</p><p><strong><font color="red">2018-12-02更新：添加<a href="#%E8%A1%A5%E5%85%85%EF%BC%9A%E8%8E%B7%E5%8F%96-Let%E2%80%99s-Encrypt-%E9%80%9A%E9%85%8D%E7%AC%A6%E8%AF%81%E4%B9%A6">通配符证书申请方法</a></font></strong></p><a id="more"></a><h1 id="SSL证书"><a href="#SSL证书" class="headerlink" title="SSL证书"></a>SSL证书</h1><h2 id="选取合适的ssl证书"><a href="#选取合适的ssl证书" class="headerlink" title="选取合适的ssl证书"></a>选取合适的ssl证书</h2><p>https = http + ssl，所以要走https协议首先要申请ssl证书。<br>但是我第一次建站，对ssl证书一点都不懂啊！！哪个ssl证书更好我也不知道，去搜索一翻发现各种说法，最后还是去请教了各位前辈。<br>经过各位前辈的建议，我了解到了<code>Let&#39;s Encrypt</code>，详细介绍我就不说了，这是<a href="https://zh.wikipedia.org/zh-hans/Let%27s_Encrypt">它在维基百科的资料</a>，然后这是<a href="https://letsencrypt.org/">官网</a></p><p>除此之外还有<a href="https://www.digicert.com/">Digicert</a>、<a href="https://www.sslforfree.com/">SSL For Free</a>、<a href="http://www.cacert.org/">CA Cert</a>。Digicert很贵，但是据某位前辈说似乎大企业喜欢用它的挺多，而且人家还支持签发 .onion 域名的证书（EV）。</p><p>看自己需求吧，我最后还是用了<code>Let&#39;s Encrypt</code>。<br>老父亲说这是免费的，但验证过程要在服务器上做，有点复杂。我觉得复杂点没所谓，好用就行。<br>某群里的前辈说也可以不验证，自签名就好（其实我还没懂哈哈哈，尴尬.jpg）；前辈们还说了一种DNS方式验证，不需要架设额外服务；在我问了“Let’s encrypt用standalone还是webroot模式更好”之后(其实这个我也不懂)，<font color='red'><strong>终于决定用DNS模式</strong></font>，DNS 模式更方便，还可以签通配符证书。</p><h2 id="开始获取SSL证书"><a href="#开始获取SSL证书" class="headerlink" title="开始获取SSL证书"></a>开始获取SSL证书</h2><blockquote><p>参考：<a href="http://www.racksam.com/2016/12/26/centos-nginx-setup-lets-encrypt-with-acme-sh/">使用acme.sh脚本的DNS API方式申请及更新let’s encrypt证书</a></p></blockquote><p>群里多位前辈介绍了一个在 Linux 上申请let’s encrypt证书的脚本——<a href="https://github.com/Neilpang/acme.sh">acme.sh</a></p><h3 id="acme-sh脚本"><a href="#acme-sh脚本" class="headerlink" title="acme.sh脚本"></a>acme.sh脚本</h3><p>Linux服务器下使用acme.sh脚本是申请let’s encrypt证书最便捷的方式，比官方推荐的<code>certbot</code>脚本工具要方便强大的多。好处是对环境要求较低，路由器上 busybox ash 都能跑，只需要使用到 curl 等少数几个外部程序</p><p>安装文档： <a href="https://github.com/Neilpang/acme.sh/wiki/%E8%AF%B4%E6%98%8E">https://github.com/Neilpang/acme.sh/wiki/说明</a></p><h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><ol><li>拥有一个域名，例如 mydomain.com (在国内主机的用的话，还需要通过ICP备案)</li><li>确定二级域名，并且在域名服务器创建一条A记录，执行云主机的公网IP地址。<a href="http://www.mydomain.com指向xxx.xxx.xxx.xxx的ip地址/">www.mydomain.com指向xxx.xxx.xxx.xxx的IP地址</a></li><li>要等到新创建的域名解析能在公网上被解析到。</li><li>据说国内的域名提供商对letsencrypt的支持非常差，但是据说现阶段用dnspod解析的域名还没碰到问题。我用的是国外的Cloudflare解析我的域名，但是经常被墙（想骂人…），移动表示大多数都没有体验= =，联通情况好一点。</li></ol><h4 id="安装acme-sh脚本"><a href="#安装acme-sh脚本" class="headerlink" title="安装acme.sh脚本"></a>安装acme.sh脚本</h4><p>执行一下命令后重新ssh登录服务器即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl  https://get.acme.sh | sh</span><br></pre></td></tr></table></figure><p>该命令会把 acme.sh 安装到你的 home 目录下: <code>~/.acme.sh/</code>，一般会自动创建环境变量，后期直接命令行输入acme.sh即可。</p><h4 id="使用DNS-API申请证书"><a href="#使用DNS-API申请证书" class="headerlink" title="使用DNS API申请证书"></a>使用DNS API申请证书</h4><p>(推荐配置使用API的方式，否则每隔三个月，仍然需要重新验证DNS TXT记录)</p><p>创建DNS API的Key及Secret</p><blockquote><p>参考：</p><ol><li><a href="https://github.com/Neilpang/acme.sh/tree/master/dnsapi">https://github.com/Neilpang/acme.sh/tree/master/dnsapi</a></li><li><a href="https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md">https://github.com/Neilpang/acme.sh/blob/master/dnsapi/README.md</a></li></ol></blockquote><p>acme.sh 目前支持 cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成.</p><p><strong>【例子一】域名由Cloudflare提供解析的网站，使用CloudFlare域名API自动颁发证书</strong></p><ol><li><p>以 Cloudflare 为例, 你需要先登录到 Cloudflare 账号才能获得API密钥, 都是免费的。<br> <img src="/images/Cloudflare-Api-1.jpg" alt="Cloudflare-Api-1"></p><p> <img src="/images/Cloudflare-Api-2.jpg" alt="Cloudflare-Api-2"></p></li><li><p>然后在Linux下使用acme.sh命令申请证书:</p><p> 命令使用参考：<a href="https://sb.sb/blog/linux-acme-sh-lets-encrypt-ssl/">Linux 下使用 acme.sh 配置 Let’s Encrypt 免费 SSL 证书 + 通配符证书</a><br> 先导入密钥和邮箱：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CF_Key=<span class="string">&quot;sdfsdfsdfljlbjkljlkjsdfoiwje&quot;</span></span><br><span class="line"><span class="built_in">export</span> CF_Email=<span class="string">&quot;xxxx@sss.com&quot;</span></span><br></pre></td></tr></table></figure><p> 我们现在发行一个证书：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_cf -d example.com -d www.example.com --accountemail query@goodsrv.com</span><br></pre></td></tr></table></figure><p> <code>--accountemail</code>是指定帐户电子邮件，仅对<code>--install</code>和<code>--update-account</code>命令有效（待验证，因为我执行命令时并没有带上该参数）。</p><p> 输入命令后回车，需要等两分钟，终端会有倒计时。</p><p> 倒计时结束后，执行命令：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --renew -d example.com -d www.example.com</span><br></pre></td></tr></table></figure></li></ol><h5 id="补充：获取-Let’s-Encrypt-通配符证书"><a href="#补充：获取-Let’s-Encrypt-通配符证书" class="headerlink" title="补充：获取 Let’s Encrypt 通配符证书"></a>补充：获取 Let’s Encrypt 通配符证书</h5><p>通配符证书，英文 Wildcard Certificate 国内黑话叫做野卡，经过一个月的跳票后，Let’s Encrypt 目前已经支持通配符的证书，同样 <code>acme.sh</code> 也是支持的，和多域名证书不同，通配符证书必须使用 DNS TXT 记录验证方式，我们以 <code>example.com</code> 和 <code>*.example.com</code> 为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue -d example.com -d <span class="string">&#x27;*.example.com&#x27;</span> --dns</span><br></pre></td></tr></table></figure><blockquote><p>记得<code>*.example.com</code><strong>加单引号</strong></p></blockquote><p>如果你的 DNS 提供商支持 API，你也可以直接使用 API 而不需要手工修改 TXT 记录，详细用法请见<a href="https://github.com/Neilpang/acme.sh/tree/master/dnsapi">这里</a></p><p>以 CloudFlare 为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_cf -d example.com -d <span class="string">&#x27;*.example.com&#x27;</span></span><br></pre></td></tr></table></figure><p>生效后给证书续一秒</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --renew -d example.com -d <span class="string">&#x27;*.example.com&#x27;</span></span><br></pre></td></tr></table></figure><p>然后后面你想要一个<code>二级域名</code>（如：abc.example.com）的时候就不用再申请了，只需要在<code>DNS</code>添加<code>A记录</code>等它生效就可以用了。当然，下面的<code>安装证书</code>和<code>配置站点（Nginx）</code>步骤还是要做的😂</p><h4 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建安装目录</span></span><br><span class="line">mkdir /etc/ssl/example.com/ -p</span><br><span class="line"></span><br><span class="line"><span class="comment"># reloadcmd参数里面填写的是在更新证书后需要重新启动的服务，例如重启nginx或者apache或者其它脚本。</span></span><br><span class="line">acme.sh  --installcert  -d  example.com   \</span><br><span class="line">        --key-file   /etc/ssl/example.com/example.com.key \</span><br><span class="line">        --fullchain-file /etc/ssl/example.com/fullchain.cer \</span><br><span class="line">        --reloadcmd  <span class="string">&quot;systemctl reload nginx&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong></p><ol><li><code>/etc/ssl/example.com/</code>的所有者以及用户组必须为当前用户，否则后面installcert的时候会提示没有权限，可执行如下命令，后面可更改回原来的所有者和用户组：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#更改所有者和用户组</span></span><br><span class="line">sudo chown <span class="variable">$USER</span>:<span class="variable">$USER</span> -R /etc/ssl/example.com/</span><br><span class="line"><span class="comment">#查看指定文件夹的权限、所有者和用户组</span></span><br><span class="line">ls -l /etc/ssl/</span><br><span class="line">ls -l /etc/ssl/example.com/</span><br></pre></td></tr></table></figure></li><li>(一个小提醒, 部分服务器系统用的是 <code>service nginx force-reload</code>, 不是 <code>service nginx reload</code>, 据测试, <code>reload</code> 并不会重新加载证书, 所以用的 <code>force-reload</code>)</li><li>Nginx 的配置 <code>ssl_certificate</code> 使用 <code>/etc/nginx/ssl/fullchain.cer</code> ，而非 <code>/etc/nginx/ssl/&lt;domain&gt;.cer</code> ，否则 <a href="https://www.ssllabs.com/ssltest/">SSL Labs</a>的测试会报 <code>Chain issues Incomplete</code> 错误。</li><li><code>--installcert</code>命令可以携带很多参数, 来指定目标文件. 并且可以指定  reloadcmd, 当证书更新以后, reloadcmd 会被自动调用,让服务器生效.</li><li>值得注意的是, 这里指定的所有参数都会被自动记录下来, 并在将来证书自动更新以后, 被再次自动调用.</li></ol></blockquote><blockquote><p>mkdir的-p参数解释：<br>  -p, –parents  可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,即一次可以建立多个目录;<br>mkdir命令参考：<a href="https://www.linuxdaxue.com/linux-command-intro-mkdir.html">https://www.linuxdaxue.com/linux-command-intro-mkdir.html</a></p></blockquote><h4 id="更新证书"><a href="#更新证书" class="headerlink" title="更新证书"></a>更新证书</h4><p>目前证书在 60 天以后会自动更新, 你无需任何操作. 今后有可能会缩短这个时间, 不过都是自动的, 你不用关心.</p><h4 id="更新-acme-sh"><a href="#更新-acme-sh" class="headerlink" title="更新 acme.sh"></a>更新 acme.sh</h4><p>目前由于 acme 协议和 letsencrypt CA 都在频繁的更新, 因此 acme.sh 也经常更新以保持同步.</p><p>升级 acme.sh 到最新版 :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade</span><br></pre></td></tr></table></figure><p>如果你不想手动升级, 可以开启自动升级:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh  --upgrade  --auto-upgrade</span><br></pre></td></tr></table></figure><p>之后, acme.sh 就会自动保持更新了<br>你也可以随时关闭自动更新:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --upgrade  --auto-upgrade  0</span><br></pre></td></tr></table></figure><h1 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h1><h2 id="配置Nginx使用证书开通https站点"><a href="#配置Nginx使用证书开通https站点" class="headerlink" title="配置Nginx使用证书开通https站点"></a>配置Nginx使用证书开通https站点</h2><ol><li><p><strong>生成Perfect Forward Security（PFS）键值</strong><br>Perfect Forward Security（PFS)是个什么东西，我也不清楚，中文翻译成<code>完美前向保密</code>，反正是这几年才提倡的加强安全性的技术。如果本地还没有生成这个键值，需要先执行生成的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/ssl/example.com/</span><br><span class="line">openssl dhparam -out dhparam.pem 2048</span><br></pre></td></tr></table></figure><p>生成的过程还挺花时间的，据我查到的资料，据说参数为2048的要4分钟左右，还受服务器性能影响，此时不妨做点其他东西。<br>（时间一分一秒的过去…）<br>好了，PFS键值生成了，我们用<code>ls</code>命令来确认一下目录下是否生成了<code>dhparam.pem</code>文件，确认完毕就可以执行下一步了。</p><blockquote><p>特别说明：<br>一定要确认文件是否已经生成！！！在这一步我原本是执行<code>openssl dhparam 2048 -out dhparam.pem</code>，不知道为什么执行了多次都无法生成<code>dhparam.pem</code>文件，后来换了个目录执行了多次<code>openssl dhparam -out dhparam.pem 2048</code>才成功，这是后面配置完Nginx后无法重新启动Nginx服务了，我输出日志才发现的，具体后面会说。</p></blockquote></li><li><p><strong>nginx配置使用证书。</strong><br> 编辑你的Nginx配置文件，如：<code>/etc/nginx/sites-available/&lt;your-nginx-config&gt;</code><br> <font color='red'>☆☆修改配置文件前建议先备份☆☆</font><br> 可以通过<a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/">Mozilla SSL Configuration Generator</a>自动生成对应的参考配置</p><p> <strong>修改http对应的server模块：</strong></p> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> example.com;</span><br><span class="line">    <span class="comment">#return 301 https://example.com$request_uri;</span></span><br><span class="line">    <span class="attribute">if</span> ( <span class="variable">$scheme</span> = http )&#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">root</span> /var/www/html/example.com;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>return 301 https://$server_name$request_uri;</code>是强制http跳转https</p></blockquote><p> <strong>在配置文件中添加https的server模块：</strong></p> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> example.com;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset utf-8;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">       <span class="attribute">root</span> /var/www/html/example.com;</span><br><span class="line">       <span class="comment">#index index.html index.htm;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#root /var/www/html/example.com;</span></span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/example.com_access.log;</span><br><span class="line">    <span class="attribute">error_log</span>  /var/log/nginx/example.com_error.log;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/ssl/example.com/fullchain.cer;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/ssl/example.com/example.com.key;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">1d</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">50m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_tickets</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_dhparam</span> /etc/ssl/example.com/dhparam.pem;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> <span class="string">&#x27;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK&#x27;</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总的样例内容如下：</strong></p> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span> example.com;</span><br><span class="line">    <span class="comment">#return 301 https://example.com$request_uri;</span></span><br><span class="line">    <span class="attribute">if</span> ( <span class="variable">$scheme</span> = http )&#123;</span><br><span class="line">      <span class="attribute">return</span> <span class="number">301</span> https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">root</span> /var/www/html/example.com;</span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span> example.com;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset utf-8;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">       <span class="attribute">root</span> /var/www/html/example.com;</span><br><span class="line">       <span class="comment">#index index.html index.htm;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#root /var/www/html/example.com;</span></span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/example.com_access.log;</span><br><span class="line">    <span class="attribute">error_log</span>  /var/log/nginx/example.com_error.log;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_certificate</span> /etc/ssl/example.com/fullchain.cer;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /etc/ssl/example.com/example.com.key;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_session_timeout</span> <span class="number">1d</span>;</span><br><span class="line">    <span class="attribute">ssl_session_cache</span> shared:SSL:<span class="number">50m</span>;</span><br><span class="line">    <span class="attribute">ssl_session_tickets</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_dhparam</span> /etc/ssl/example.com/dhparam.pem;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">ssl_ciphers</span> <span class="string">&#x27;ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK&#x27;</span>;</span><br><span class="line">    <span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件没有问题的话执行<code>systemctl reload nginx</code>，然后在浏览器打开<code>http://example.com</code>, 如果正常跳转到<code>https://example.com</code>，就算成功了。 如果是chrome浏览器，在地址栏点击绿色小锁的图标，可以查看证书的详情，如图。<br><img src="/images/https%20browser%20show.png" alt="https browser sho"></p></li></ol><h3 id="此步骤遇到的难题"><a href="#此步骤遇到的难题" class="headerlink" title="此步骤遇到的难题"></a>此步骤遇到的难题</h3><ol><li><p>这里要注意的是如果你是<code>Nginx+Cloudflare</code>，那么Cloudflare的”Crypto—SSL”要设置成<code>Full(strict)</code>，否则会导致<font color='orange'><strong>example.com将你重定向次数过多</strong></font>的情况，默认是<code>Flexible</code>。CF设置如图：<br><img src="/images/cloudflare%20config%20of%20starting%20https%20with%20nginx.png" alt="cloudflare config of starting https with nginx"></p></li><li><p>这里还有个坑就是前面说的无法生成<code>dhparam.pem</code>文件导致无法重载Nginx。一开始我还没发现，一直在以为Nginx配置文件哪里错了，后来<code>sudo journalctl -xe</code>输出日志才发现Nginx找不到<code>dhparam.pem</code>文件：<br><img src="/images/nginx%20cannot%20found%20dhparam.pem-1.png" alt="nginx cannot found dhparam.pem-1"><br>用<code>ls</code>命令可以发现目录下并不存在<code>dhparam.pem</code>文件：<br><img src="/images/nginx%20cannot%20found%20dhparam.pem-2.png" alt="nginx cannot found dhparam.pem-2"><br>于是我又执行了几次<code>openssl dhparam 2048 -out dhparam.pem</code>，结果还是一样，而且过程竟然只需要1分钟不到。如图：<br><img src="/images/nginx%20cannot%20found%20dhparam.pem-3.png" alt="nginx cannot found dhparam.pem-3"><br>察觉到不对劲之后我马上去找了跟<code>dhparam</code>的资料，后来在一个博客上发现他的命令顺序跟我不一样，这个文件存放目录也跟我不一样，于是我就把命令改成<code>openssl dhparam -out dhparam.pem 2048</code>和改目录到example.com(此时该目录权限还是$USER的)再试了几次，第一次是不行的，执行多几次后突然就成功了。如图：<br><img src="/images/nginx%20cannot%20found%20dhparam.pem-4.png" alt="nginx cannot found dhparam.pem-4"><br>可以发现此次执行命令时间十分的长，我等了大概5分钟才执行完毕。<br>然后我们再用<code>ls</code>来看看目录下的文件，可以发现文件已经生成：<br><img src="/images/nginx%20cannot%20found%20dhparam.pem-5.png" alt="nginx cannot found dhparam.pem-5"></p></li></ol><h2 id="测试证书"><a href="#测试证书" class="headerlink" title="测试证书"></a>测试证书</h2><p>如果是网站的话，可以使用第三方网站工具测试自己网站的HTTPS配置的安全性</p><ol><li><p>SSL Lab就是个不错的选择：<br> <a href="https://ssllabs.com/ssltest/analyze.html?d=example.com">https://ssllabs.com/ssltest/analyze.html?d=example.com</a><br> 这是我的测试结果，都是A哦！！<br> <img src="/images/SSL%20Lab%20Server%20Test.jpg" alt="SSL Lab Server Test"></p></li><li><p>也可以在Linux下使用openssl命令查看证书的过期时间</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -noout -dates -<span class="keyword">in</span> /etc/ssl/example.com/example.com.key</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 运维日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 运维 </tag>
            
            <tag> Linux </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次搭建Hexo博客过程 in MacOS</title>
      <link href="/posts/1572acec.html"/>
      <url>/posts/1572acec.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="https://cdn.jsdelivr.net/npm/meting@1.2.0/dist/Meting.min.js"></script><p>第一次在自己服务器搭建博客，总会有那么一点点失误，碰到一点坑，在这里总结一下搭建hexo的具体步骤。</p><blockquote><p>参考：</p><ul><li><a href="http://vinnyxiong.cn/blog/Hexo%E4%B9%8B%E6%97%85-%E4%BA%8C-%EF%BC%9AHexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-%E5%9C%A8%20Mac%20OS%20%E5%B9%B3%E5%8F%B0-.html">Hexo之旅(二)：Hexo博客搭建(在 Mac OS 平台)</a></li><li><a href="https://segmentfault.com/a/1190000009363890">如何在服务器上搭建hexo博客</a></li></ul></blockquote><h1 id="Hexo架构"><a href="#Hexo架构" class="headerlink" title="Hexo架构"></a>Hexo架构</h1><p>首先我们要理解hexo是如何生成静态博客以及如何实现通过服务器访问静态博客的<br><img src="/images/15317408001743.jpg"></p><a id="more"></a><blockquote><p>通过上图我们可以知道，整个流程就是在本地通过 <font color='orange'><strong>hexo g</strong></font> 渲染博客的静态文件，然后通过 <font color='orange'><strong>hexo d</strong></font> 把静态文件 push到服务器上我们自己创建的git仓库,服务器再通过 git-hooks 同步网站根目录，这样就可以访问了</p></blockquote><h1 id="配置本地环境"><a href="#配置本地环境" class="headerlink" title="配置本地环境"></a>配置本地环境</h1><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>Hexo 依赖于 Node.js 和 Git，需要先安装。</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><blockquote><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137396287703354d8c6c01c904c7d9ff056ae23da865a000">Git安装（廖雪峰教程）</a></p></blockquote><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Node的话建议用nvm管理，否则很容易出现 <code>command not found: hexo</code> 的情况，出现这种情况主要是node的版本问题 可以通过nvm来控制一下node的版本来解决</p><blockquote><p>参考：<a href="http://www.gengzhibo.com/2017/04/23/Hexo%E5%AE%89%E8%A3%85%E5%90%8E%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/">Hexo安装后hexo指令无法被找到的解决方法</a></p></blockquote><h4 id="使用Homebrew安裝nvm"><a href="#使用Homebrew安裝nvm" class="headerlink" title="使用Homebrew安裝nvm"></a>使用Homebrew安裝nvm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br><span class="line">//这个过程中可能需要安装gcc或者其它需要依赖的工具 按照提示一次安装好即可</span><br><span class="line">mkdir ~/.nvm</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;export NVM_DIR=~/.nvm&quot;</span> &gt;&gt; .bash_profile</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;. <span class="subst">$(brew --prefix nvm)</span>/nvm.sh&quot;</span> &gt;&gt; .bash_profile</span><br><span class="line">//这个步骤中mac下的brew需要通过--prefix这种形式完成，如果是zsh的话可以输出到.zshrc文件</span><br></pre></td></tr></table></figure><p>重启终端后用 nvm help 来验证nvm是否正确安装</p><h4 id="使用nvm安裝Node-js"><a href="#使用nvm安裝Node-js" class="headerlink" title="使用nvm安裝Node.js"></a>使用nvm安裝Node.js</h4><p>安裝完了nvm，接著安裝主角 Node.js。先用 <code>nvm ls-remote</code> 指令看一下有哪些版本可以安裝：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br><span class="line">        .</span><br><span class="line">        .</span><br><span class="line">        .</span><br><span class="line">       v9.10.0</span><br><span class="line">       v9.10.1</span><br><span class="line">       v9.11.0</span><br><span class="line">       v9.11.1</span><br><span class="line">       v9.11.2</span><br><span class="line">       v10.0.0</span><br><span class="line">       v10.1.0</span><br><span class="line">       v10.2.0</span><br><span class="line">       v10.2.1</span><br><span class="line">       v10.3.0</span><br><span class="line">       v10.4.0</span><br><span class="line">       .</span><br><span class="line">       .</span><br><span class="line">       .</span><br></pre></td></tr></table></figure><p>然后直接用一下命令安装最新稳定版node</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install stable</span><br></pre></td></tr></table></figure><h4 id="使用nvm无痛切换Node-js版本"><a href="#使用nvm无痛切换Node-js版本" class="headerlink" title="使用nvm无痛切换Node.js版本"></a>使用nvm无痛切换Node.js版本</h4><p>检查当前使用的 Node.js 版本使用命令 nvm ls。如果输出结果如下表示正确：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ nvm ls</span><br><span class="line">       v0.12.10</span><br><span class="line">-&gt;      v10.6.0</span><br><span class="line">         system</span><br><span class="line">default -&gt; v10.6.0</span><br><span class="line">node -&gt; stable (-&gt; v10.6.0) (default)</span><br><span class="line">stable -&gt; 10.6 (-&gt; v10.6.0) (default)</span><br><span class="line">iojs -&gt; N/A (default)</span><br><span class="line">lts/* -&gt; lts/carbon (-&gt; N/A)</span><br><span class="line">lts/argon -&gt; v4.9.1 (-&gt; N/A)</span><br><span class="line">lts/boron -&gt; v6.14.3 (-&gt; N/A)</span><br><span class="line">lts/carbon -&gt; v8.11.3 (-&gt; N/A)</span><br></pre></td></tr></table></figure><p>第一个 -&gt; 表示当前使用的版本，default -&gt; 表示默认版本，必须保证这两个，不然后面安装hexo会提示 <code>-bash: hexo: command not found</code> ，不能在命令行使用。<br>设置的方法是，先通过 <code>nvm ls</code> 看看本地安装了什么版本，如果本地没有，则应该使用上一步的方法先安装，然后执行这个命令指定版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use v10.6.0</span><br></pre></td></tr></table></figure><p>再通过这个命令指定默认版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm <span class="built_in">alias</span> default v10.6.0</span><br></pre></td></tr></table></figure><h2 id="部署Hexo"><a href="#部署Hexo" class="headerlink" title="部署Hexo"></a>部署Hexo</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>所有必备的依赖都安装完成后，即可使用 npm 安装 Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>-g 或 –global 表示全局安装模块，如果没有这个参数，会安装在当前目录的node_modules子目录下。<br>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;folder&gt;</span><br><span class="line"><span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p><code>npm install</code> 表示安装当前目录package.json文件中配置的dependencies模块。</p><h3 id="更新-Hexo"><a href="#更新-Hexo" class="headerlink" title="更新 Hexo"></a>更新 Hexo</h3><p>官方发布了新版本后，可以在Hexo建立的博客目录内运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update</span><br></pre></td></tr></table></figure><p>用如下命令可以检查package.json文件中配置的dependencies的版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ls --depth=0</span><br></pre></td></tr></table></figure><h3 id="安装-Hexo-插件"><a href="#安装-Hexo-插件" class="headerlink" title="安装 Hexo 插件"></a>安装 Hexo 插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install &lt;module&gt; --save</span><br></pre></td></tr></table></figure><p>下面是一些可选插件的安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-all-minifier --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-wordcount --save</span><br><span class="line">npm install hexo-helper-qrcode --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line">npm i -S hexo-prism-plugin</span><br><span class="line">npm install hexo-abbrlink --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h1 id="配置服务器环境"><a href="#配置服务器环境" class="headerlink" title="配置服务器环境"></a>配置服务器环境</h1><h2 id="部署-Nginx"><a href="#部署-Nginx" class="headerlink" title="部署 Nginx"></a>部署 Nginx</h2><h3 id="安装-Nginx-amp-amp-启动-Nginx"><a href="#安装-Nginx-amp-amp-启动-Nginx" class="headerlink" title="安装 Nginx &amp;&amp; 启动 Nginx"></a>安装 Nginx &amp;&amp; 启动 Nginx</h3><p>我服务器的Nginx是用Docker部署的，早已经部署好。这步暂时跳过，日后补充…（又偷懒了（逃～</p><h3 id="配置虚拟主机-amp-amp-创建新的网站目录-amp-amp-创建虚拟主机配置文件"><a href="#配置虚拟主机-amp-amp-创建新的网站目录-amp-amp-创建虚拟主机配置文件" class="headerlink" title="配置虚拟主机 &amp;&amp; 创建新的网站目录 &amp;&amp; 创建虚拟主机配置文件"></a>配置虚拟主机 &amp;&amp; 创建新的网站目录 &amp;&amp; 创建虚拟主机配置文件</h3><p>同上（逃～</p><h2 id="部署-Hexo-到服务器"><a href="#部署-Hexo-到服务器" class="headerlink" title="部署 Hexo 到服务器"></a>部署 Hexo 到服务器</h2><p>Hexo 可以使用 git 方式部署。<br>(网站的目录在下面统一用 <code>&lt;your-website&gt;</code> 代替，如你的目录在 <code>/var/www/html</code> ，那就用 <code>/var/www/html</code> 替换 <code>&lt;your-website&gt;</code> )</p><p>创建空白 git 仓库，并且设置 git hook</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">mkdir blog_hexo.git &amp;&amp; <span class="built_in">cd</span> blog_hexo.git</span><br><span class="line">git init --bare</span><br></pre></td></tr></table></figure><p>新建 post-receive 脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hooks</span><br><span class="line">touch post-receive</span><br></pre></td></tr></table></figure><p>编辑 <font color='red'>~/blog_hexo.git/hooks/post-receive</font> 脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">GIT_REPO=/home/xxx/blog_hexo.git</span><br><span class="line">TMP_GIT_CLONE=/tmp/HexoBlog</span><br><span class="line">PUBLIC_WWW=&lt;your-website&gt;</span><br><span class="line">rm -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span></span><br><span class="line">git <span class="built_in">clone</span> <span class="variable">$GIT_REPO</span> <span class="variable">$TMP_GIT_CLONE</span></span><br><span class="line">rm -rf <span class="variable">$&#123;PUBLIC_WWW&#125;</span>/*</span><br><span class="line">cp -rf <span class="variable">$&#123;TMP_GIT_CLONE&#125;</span>/* <span class="variable">$&#123;PUBLIC_WWW&#125;</span></span><br></pre></td></tr></table></figure><p>赋予脚本执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 post-receive</span><br><span class="line">//或 chmod +x post-receive</span><br></pre></td></tr></table></figure><p>注意：</p><ol><li><p>这里要先确保 <font color='red'>&lt;your-website&gt;</font> 目录下没有任何文件。备份好文件后执行一下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf &lt;your-website&gt;/*</span><br></pre></td></tr></table></figure></li><li><p>执行 <code>ls -l &lt;your-website&gt;</code> 命令检查该目录及其子目录（文件）所有者和用户组是否为你当前使用的用户。<br>若显示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drwxr-xr-x  2 root   root   4096 Jun  4 07:00 &lt;your-website&gt;</span><br></pre></td></tr></table></figure><p> 则说明你的网站目录的所有者以及用户组都是root，那么当你用git-hooks把tmp目录的静态博客拷贝到 <code>&lt;your-website&gt;</code> 时，会由于没有权限而导致拷贝失败，所以我们需要把<your-website>的所有者和用户组都改为你当前使用的用户。执行以下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown <span class="variable">$USER</span>:<span class="variable">$USER</span> -R &lt;your-website&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="配置本机"><a href="#配置本机" class="headerlink" title="配置本机"></a>配置本机</h2><p>在博客目录下运行下面命令，安装 git 部署插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>修改博客的配置文件 _config.yml，修改deploy选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  message: update</span><br><span class="line">  repo: xxx@127.0.0.1:/home/xxx/blog_hexo.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>然后运行 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code> 即可部署本地渲染网页到服务器上，之后只需要访问额你的域名就可以访问你的hexo博客啦！如我的博客是 <a href="http://reb.mallotec.com/">reb.mallotec.com</a><br><strong>注：</strong>请把127.0.0.1替换成自己服务器的ip</p><h1 id="附：Hexo-个性化–-gt-NexT主题"><a href="#附：Hexo-个性化–-gt-NexT主题" class="headerlink" title="附：Hexo 个性化–&gt;NexT主题"></a>附：Hexo 个性化–&gt;NexT主题</h1><blockquote><p>参考：<a href="http://vinnyxiong.cn/blog/Hexo%E4%B9%8B%E6%97%85-%E4%B8%89-%EF%BC%9AHexo%E5%8D%9A%E5%AE%A2%E4%B8%AA%E6%80%A7%E5%8C%96%E5%8F%8ANexT%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE.html">Hexo之旅(三)：Hexo博客个性化及NexT主题配置</a></p></blockquote><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p>NexT 主题提供了详细的 <a href="http://theme-next.iissnan.com/">使用文档</a> 。</p><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><p>主题的安装很简单，执行以下命令即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> your-hexo-folder</span><br><span class="line">mkdir themes/next</span><br><span class="line">curl -s https://api.github.com/repos/iissnan/hexo-theme-next/releases/latest | grep tarball_url | cut -d <span class="string">&#x27;&quot;&#x27;</span> -f 4 | wget -i - -O- | tar -zx -C themes/next --strip-components=1</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> your-hexo-site</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><h2 id="启用-NexT-主题"><a href="#启用-NexT-主题" class="headerlink" title="启用 NexT 主题"></a>启用 NexT 主题</h2><p>克隆/下载 完成后，打开 站点配置文件，找到<code>theme</code>字段，并将其值更改为<code>next</code>。</p><blockquote><p>这里注意区分两个配置文件：<br>站点配置文件：是你的 hexo 博客目录下面的 _config.yml 文件。<br>主题配置文件：是 themes/next 目录下的 _config.yml 文件。</p></blockquote><h2 id="验证主题是否启用（这步我没执行过-）"><a href="#验证主题是否启用（这步我没执行过-）" class="headerlink" title="验证主题是否启用（这步我没执行过= =）"></a>验证主题是否启用（这步我没执行过= =）</h2><p>运行<code>hexo s --debug</code>，并访问<code>http://localhost:4000</code>，确保站点正确运行。</p><h2 id="重新渲染博客"><a href="#重新渲染博客" class="headerlink" title="重新渲染博客"></a>重新渲染博客</h2><p>启用主题后最好重新渲染一遍博客，命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 个人经验 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
